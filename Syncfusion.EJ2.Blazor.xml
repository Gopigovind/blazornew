<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.EJ2.Blazor</name>
    </assembly>
    <members>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.Aggregates">
            <summary>
            Configures the Grid aggregate rows.
            > Check the [`Aggregates`](../../grid/aggregates/) for its configuration.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowExcelExport">
            <summary>
            If `allowExcelExport` set to true, then it will allow the user to export grid to Excel file.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowFiltering">
            <summary>
            If `allowFiltering` set to true the filter bar will be displayed.
            If set to false the filter bar will not be displayed.
            Filter bar allows the user to filter grid records with required criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowGrouping">
            <summary>
            If `allowGrouping` set to true, then it will allow the user to dynamically group or ungroup columns.
            Grouping can be done by drag and drop columns from column header to group drop area.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowMultiSorting">
            <summary>
            If `allowMultiSorting` set to true, then it will allow the user to sort multiple column in the grid.
            > `allowSorting` should be true.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowPaging">
            <summary>
            If `allowPaging` is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowPdfExport">
            <summary>
            If `allowPdfExport` set to true, then it will allow the user to export grid to Pdf file.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowReordering">
            <summary>
            If `allowReordering` is set to true, Grid columns can be reordered.
            Reordering can be done by drag and drop of a particular column from one index to another index.
            > If Grid is rendered with stacked headers, reordering is allowed only at the same level as the column headers.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowResizing">
            <summary>
            If `allowResizing` is set to true, Grid columns can be resized.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowRowDragAndDrop">
            <summary>
            If `allowRowDragAndDrop` is set to true, you can drag and drop grid rows at another grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowSelection">
            <summary>
            If `allowSelection` is set to true, it allows selection of (highlight row) Grid records by clicking it.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowSorting">
            <summary>
            If `allowSorting` is set to true, it allows sorting of grid records when column header is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AllowTextWrap">
            <summary>
            If `allowTextWrap` set to true,
            then text content will wrap to the next line when its text content exceeds the width of the Column Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ChildGrid">
            <summary>
            Defines Grid options to render child Grid.
            It requires the [`queryString`](grid/#querystring-string) for parent
            and child relationship.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ClipMode">
            <summary>
             Defines the mode of clip. The available modes are,
            `Clip`: Truncates the cell content when it overflows its area.
            `Ellipsis`: Displays ellipsis when the cell content overflows its area.
            `EllipsisWithTooltip`:  Displays ellipsis when the cell content overflows its area,
             also it will display the tooltip while hover on ellipsis is applied..
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ColumnMenuItems">
            <summary>
            `columnMenuItems` defines both built-in and custom column menu items.
            
            The available built-in items are,
             `AutoFitAll` - Auto fit the size of all columns.
             `AutoFit` - Auto fit the current column.
             `Group` - Group by current column.
             `Ungroup` - Ungroup by current column.
             `SortAscending` - Sort the current column in ascending order.
             `SortDescending` - Sort the current column in descending order.
             `Filter` - Filter options will show based on filterSettings property like checkbox filter, excel filter, menu filter.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ColumnQueryMode">
            <summary>
            `columnQueryMode`provides options to retrive data from the datasource.Their types are
             `All`: It Retrives whole datasource.
             `Schema`: Retrives data for all the defined columns in grid from the datasource.
             `ExcludeHidden`: Retrives data only for visible columns of grid from the dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.Columns">
            <summary>
            Defines the schema of dataSource.
            If the `columns` declaration is empty or undefined then the `columns` are automatically generated from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ContextMenuItems">
            <summary>
            `contextMenuItems` defines both built-in and custom context menu items.
            
            The available built-in items are,
             `AutoFitAll` - Auto fit the size of all columns.
             `AutoFit` - Auto fit the current column.
             `Group` - Group by current column.
             `Ungroup` - Ungroup by current column.
             `Edit` - Edit the current record.
             `Delete` - Delete the current record.
             `Save` - Save the edited record.
             `Cancel` - Cancel the edited state.
             `Copy` - Copy the selected records.
             `PdfExport` - Export the grid as Pdf format.
             `ExcelExport` - Export the grid as Excel format.
             `CsvExport` - Export the grid as CSV format.
             `SortAscending` - Sort the current column in ascending order.
             `SortDescending` - Sort the current column in descending order.
             `FirstPage` - Go to the first page.
             `PrevPage` - Go to the previous page.
             `LastPage` - Go to the last page.
             `NextPage` - Go to the next page.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.CurrentAction">
            <summary>
            Gets or sets the current action details.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.DataSource">
            <summary>
            It is used to render grid table rows.
            If the `dataSource` is an array of JavaScript objects,
            then Grid will create instance of [`DataManager`](https://ej2.syncfusion.com/documentation/data/api-dataManager.html)
            from this `dataSource`.
            If the `dataSource` is an existing [`DataManager`](https://ej2.syncfusion.com/documentation/data/api-dataManager.html),
             the Grid will not initialize a new one.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.DetailTemplate">
            <summary>
            The detail template allows you to show or hide additional information about a particular row.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EditSettings">
            <summary>
            Configures the edit settings.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EnableAltRow">
            <summary>
            If `enableAltRow` is set to true, the grid will render with `e-altrow` CSS class to the alternative tr elements.
            > Check the [`AltRow`](../../grid/row/#styling-alternate-rows/) to customize the styles of alternative rows.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EnableAutoFill">
            <summary>
            If `enableAutoFill` is set to true, then the auto fill icon will displayed on cell selection for copy cells.
            It requires the selection `mode` to be Cell and `cellSelectionMode` to be `Box`.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EnableColumnVirtualization">
            <summary>
            If `enableColumnVirtualization` set to true, then the Grid will render only the columns visible within the view-port
            and load subsequent columns on horizontal scrolling. This helps to load large dataset of columns in Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EnableHeaderFocus">
            <summary>
            If `enableHeaderFocus` set to true, then header element will be focused when focus moves to grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EnableHover">
            <summary>
            If `enableHover` is set to true, the row hover is enabled in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EnableVirtualization">
            <summary>
            If `enableVirtualization` set to true, then the Grid will render only the rows visible within the view-port
            and load subsequent rows on vertical scrolling. This helps to load large dataset in Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.FilterSettings">
            <summary>
            Configures the filter settings of the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.FrozenColumns">
            <summary>
            Gets or sets the number of frozen columns.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.FrozenRows">
            <summary>
            Gets or sets the number of frozen rows.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GridLines">
            <summary>
            Defines the mode of grid lines. The available modes are,
             `Both`: Displays both horizontal and vertical grid lines.
             `None`: No grid lines are displayed.
             `Horizontal`: Displays the horizontal grid lines only.
             `Vertical`: Displays the vertical grid lines only.
             `Default`: Displays grid lines based on the theme.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GroupSettings">
            <summary>
            Configures the group settings.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.Height">
            <summary>
            Defines the scrollable height of the grid content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.HierarchyPrintMode">
            <summary>
            Defines the hierarchy grid print modes. The available modes are
             `Expanded` - Prints the master grid with expanded child grids.
             `All` - Prints the master grid with all the child grids.
             `None` - Prints the master grid alone.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.PageSettings">
            <summary>
            Configures the pager in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.PagerTemplate">
            <summary>
            It used to render pager template
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.PrintMode">
            <summary>
            Defines the print modes. The available print modes are
             `AllPages`: Prints all pages of the Grid.
             `CurrentPage`: Prints the current page of the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.Query">
            <summary>
            Defines the external [`Query`](https://ej2.syncfusion.com/documentation/data/api-query.html)
            that will be executed along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.QueryString">
            <summary>
            Defines the relationship between parent and child datasource. It acts as the foreign key for parent datasource.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.RowDropSettings">
            <summary>
            Configures the row drop settings.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.RowHeight">
            <summary>
            Defines the height of Grid rows.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.RowTemplate">
            <summary>
            The row template that renders customized rows from the given template.
            By default, Grid renders a table row for every data source item.
            >  It accepts either [template string](../../common/template-engine/) or HTML element ID.
            >  The row template must be a table row.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SearchSettings">
            <summary>
            Configures the search behavior in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SelectedRowIndex">
            <summary>
            The `selectedRowIndex` allows you to select a row at initial rendering.
            You can also get the currently selected row index.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SelectionSettings">
            <summary>
            Configures the selection settings.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ShowColumnChooser">
            <summary>
            If `showColumnChooser` is set to true, it allows you to dynamically show or hide columns.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ShowColumnMenu">
            <summary>
            If `showColumnMenu` set to true, then it will enable the column menu options in each columns.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SortSettings">
            <summary>
            Configures the sort settings.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.TextWrapSettings">
            <summary>
            Configures the text wrap in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.Toolbar">
            <summary>
            `toolbar` defines the ToolBar items of the Grid.
            It contains built-in and custom toolbar items.
            If a string value is assigned to the `toolbar` option, it is considered as the template for the whole Grid ToolBar.
            If an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.
            
            The following code example implements the custom toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ToolbarTemplate">
            <summary>
            It used to render toolbar template
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.Width">
            <summary>
            Defines the Grid width.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AddRecord(System.Object,System.Nullable{System.Double})">
            <summary>
            Adds a new record to the Grid. Without passing parameters, it adds empty rows.
            > `editSettings.allowEditing` should be true.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.AutoFitColumns(System.Object)">
            <summary>
            Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.
            >  This method ignores the hidden columns.
            >  Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ClearCellSelection">
            <summary>
            Deselects the currently selected cells.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ClearFiltering(System.Object)">
            <summary>
            Clears all the filtered rows of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ClearGrouping">
            <summary>
            Clears all the grouped columns of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ClearRowSelection">
            <summary>
            Deselects the currently selected rows.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ClearSelection">
            <summary>
            Deselects the current selected rows and cells.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ClearSorting">
            <summary>
            Clears all the sorted columns of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.CloseEdit">
            <summary>
            Cancels edited state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.Copy(System.Nullable{System.Boolean})">
            <summary>
            Copy the selected rows or cells data into clipboard.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.CsvExport(Syncfusion.EJ2.Blazor.Grids.ExcelExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})">
            <summary>
            Export Grid data to CSV file.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.DeleteRecord(System.String,System.Object)">
            <summary>
            Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.
            > `editSettings.allowDeleting` should be true.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.DeleteRow(System.Object)">
            <summary>
            Delete any visible row by TR element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.DestroyTemplate(System.Object,System.Object)">
            <summary>
            Destroys the given template reference.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.DetailCollapseAll">
            <summary>
            Collapses all the detail rows of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.DetailExpandAll">
            <summary>
            Expands all the detail rows of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EditCell(System.Double,System.String)">
            <summary>
            Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EnableToolbarItems(System.Object,System.Boolean)">
            <summary>
            Enables or disables ToolBar items.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.EndEdit">
            <summary>
            If Grid is in editable state, you can save a record by invoking endEdit.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ExcelExport(Syncfusion.EJ2.Blazor.Grids.ExcelExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})">
            <summary>
            Export Grid data to Excel file(.xlsx).
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.FilterByColumn(System.String,System.String,System.Object,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Filters grid row by column name with the given options.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetBatchChanges">
            <summary>
            Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetCellFromIndex(System.Double,System.Double)">
            <summary>
            Gets a cell by row and column index.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetColumnByField(System.String)">
            <summary>
            Gets a Column by column name.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetColumnByUid(System.String)">
            <summary>
            Gets a column by UID.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetColumnFieldNames">
            <summary>
            Gets the collection of column fields.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetColumnHeaderByField(System.String)">
            <summary>
            Gets a column header by column name.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetColumnHeaderByIndex(System.Double)">
            <summary>
            Gets a column header by column index.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetColumnHeaderByUid(System.String)">
            <summary>
            Gets a column header by UID.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetColumnIndexByField(System.String)">
            <summary>
            Gets a column index by column name.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetColumnIndexByUid(System.String)">
            <summary>
            Gets a column index by UID.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetColumns(System.Nullable{System.Boolean})">
            <summary>
            Gets the columns from the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetContent">
            <summary>
            Gets the content div of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetContentTable">
            <summary>
            Gets the content table of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetCurrentViewRecords">
            <summary>
            Get current visible data of grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetDataModule">
            <summary>
            Gets the data module.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetDataRows">
            <summary>
            Gets all the Grid's data rows.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetFilteredRecords">
            <summary>
            Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetFooterContent">
            <summary>
            Gets the footer div of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetFooterContentTable">
            <summary>
            Gets the footer table element of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetForeignKeyColumns">
            <summary>
            Gets the foreign columns from Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetFrozenDataRows">
            <summary>
            Gets all the Grid's frozen table data rows.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetFrozenRowByIndex(System.Double)">
            <summary>
            Gets a frozen tables row by index.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetHeaderContent">
            <summary>
            Gets the header div of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetHeaderTable">
            <summary>
            Gets the header table element of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetHiddenColumns">
            <summary>
            Gets the hidden columns from the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetMovableCellFromIndex(System.Double,System.Double)">
            <summary>
            Gets a movable table cell by row and column index.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetMovableDataRows">
            <summary>
            Gets all the Grid's movable table data rows.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetMovableRowByIndex(System.Double)">
            <summary>
            Gets a movable tables row by index.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetMovableRows">
            <summary>
            Gets the Grid's movable content rows from frozen grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetPager">
            <summary>
            Gets the pager of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetPrimaryKeyFieldNames">
            <summary>
            Get the names of the primary key columns of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetRowByIndex(System.Double)">
            <summary>
            Gets a row by index.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetRowIndexByPrimaryKey(System.Object)">
            <summary>
            Get row index by primary key or row data.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetRowInfo(System.Object)">
            <summary>
            Get a row information based on cell
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetRows">
            <summary>
            Gets all the data rows of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetSelectedRecords">
            <summary>
            Gets the collection of selected records.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetSelectedRowCellIndexes">
            <summary>
            Gets the collection of selected row and cell indexes.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetSelectedRowIndexes">
            <summary>
            Gets the collection of selected row indexes.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetSelectedRows">
            <summary>
            Gets the collection of selected rows.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetUidByColumnField(System.String)">
            <summary>
            Gets UID by column name.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GetVisibleColumns">
            <summary>
            Gets the visible columns from the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GoToPage(System.Double)">
            <summary>
            Navigates to the specified target page.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GroupCollapseAll">
            <summary>
            Collapses all the grouped rows of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GroupColumn(System.String)">
            <summary>
            Groups a column by column name.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.GroupExpandAll">
            <summary>
            Expands all the grouped rows of the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.HideColumns(System.Object,System.String)">
            <summary>
            Hides a column by column name.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.HideScroll">
            <summary>
            Hides the scrollbar placeholder of Grid content when grid content is not overflown.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.HideSpinner">
            <summary>
            Manually showed spinner needs to hide by `hideSpinnner`.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.OpenColumnChooser(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Column chooser can be displayed on screen by given position(X and Y axis).
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.PdfExport(Syncfusion.EJ2.Blazor.Grids.PdfExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})">
            <summary>
            Export Grid data to PDF document.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.Print">
            <summary>
            By default, prints all the pages of the Grid and hides the pager.
            > You can customize print options using the
            [`printMode`](./#printmode).
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.RefreshColumns">
            <summary>
            Refreshes the Grid column changes.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.RefreshHeader">
            <summary>
            Refreshes the Grid header.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ReorderColumnByIndex(System.Double,System.Double)">
            <summary>
            Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,
            then you won't get the same results every time.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ReorderColumnByTargetIndex(System.Object,System.Double)">
            <summary>
            Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,
            then you will get the same results every time.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ReorderColumns(System.Object,System.String)">
            <summary>
            Changes the Grid column positions by field names.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ReorderRows(System.Object,System.Double)">
            <summary>
            Changes the Grid Row position with given indexes.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SaveCell">
            <summary>
            Saves the cell that is currently edited. It does not save the value to the DataSource.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.Search(System.String)">
            <summary>
            Searches Grid records using the given key.
            You can customize the default search option by using the
            [`searchSettings`](./#searchsettings/).
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SelectCell(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Selects a cell by the given index.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SelectCells(System.Object)">
            <summary>
            Selects a collection of cells by row and column indexes.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SelectCellsByRange(System.Object,System.Object)">
            <summary>
            Selects a range of cells from start and end indexes.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SelectRow(System.Double,System.Nullable{System.Boolean})">
            <summary>
            Selects a row by given index.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SelectRows(System.Object)">
            <summary>
            Selects a collection of rows by indexes.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SelectRowsByRange(System.Double,System.Nullable{System.Double})">
            <summary>
            Selects a range of rows from start and end row indexes.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SetCellValue(System.Object,System.String,System.Object)">
            <summary>
            Updates particular cell value based on the given primary key value.
            > Primary key column must be specified using `columns.isPrimaryKey` property.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SetGridContent(System.Object)">
            <summary>
            Sets the content div of the Grid to replace the old Grid content.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SetGridContentTable(System.Object)">
            <summary>
            Sets the content table of the Grid to replace the old content table.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SetGridHeaderContent(System.Object)">
            <summary>
            Sets the header div of the Grid to replace the old header.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SetGridHeaderTable(System.Object)">
            <summary>
            Sets the header table of the Grid to replace the old one.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SetGridPager(System.Object)">
            <summary>
            Sets the pager of the Grid to replace the old pager.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SetRowData(System.Object,System.Object)">
            <summary>
            Updates and refresh the particular row values based on the given primary key value.
            > Primary key column must be specified using `columns.isPrimaryKey` property.
             @param {string| number} key - Specifies the PrimaryKey value of dataSource.
             @param {Object} rowData - To update new data for the particular row.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ShowColumns(System.Object,System.String)">
            <summary>
            Shows a column by its column name.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.ShowSpinner">
            <summary>
            By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.SortColumn(System.String,Syncfusion.EJ2.Blazor.Grids.SortDirection,System.Nullable{System.Boolean})">
            <summary>
            Sorts a column with the given options.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.StartEdit">
            <summary>
            Starts edit the selected row. At least one row must be selected before invoking this method.
            `editSettings.allowEditing` should be true.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.UngroupColumn(System.String)">
            <summary>
            Ungroups a column by column name.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.UpdateCell(System.Double,System.String,System.Object)">
            <summary>
            To update the specified cell by given value without changing into edited state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.UpdateExternalMessage(System.String)">
            <summary>
            Defines the text of external message.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsGrid`1.UpdateRow(System.Double,System.Object)">
            <summary>
            To update the specified row by given values without changing into edited state.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.ClipMode">
            <summary>
            Defines the cell content's overflow mode. The available modes are
             `Clip` -  Truncates the cell content when it overflows its area.
             `Ellipsis` -  Displays ellipsis when the cell content overflows its area.
             `EllipsisWithTooltip` - Displays ellipsis when the cell content overflows its area
            also it will display tooltip while hover on ellipsis applied cell.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.ColumnQueryModeType">
            <summary>
            `columnQueryMode`provides options to retrive data from the datasource. They are
             All
             Schema
             ExcludeHidden
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.GridLine">
            <summary>
            Defines modes of GridLine, They are
             Both - Displays both the horizontal and vertical grid lines.
             None - No grid lines are displayed.
             Horizontal - Displays the horizontal grid lines only.
             Vertical - Displays the vertical grid lines only.
             Default - Displays grid lines based on the theme.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.HierarchyGridPrintMode">
            <summary>
            Hierarchy Grid Print modes are
             `Expanded` - Prints the master grid with expanded child grids.
             `All` - Prints the master grid with all the child grids.
             `None` - Prints the master grid alone.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.PrintMode">
            <summary>
            Print mode options are
             AllPages - Print all pages records of the Grid.
             CurrentPage - Print current page records of the Grid.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.TextAlign">
            <summary>
            Defines alignments of text, they are
             Left
             Right
             Center
             Justify
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.CommandButtonType">
            <summary>
            Defines the Command Buttons type.
             Edit -  Edit the current record.
             Delete - Delete the current record.
             Save - Save the current edited record.
             Cancel - Cancel the edited state.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.FilterBarMode">
            <summary>
            Filter bar mode options are
             OnEnter - Initiate filter operation after Enter key is pressed.
             Immediate -  Initiate filter operation after certain time interval. By default time interval is 1500 ms.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.FilterType">
            <summary>
            Defines types of Filter
             Menu - Specifies the filter type as menu.
             Excel - Specifies the filter type as excel.
             FilterBar - Specifies the filter type as filter bar.
             CheckBox - Specifies the filter type as check box.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.SortDirection">
            <summary>
            Defines directions of Sorting. They are
             Ascending
             Descending
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.EditMode">
            <summary>
            Defines modes of editing.
             Normal
             Dialog
             Batch
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.NewRowPosition">
            <summary>
            Defines adding new row position.
             Top
             Bottom
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.CellSelectionMode">
            <summary>
            Defines mode of cell selection.
             Flow
             Box
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.CheckboxSelectionType">
            <summary>
            Defines modes of checkbox Selection. They are
             Default
             ResetOnRowClick
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.SelectionMode">
            <summary>
            Defines modes of Selection, They are
             Row
             Cell
             Both
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.SelectionType">
            <summary>
            Defines types of Selection. They are
             Single - Allows user to select a row or cell.
             Multiple - Allows user to select multiple rows or cells.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.WrapMode">
            <summary>
            Defines the wrap mode.
             Both -  Wraps both header and content.
             Header - Wraps header alone.
             Content - Wraps content alone.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.Action">
            <summary>
            Defines Actions of the Grid. They are
             paging
             refresh
             sorting
             filtering
             selection
             rowdraganddrop
             reorder
             grouping
             ungrouping
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.AggregateType">
            <summary>
            Defines the aggregate types.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.BorderLineStyle">
            <summary>
            Defines border line style.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.ColumnType">
            <summary>
            Defines the Column Type
             String
             Number
             Boolean
             Date
             DateTime
             checkBox
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.EditType">
            <summary>
            Defines the Edit Type of the column
             DefaultEdit
             DropdownEdit
             BooleanEdit
             DatepickerEdit
             DatetimepickerEdit
             NumericEdit
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.ExcelHAlign">
            <summary>
            Defines Excel horizontal alignment.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.ExcelVAlign">
            <summary>
            Defines Excel vertical alignment.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.ExportType">
            <summary>
            Defines Export Type.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.MultipleExportType">
            <summary>
            Defines Multiple Export Type.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.PdfHAlign">
            <summary>
            Defines PDF horizontal alignment.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.PdfVAlign">
            <summary>
            Defines PDF vertical alignment.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Grids.ValueType">
            <summary>
            Exports types used by Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.AllowEditing">
            <summary>
            If `allowEditing` set to false, then it disables editing of a particular column.
            By default all columns are editable.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.AllowFiltering">
            <summary>
            If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.
            By default all columns are filterable.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.AllowGrouping">
            <summary>
            If `allowGrouping` set to false, then it disables grouping of a particular column.
            By default all columns are groupable.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.AllowReordering">
            <summary>
            If `allowReordering` set to false, then it disables reorder of a particular column.
            By default all columns can be reorder.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.AllowResizing">
            <summary>
            If `allowResizing` set to false, it disables resize option of a particular column.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.AllowSearching">
            <summary>
            If `allowSearching` set to false, then it disables Searching of a particular column.
            By default all columns allow Searching.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.AllowSorting">
            <summary>
            If `allowSorting` set to false, then it disables sorting option of a particular column.
            By default all columns are sortable.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.AutoFit">
            <summary>
            If `autoFit` set to true, then the particular column content width will be
            adjusted based on its content in the initial rendering itself.
            Setting this property as true is equivalent to calling `autoFitColumns` method in the `dataBound` event.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.ClipMode">
            <summary>
            Defines the cell content's overflow mode. The available modes are
             `Clip` -  Truncates the cell content when it overflows its area.
             `Ellipsis` -  Displays ellipsis when the cell content overflows its area.
             `EllipsisWithTooltip` - Displays ellipsis when the cell content overflows its area
            also it will display tooltip while hover on ellipsis applied cell.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Columns">
            <summary>
            Used to render multiple header rows(stacked headers) on the Grid header.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Commands">
            <summary>
            `commands` provides an option to display command buttons in every cell.
            The available built-in command buttons are
             Edit - Edit the record.
             Delete - Delete the record.
             Save - Save the record.
             Cancel - Cancel the edit state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.CustomAttributes">
            <summary>
            The CSS styles and attributes of the content cells of a particular column can be customized.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.DataSource">
            <summary>
            Defines the column data source  which will act as foreign data source.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.DefaultValue">
            <summary>
            Defines default values for the component when adding a new record to the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.DisableHtmlEncode">
            <summary>
            If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.DisplayAsCheckBox">
            <summary>
            If `displayAsCheckBox` is set to true, it displays the column value as a check box instead of Boolean value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Edit">
            <summary>
            Defines the `IEditCell`(../../grid/edit/#cell-edit-template) object to customize default edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.EditTemplate">
            <summary>
            Defines the cell edit template that used as editor for a particular column.
            It accepts either template string or HTML element ID.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.EditType">
            <summary>
            Defines the type of component for editing.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.EnableGroupByFormat">
            <summary>
            If `enableGroupByFormat` set to true, then it groups the particular column by formatted values.
            By default no columns are group by format.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Field">
            <summary>
            Defines the field name of column which is mapped with mapping name of DataSource.
            The bounded columns can be sort, filter and group etc.,
            If the `field` name contains “dot”, then it is considered as complex binding.
            The `field` name must be a valid JavaScript identifier,
            the first character must be an alphabet and should not contain spaces and special characters.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Filter">
            <summary>
             Defines the filter options to customize filtering for the particular column.
             @default null
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.FilterBarTemplate">
            <summary>
            The `filterBarTemplate` is used to add a custom component instead of default input component for filter bar.
            It have create and read functions.
             create: It is used for creating custom components.
             read: It is used to perform custom filter action.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.FilterTemplate">
            <summary>
            Defines the filter template/UI that used as filter for a particular column.
            It accepts either template string or HTML element ID.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.ForeignKeyField">
            <summary>
            Defines the mapping column name of the foreign data source.
            If it is not defined then the `columns.field` will be considered as mapping column name
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.ForeignKeyValue">
            <summary>
            Defines the display column name from the foreign data source which will be obtained from comparing local and foreign data
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Format">
            <summary>
            It is used to change display value with the given format and does not affect the original data.
            Gets the format from the user which can be standard or custom
            [`number`](../../common/internationalization/#manipulating-numbers)
            and [`date`](../../common/internationalization/#manipulating-datetime) formats.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Formatter">
            <summary>
            Defines the method which is used to achieve custom formatting from an external function.
            This function triggers before rendering of each cell.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.HeaderTemplate">
            <summary>
            Defines the column template as string or HTML element ID which is used to add customized element in the column header.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.HeaderText">
            <summary>
            Defines the header text of column which is used to display in column header.
            If `headerText` is not defined, then field name value will be assigned to header text.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.HeaderTextAlign">
            <summary>
            Define the alignment of column header which is used to align the text of column header.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.HideAtMedia">
            <summary>
            column visibility can change based on its [`Media Queries`](http://cssmediaqueries.com/what-are-css-media-queries.html).
            `hideAtMedia` accepts only valid Media Queries.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Index">
            <summary>
            Gets the unique identifier value of the column. It is used to get the object.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.IsFrozen">
            <summary>
            You can use this property to freeze selected columns in grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.IsIdentity">
            <summary>
            If `isIdentity` is set to true, then this column is considered as identity column.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.IsPrimaryKey">
            <summary>
            If `isPrimaryKey` is set to true, considers this column as the primary key constraint.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.LockColumn">
            <summary>
            Defines the mapping column name of the foreign data source.
            If it is not defined then the `columns.field` will be considered as mapping column name
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.MaxWidth">
            <summary>
            Defines the maximum width of the column in pixel or percentage, which will restrict resizing beyond this pixel or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.MinWidth">
            <summary>
            Defines the minimum width of the column in pixels or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.ShowColumnMenu">
            <summary>
            If `showColumnMenu` set to false, then it disable the column menu of a particular column.
            By default column menu will show for all columns
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.ShowInColumnChooser">
            <summary>
            If `showInColumnChooser` set to false, then hides the particular column in column chooser.
            By default all columns are displayed in column Chooser.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.SortComparer">
            <summary>
            It defines the custom sort comparer function.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Template">
            <summary>
            Defines the column template that renders customized element in each cell of the column.
            It accepts either [template string](../../common/template-engine/) or HTML element ID.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.TextAlign">
            <summary>
            Defines the alignment of the column in both header and content cells.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Type">
            <summary>
            Defines the data type of the column.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Uid">
            <summary>
            Gets the unique identifier value of the column. It is used to get the object.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.ValidationRules">
            <summary>
            `editType`(../../grid/edit/#cell-edit-type-and-its-params) Defines rules to validate data before creating and updating.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.ValueAccessor">
            <summary>
            Defines the method used to apply custom cell values from external function and display this on each cell rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Visible">
            <summary>
            If `visible` is set to false, hides the particular column. By default, all columns are displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.Width">
            <summary>
            Defines the width of the column in pixels or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridColumn.CustomFormat">
            <summary>
            Gets the format from the user which can be standard or custom
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridCommandColumn.ButtonOption">
            <summary>
            Define the button model
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridCommandColumn.Title">
            <summary>
            Define the command Button tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridCommandColumn.Type">
            <summary>
            Define the command Button type.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.CurrentPage">
            <summary>
            Defines the current page number of pager.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.CustomText">
            <summary>
            Defines the customized text to append with numeric items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.EnableExternalMessage">
            <summary>
            If `enableExternalMessage` set to true, then it adds the message to Pager.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.EnablePagerMessage">
            <summary>
            If `enablePagerMessage` set to true, then it adds the pager information.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.EnableQueryString">
            <summary>
            If `enableQueryString` set to true,
            then it pass current page information as a query string along with the URL while navigating to other page.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.ExternalMessage">
            <summary>
            Defines the external message of Pager.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.PageCount">
            <summary>
            Defines the number of pages to display in pager container.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.PageSize">
            <summary>
            Defines the records count of visible page.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.PageSizes">
            <summary>
            If `pageSizes` set to true or Array of values,
            It renders DropDownList in the pager which allow us to select pageSize from DropDownList.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.Template">
            <summary>
             Defines the template as string or HTML element ID which renders customized elements in pager instead of default elements.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.EjsPager.TotalRecordsCount">
            <summary>
            Gets or Sets the total records count which is used to render numeric container.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsPager.GetLocalizedLabel(System.String)">
            <summary>
            Gets the localized label by locale keyword.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Grids.EjsPager.GoToPage(System.Double)">
            <summary>
            Navigate to target page by given number.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridAggregate.Columns">
            <summary>
            Configures the aggregate columns.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridAggregateColumn.ColumnName">
            <summary>
            Defines the column name to display the aggregate value. If `columnName` is not defined,
            then `field` name value will be assigned to the `columnName` property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridAggregateColumn.CustomAggregate">
            <summary>
            Defines a function to calculate custom aggregate value. The `type` value should be set to `custom`.
            To use custom aggregate value in the template, use the key as `${custom}`.
            Total aggregation: The custom function will be called with the whole data and the current `AggregateColumn` object.
            Group aggregation: This will be called with the current group details and the `AggregateColumn` object.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridAggregateColumn.Field">
            <summary>
            Defines the column name to perform aggregation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridAggregateColumn.FooterTemplate">
            <summary>
            Defines the footer cell template as a string for the aggregate column.
            The `type` name should be used to access aggregate values inside the template.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridAggregateColumn.Format">
            <summary>
            Format is applied to a calculated value before it is displayed.
            Gets the format from the user, which can be standard or custom
            [`number`](../../common/internationalization/#number-formatting/)
            and [`date`](../../common/internationalization/#number-formatting/) formats.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridAggregateColumn.GroupCaptionTemplate">
            <summary>
            Defines the group caption cell template as a string for the aggregate column.
            The `type` name should be used to access aggregate values inside the template.
            Additionally, the following fields can be accessed in the template.
             field: The current grouped field name.
             key: The current grouped field value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridAggregateColumn.GroupFooterTemplate">
            <summary>
            Defines the group footer cell template as a string for the aggregate column.
            The `type` name should be used to access aggregate values inside the template.
            Additionally, the following fields can be accessed in the template.
             field: The current grouped field.
             key: The current grouped value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridAggregateColumn.Type">
            <summary>
            Defines the aggregate type of a particular column.
            To use multiple aggregates for single column, specify the `type` as array.
            Types of aggregate are,
             sum
             average
             max
             min
             count
             truecount
             falsecount
             custom
            > Specify the `type` value as `custom` to use custom aggregation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.AllowAdding">
            <summary>
            If `allowAdding` is set to true, new records can be added to the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.AllowDeleting">
            <summary>
            If `allowDeleting` is set to true, existing record can be deleted from the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.AllowEditOnDblClick">
            <summary>
            If `allowEditOnDblClick` is set to false, Grid will not allow editing of a record on double click.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.AllowEditing">
            <summary>
            If `allowEditing` is set to true, values can be updated in the existing record.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.AllowNextRowEdit">
            <summary>
            If allowNextRowEdit is set to true, editing is done to next row. By default allowNextRowEdit is set to false.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.Dialog">
            <summary>
            Defines the dialog params to edit.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.Mode">
            <summary>
            Defines the mode to edit. The available editing modes are:
             Normal
             Dialog
             Batch
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.NewRowPosition">
            <summary>
            Defines the position of adding a new row. The available position are:
             Top
             Bottom
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.ShowConfirmDialog">
            <summary>
            if `showConfirmDialog` is set to false, confirm dialog does not show when batch changes are saved or discarded.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.ShowDeleteConfirmDialog">
            <summary>
            If `showDeleteConfirmDialog` is set to true, confirm dialog will show delete action. You can also cancel delete command.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEditSettings.Template">
            <summary>
            Defines the custom edit elements for the dialog template.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnActionBegin">
            <summary>
            Triggers when Grid actions such as sorting, filtering, paging, grouping etc., starts.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnActionComplete">
            <summary>
            Triggers when Grid actions such as sorting, filtering, paging, grouping etc. are completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnActionFailure">
            <summary>
            Triggers when any Grid action failed to achieve the desired results.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnBatchAdd">
            <summary>
            Triggers before records are added in batch mode.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnBatchDelete">
            <summary>
            Triggers before records are deleted in batch mode.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnBatchSave">
            <summary>
            Triggers before records are saved in batch mode.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnDataBound">
            <summary>
            Triggers before data is bound to Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnPdfExport">
            <summary>
            Triggers before Grid data is exported to PDF document.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnBeginEdit">
            <summary>
            Triggers before the record is to be edit.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnCellEdit">
            <summary>
            Triggers when the cell is being edited.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnCellSave">
            <summary>
            Triggers when cell is saved.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.CellSaved">
            <summary>
            Triggers when cell is saved.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.CellSelected">
            <summary>
            Triggers after a cell is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.CellSelecting">
            <summary>
            Triggers before any cell selection occurs.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.ColumnMenuItemClicked">
            <summary>
            Triggers when click on column menu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.CommandClicked">
            <summary>
            Triggers when command button is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.ContextMenuItemClicked">
            <summary>
            Triggers when click on context menu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.DataBound">
            <summary>
            Triggers when data source is populated in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.DetailDataBound">
            <summary>
            Triggers after detail row expands.
            > This event triggers at initial expand.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.HeaderCellInfo">
            <summary>
            Triggered for stacked header.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnLoad">
            <summary>
            This event allows customization of Grid properties before rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.QueryCellInfo">
            <summary>
            Triggered every time a request is made to access cell information, element, or data.
            This will be triggered before the cell element is appended to the Grid element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnRecordDoubleClick">
            <summary>
            Triggers when record is double clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnResizeStart">
            <summary>
            Triggers when column resize starts.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.ResizeStopped">
            <summary>
            Triggers when column resize ends.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.RowDataBound">
            <summary>
            Triggered every time a request is made to access row information, element, or data.
            This will be triggered before the row element is appended to the Grid element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.RowDeselected">
            <summary>
            Triggers when a selected row is deselected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.RowDeselecting">
            <summary>
            Triggers before deselecting the selected row.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.RowSelected">
            <summary>
            Triggers after a row is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.RowSelecting">
            <summary>
            Triggers before row selection occurs.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridEvents`1.OnToolbarClick">
            <summary>
            Triggers when toolbar item is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterColumn.Field">
            <summary>
            Defines the field name of the filter column.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterColumn.IgnoreAccent">
            <summary>
            If ignoreAccent is set to true, then filter ignores the diacritic characters or accents while filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterColumn.MatchCase">
            <summary>
            If match case set to true, then filter records with exact match or else
            filter records with case insensitive(uppercase and lowercase letters treated as same).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterColumn.Operator">
            <summary>
            Defines the operator to filter records. The available operators and its supported data types are:
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterColumn.Predicate">
            <summary>
            Defines the relationship between one filter query and another by using AND or OR predicate.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterColumn.Uid">
            <summary>
            Defines the UID of filter column.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterColumn.Value">
            <summary>
            Defines the value used to filter records.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterSettings.Columns">
            <summary>
            Specifies the columns to be filtered at initial rendering of the Grid. You can also get the columns that were currently filtered.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterSettings.EnableCaseSensitivity">
            <summary>
            If `enableCaseSensitivity` is set to true then searches grid records with exact match based on the filter
            operator. It will have no effect on number, boolean and Date fields.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterSettings.IgnoreAccent">
            <summary>
            If ignoreAccent set to true, then filter ignores the diacritic characters or accents while filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterSettings.ImmediateModeDelay">
            <summary>
            Defines the time delay (in milliseconds) in filtering records when the `Immediate` mode of filter bar is set.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterSettings.Mode">
            <summary>
            Defines the filter bar modes. The available options are,
             `OnEnter`: Initiates filter operation after Enter key is pressed.
             `Immediate`: Initiates filter operation after a certain time interval. By default, time interval is 1500 ms.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterSettings.Operators">
            <summary>
            The `operators` is used to override the default operators in filter menu. This should be defined by type wise
            (string, number, date and boolean). Based on the column type, this customize operator list will render in filter menu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterSettings.ShowFilterBarStatus">
            <summary>
            Shows or hides the filtered status message on the pager.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridFilterSettings.Type">
            <summary>
            Defines options for filtering type. The available options are
             `Menu` - Specifies the filter type as menu.
             `CheckBox` - Specifies the filter type as checkbox.
             `FilterBar` - Specifies the filter type as filterbar.
             `Excel` - Specifies the filter type as checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridGroupSettings.CaptionTemplate">
            <summary>
            The Caption Template allows user to display the string or HTML element in group caption.
            > It accepts either the
            [template string](http://ej2.syncfusion.com/documentation/common/template-engine/) or the HTML element ID.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridGroupSettings.Columns">
            <summary>
            Specifies the column names to group at initial rendering of the Grid.
            You can also get the currently grouped columns.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridGroupSettings.DisablePageWiseAggregates">
            <summary>
            If `disablePageWiseAggregates` set to true, then the group aggregate value will
            be calculated from the whole data instead of paged data and two requests will be made for each page
            when Grid bound with remote service.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridGroupSettings.ShowDropArea">
            <summary>
            If `showDropArea` is set to true, the group drop area element will be visible at the top of the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridGroupSettings.ShowGroupedColumn">
            <summary>
            If `showGroupedColumn` is set to false, it hides the grouped column after grouping.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridGroupSettings.ShowToggleButton">
            <summary>
            If `showToggleButton` set to true, then the toggle button will be showed in the column headers which can be used to group
            or ungroup columns by clicking them.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridGroupSettings.ShowUngroupButton">
            <summary>
            If `showUngroupButton` set to false, then ungroup button is hidden in dropped element.
            It can be used to ungroup the grouped column when click on ungroup button.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridPageSettings.CurrentPage">
            <summary>
            Defines the current page number of the pager.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridPageSettings.EnableQueryString">
            <summary>
            If `enableQueryString` set to true,
            then it pass current page information as a query string along with the URL while navigating to other page.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridPageSettings.PageCount">
            <summary>
            Defines the number of pages to be displayed in the pager container.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridPageSettings.PageSize">
            <summary>
            Defines the number of records to be displayed per page.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridPageSettings.PageSizes">
            <summary>
            If `pageSizes` set to true or Array of values,
            It renders DropDownList in the pager which allow us to select pageSize from DropDownList.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridPageSettings.Template">
            <summary>
            Defines the template which renders customized elements in pager instead of default elements.
            It accepts either [template string](../../common/template-engine/) or HTML element ID.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridRowDropSettings.TargetID">
            <summary>
            Defines the ID of droppable component on which row drop should occur.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSearchSettings.Fields">
            <summary>
            Specifies the collection of fields included in search operation. By default, bounded columns of the Grid are included.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSearchSettings.IgnoreAccent">
            <summary>
            If ignoreAccent set to true, then filter ignores the diacritic characters or accents while filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSearchSettings.IgnoreCase">
            <summary>
            If `ignoreCase` is set to false, searches records that match exactly, else
            searches records that are case insensitive(uppercase and lowercase letters treated the same).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSearchSettings.Key">
            <summary>
            Specifies the key value to search Grid records at initial rendering.
            You can also get the current search key.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSearchSettings.Operator">
            <summary>
            Defines the operator to search records. The available operators are:
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings.CellSelectionMode">
            <summary>
            The cell selection modes are flow and box. It requires the selection
            [`mode`](grid/#mode-selectionmode/) to be either cell or both.
             `Flow`: Selects the range of cells between start index and end index that also includes the other cells of the selected rows.
             `Box`: Selects the range of cells within the start and end column indexes that includes in between cells of rows within the range.
             `BoxWithBorder`: Selects the range of cells as like Box mode with borders.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings.CheckboxMode">
            <summary>
            Defines options for checkbox selection Mode. They are
             `Default`: This is the default value of the checkboxMode. In this mode, user can select multiple rows by clicking rows one by one.
             `ResetOnRowClick`: In ResetOnRowClick mode, on clicking a row it will reset previously selected row and also multiple
             rows can be selected by using CTRL or SHIFT key.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings.CheckboxOnly">
            <summary>
            If 'checkboxOnly' set to true, then the Grid selection is allowed only through checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings.EnableSimpleMultiRowSelection">
            <summary>
            If 'enableSimpleMultiRowSelection' set to true, then the user can able to perform multiple row selection with single clicks.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings.EnableToggle">
            <summary>
            If 'enableToggle' set to true, then the user can able to perform toggle for the selected row.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings.Mode">
            <summary>
            Grid supports row, cell, and both (row and cell) selection mode.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings.PersistSelection">
            <summary>
            If 'persistSelection' set to true, then the Grid selection is persisted on all operations.
            For persisting selection in the Grid, any one of the column should be enabled as a primary key.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings.Type">
            <summary>
            Defines options for selection type. They are
             `Single`: Allows selection of only a row or a cell.
             `Multiple`: Allows selection of multiple rows or cells.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSortColumn.Direction">
            <summary>
            Defines the direction of sort column.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSortColumn.Field">
            <summary>
            Defines the field name of sort column.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSortSettings.AllowUnsort">
            <summary>
            If `allowUnsort` set to false the user can not get the grid in unsorted state by clicking the sorted column header.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridSortSettings.Columns">
            <summary>
            Specifies the columns to sort at initial rendering of Grid.
            Also user can get current sorted columns.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.GridTextWrapSettings.WrapMode">
            <summary>
            Defines the `wrapMode` of the Grid. The available modes are:
             `Both`: Wraps both the header and content.
             `Content`: Wraps the header alone.
             `Header`: Wraps the content alone.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.PagerEvents.Click">
            <summary>
            Triggers when click on the numeric items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.PagerEvents.Created">
            <summary>
            Triggers when Pager is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Grids.PagerEvents.DropDownChanged">
            <summary>
            Triggers after pageSize is selected in DropDownList.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.NonFlagStringEnumConverter">
            <summary>
            Used to convert the enum integer values into string
            Also, ignores the string conversion of number enum
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.Content">
            <summary>
            Defines the text `content` of the Button element.
            {% codeBlock src='button/content/index.md' %}{% endcodeBlock %}
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the Button element. The Button types, styles, and
            size can be defined by using
            [`this`](http://ej2.syncfusion.com/documentation/button/howto.html?lang=typescript#create-a-block-button).
            {% codeBlock src='button/cssClass/index.md' %}{% endcodeBlock %}
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.Disabled">
            <summary>
            Specifies a value that indicates whether the Button is `disabled` or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the Button that is used to include an icon.
            Buttons can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.IconPosition">
            <summary>
            Positions the icon before/after the text content in the Button.
            The possible values are:
             Left: The icon will be positioned to the left of the text content.
             Right: The icon will be positioned to the right of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.IsPrimary">
            <summary>
            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.IsToggle">
            <summary>
            Makes the Button toggle, when set to `true`. When you click it, the state changes from normal to active.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.Created">
            <summary>
            Triggers once the component rendering is completed.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsButton.Click">
            <summary>
            Click the button element
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsButton.FocusIn">
            <summary>
            Sets the focus to Button
            its native method
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsButton.Type">
            <summary>
            Defines the `type` of the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.Checked">
            <summary>
            Specifies a value that indicates whether the CheckBox is `checked` or not.
            When set to `true`, the CheckBox will be in `checked` state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the CheckBox element.
            You can add custom styles to the CheckBox by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.Disabled">
            <summary>
            Specifies a value that indicates whether the CheckBox is `disabled` or not.
            When set to `true`, the CheckBox will be in `disabled` state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.Indeterminate">
            <summary>
            Specifies a value that indicates whether the CheckBox is in `indeterminate` state or not.
            When set to `true`, the CheckBox will be in `indeterminate` state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.Label">
            <summary>
            Defines the caption for the CheckBox, that describes the purpose of the CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.LabelPosition">
            <summary>
            Positions label `before`/`after` the CheckBox.
            The possible values are:
             Before - The label is positioned to left of the CheckBox.
             After - The label is positioned to right of the CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.Name">
            <summary>
            Defines `name` attribute for the CheckBox.
            It is used to reference form data (CheckBox value) after a form is submitted.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.Value">
            <summary>
            Defines `value` attribute for the CheckBox.
            It is a form data passed to the server when submitting the form.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.ValueChange">
            <summary>
            Triggers when the CheckBox state has been changed by user interaction.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.Created">
            <summary>
            Triggers once the component rendering is completed.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.Click">
            <summary>
            Click the CheckBox element
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsCheckBox.FocusIn">
            <summary>
            Sets the focus to CheckBox
            its native method
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.AvatarIconCss">
            <summary>
            This avatarIconCss property helps to customize avatar element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.AvatarText">
            <summary>
            This avatarText property helps to customize avatar content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.Chips">
            <summary>
            This chips property helps to render ChipList component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.CssClass">
            <summary>
            This cssClass property helps to customize ChipList component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.EnableDelete">
            <summary>
            This enableDelete property helps to enable delete functionality.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.Enabled">
            <summary>
            This enabled property helps to enable/disable ChipList component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.LeadingIconCss">
            <summary>
            This leadingIconCss property helps to customize leading icon element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.SelectedChips">
            <summary>
            This selectedChips property helps to select chip items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.Selection">
            <summary>
            This selection property enables chip selection type.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.Text">
            <summary>
            This text property helps to render Chip component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.TrailingIconCss">
            <summary>
            This trailingIconCss property helps to customize trailing icon element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.Add(System.Object)">
            <summary>
            A function that adds chip items based on given input.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.Find(System.Object)">
            <summary>
            A function that finds chip based on given input.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.GetSelectedChips">
            <summary>
            A function that returns selected chips data.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.Remove(System.Object)">
            <summary>
            A function that removes chip items based on given input.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsChipList.Select(System.Object)">
            <summary>
            A function that selects chip items based on given input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.Checked">
            <summary>
            Specifies a value that indicates whether the RadioButton is `checked` or not.
            When set to `true`, the RadioButton will be in `checked` state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the RadioButton element.
            You can add custom styles to the RadioButton by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.Disabled">
            <summary>
            Specifies a value that indicates whether the RadioButton is `disabled` or not.
            When set to `true`, the RadioButton will be in `disabled` state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.Label">
            <summary>
            Defines the caption for the RadioButton, that describes the purpose of the RadioButton.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.LabelPosition">
            <summary>
            Positions label `before`/`after` the RadioButton.
            The possible values are:
             Before: The label is positioned to left of the RadioButton.
             After: The label is positioned to right of the RadioButton.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.Name">
            <summary>
            Defines `name` attribute for the RadioButton.
            It is used to reference form data (RadioButton value) after a form is submitted.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.Value">
            <summary>
            Defines `value` attribute for the RadioButton.
            It is a form data passed to the server when submitting the form.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.ValueChange">
            <summary>
            Event trigger when the RadioButton state has been changed by user interaction.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.Created">
            <summary>
            Triggers once the component rendering is completed.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.Click">
            <summary>
            Click the RadioButton element
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.FocusIn">
            <summary>
            Sets the focus to RadioButton
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsRadioButton.GetSelectedValue">
            <summary>
            To get the value of selected radio button in a group.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.Checked">
            <summary>
            Specifies a value that indicates whether the Switch is `checked` or not.
            When set to `true`, the Switch will be in `checked` state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.CssClass">
            <summary>
            You can add custom styles to the Switch by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.Disabled">
            <summary>
            Specifies a value that indicates whether the Switch is `disabled` or not.
            When set to `true`, the Switch will be in `disabled` state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.Name">
            <summary>
            Defines `name` attribute for the Switch.
            It is used to reference form data (Switch value) after a form is submitted.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.OffLabel">
            <summary>
            Specifies a text that indicates the Switch is in unchecked state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.OnLabel">
            <summary>
            Specifies a text that indicates the Switch is in checked state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.Value">
            <summary>
            Defines `value` attribute for the Switch.
            It is a form data passed to the server when submitting the form.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.ValueChange">
            <summary>
            Triggers when Switch state has been changed by user interaction.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.Created">
            <summary>
            Triggers once the component rendering is completed.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.Click">
            <summary>
            Click the switch element
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.FocusIn">
            <summary>
            Sets the focus to Switch
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Buttons.EjsSwitch.Toggle">
            <summary>
            Toggle the Switch component state into checked/unchecked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListChip.AvatarIconCss">
            <summary>
            This avatarIconCss property helps to customize avatar element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListChip.AvatarText">
            <summary>
            This avatarText property helps to customize avatar content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListChip.CssClass">
            <summary>
            This cssClass property helps to customize ChipList component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListChip.Enabled">
            <summary>
            This enabled property helps to enable/disable ChipList component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListChip.LeadingIconCss">
            <summary>
            This leadingIconCss property helps to customize leading icon element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListChip.Text">
            <summary>
            This text property helps to render ChipList component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListChip.TrailingIconCss">
            <summary>
            This trailingIconCss property helps to customize trailing icon element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListChip.Value">
            <summary>
            This value property helps to store the ChipList component values.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListEvents.OnBeforeClick">
            <summary>
            This click event will get triggered once the chip is before click.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListEvents.OnClick">
            <summary>
            This click event will get triggered once the chip is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListEvents.Created">
            <summary>
            This created event will get triggered once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Buttons.ChipListEvents.OnDelete">
            <summary>
            This delete event will get triggered before removing the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsCalendar`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsCalendar`1.IsMultiSelection">
            <summary>
            Specifies the option to enable the multiple dates selection of the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsCalendar`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsCalendar`1.Values">
            <summary>
            Gets or sets multiple selected dates of the calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsCalendar`1.AddDate(System.Object)">
            <summary>
            This method is used to add the single or multiple dates to the values property of the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsCalendar`1.GetPersistData">
            <summary>
            Gets the properties to be maintained upon browser refresh.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsCalendar`1.RemoveDate(System.Object)">
            <summary>
            This method is used to remove the single or multiple dates from the values property of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.AllowEdit">
            <summary>
            > Support for `allowEdit` has been provided from
            [`v16.2.46`](https://ej2.syncfusion.com/angular/documentation/release-notes/16.2.46/#datepicker).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.CssClass">
            <summary>
            Specifies the root CSS class of the DatePicker that allows to
            customize the appearance by overriding the styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.Enabled">
            <summary>
            Specifies the component to be disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.FloatLabelType">
            <summary>
            Specifies the placeholder text to be floated.
            Possible values are:
            Never: The label will never float in the input when the placeholder is available.
            Always: The floating label will always float above the input.
            Auto: The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.Format">
            <summary>
            Specifies the format of the value that to be displayed in component. By default, the format is based on the culture.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.Placeholder">
            <summary>
            Specifies the placeholder text that displayed in textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.Readonly">
            <summary>
            Specifies the component in readonly state. When the Component is readonly it does not allow user input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon in textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.StrictMode">
            <summary>
            Specifies the component to act as strict. So that, it allows to enter only a valid date  value within a specified range or else it
            will resets to previous value. By default, strictMode is in false.
            it allows invalid or out-of-range date value with highlighted error class.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.Width">
            <summary>
            Specifies the width of the DatePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.ZIndex">
            <summary>
            specifies the z-index value of the datePicker popup element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.AddDate(System.Object)">
            <summary>
            This method is used to add the single or multiple dates to the values property of the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.FocusIn(System.Nullable{System.Boolean})">
            <summary>
            Sets the focus to widget for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.FocusOut">
            <summary>
            Remove the focus from widget, if the widget is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.GetPersistData">
            <summary>
            Gets the properties to be maintained upon browser refresh.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.RemoveDate(System.Object)">
            <summary>
            This method is used to remove the single or multiple dates from the values property of the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.OnInitializedAsync">
            <summary>
            Life cycle OnInitializedAsync method. Triggers asynchronously during component initialization.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.OnParametersSetAsync">
            <summary>
            Life cycle OnParametersSetAsync method. Triggers asynchronously when the component has received parameters from its parent and the values are assigned to properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Life cycle OnParametersSetAsync method. Triggers asynchronously when the component has finished rendering.
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.CreateJsAdaptor">
            <summary>
            Initializing the JSInteropAdaptor in DatePicker.
            </summary>
            <returns>Component instance</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.clearValue">
            <summary>
            Empties the internal value properties.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.setPopupVisibility(System.Boolean)">
            <summary>
            Sets popup visibility based on the provided arguments.
            </summary>
            <param name="args">Boolean</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.setInputValue(System.Object)">
            <summary>
            Updates the internal value property based on the value.
            </summary>
            <param name="value">Input Value</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.setStrictMode(System.String)">
            <summary>
            Checks strict mode, Min and Max values to add error class
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.DateIconClickHandler">
            <summary>
            Event handler for date icon click. Shows or hides the popup element.
            </summary>
            <param name="args">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.updateCalendarProperty(System.String,System.Object)">
            <summary>
            Triggers when a child property is updated.
            </summary>
            <param name="key">Property name</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.propertyInitialized">
            <summary>
            Initialize the properties during render
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.propertyParametersSet">
            <summary>
            Update the properties during parametersSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.updateValue(System.Object)">
            <summary>
            Updated the value in the component's internal value property
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.getDefaultFormat">
            <summary>
            Method to get the default format based on culture, if none specified.
            </summary>
            <returns>Returns string format</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.getDefaultCulture">
            <summary>
            Method to get the default cultureinfo
            </summary>
            <returns>Cultureinfo</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.isNullorEmpty(System.String)">
            <summary>
            Method to check whether the given string variable is null or empty
            </summary>
            <param name="value">String Value</param>
            <returns>The result whether the string is empty or not</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.strictModeUpdate(System.String)">
            <summary>
            Method to check strict mode and add error class
            </summary>
            <param name="value">String input value</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.checkMinMax(System.DateTime)">
            <summary>
            Method to check min and max values
            </summary>
            <param name="value"></param>
            <returns>Valid DateTime</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.strictModeValueUpdate(`0,System.Type)">
            <summary>
            Updates the strict mode evaluated value in the input and internal variables
            </summary>
            <param name="tempDate"></param>
            <param name="type"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.nonStrictValueUpdate(`0,System.Type,System.Boolean)">
            <summary>
            Updated the validation class to input element and adds the value to the internal variables
            </summary>
            <param name="tempDate"></param>
            <param name="type"></param>
            <param name="isValidDate"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.closePopup">
            <summary>
            Method to close the popup calendar
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.triggerClientPopupRender">
            <summary>
            Method to trigger the client-side actions once the popup is displayed when date icon is clicked.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.Show">
            <summary>
            Shows the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.Hide(System.Object)">
            <summary>
            Hide the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.CurrentView">
            <summary>
            Gets the current view of the DatePicker.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker`1.NavigateTo(Syncfusion.EJ2.Blazor.Calendars.CalendarView,`0)">
            <summary>
            Navigates to specified month or year or decade view of the DatePicker.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Calendars.CalendarView">
            <summary>
            Specifies the view of the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.Max">
            <summary>
            Gets or sets the maximum date that can be selected in the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.Min">
            <summary>
            Gets or sets the minimum date that can be selected in the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.FirstDayOfWeek">
            <summary>
            Gets or sets the Calendar's first day of the week. By default, the first day of the week will be based on the current culture.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.CalendarMode">
            <summary>
            Gets or sets the Calendar's Type like gregorian or islamic.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.DayHeaderFormat">
            <summary>
            Specifies the format of the day that to be displayed in header. By default, the format is short.
            Possible formats are:
             `Short` - Sets the short format of day name (like Su ) in day header.
             `Narrow` - Sets the single character of day name (like S ) in day header.
             `Abbreviated` - Sets the min format of day name (like Sun ) in day header.
             `Wide` - Sets the long format of day name (like Sunday ) in day header.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.Depth">
            <summary>
            Sets the maximum level of view such as month, year, and decade in the Calendar.
            Depth view should be smaller than the start view to restrict its view navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads. If enabled, following list of states will be persisted.
            1. value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.KeyConfigs">
            <summary>
            Customizes the key actions in Calendar.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.Start">
            <summary>
            Specifies the initial view of the Calendar when it is opened.
            With the help of this property, initial view can be changed to year or decade view.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.ServerTimezoneOffset">
            <summary>
            By default, the date value will be processed based on system time zone.
            If you want to process the initial date value using server time zone
            then specify the time zone value to `serverTimezoneOffset` property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.ShowTodayButton">
            <summary>
            Specifies whether the today button is to be displayed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.WeekNumber">
            <summary>
            Determines whether the week number of the year is to be displayed in the calendar or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarBase`1.Value">
            <summary>
            Gets or sets the selected date of the Calendar.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Calendars.Internal.DatePickerJSInteropAdaptor`1">
            <summary>
            JSInterop Adaptor for DatePicker component
            </summary>
            <typeparam name="TValue">Accepts generic type parameter</typeparam>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.Internal.DatePickerJSInteropAdaptor`1.#ctor(Syncfusion.EJ2.Blazor.Calendars.EjsDatePicker{`0})">
            <summary>
            Constructor for initializing the component adaptor
            </summary>
            <param name="parent">DatePicker arguments</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.Internal.DatePickerJSInteropAdaptor`1.Create">
            <summary>
            Creates DotNet Object reference
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.Internal.DatePickerJSInteropAdaptor`1.OnPopupHide(System.Boolean)">
            <summary>
            Sets the popup visibility based on the boolean argument.
            True - displays the popup.
            False - hides the popup.
            </summary>
            <param name="args">Boolean to toggle popup visibility</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.Internal.DatePickerJSInteropAdaptor`1.OnValueCleared">
            <summary>
            To clear the server-side Value and internal value property
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.Internal.DatePickerJSInteropAdaptor`1.OnValueInput(System.Object)">
            <summary>
            To update the calendar selection based on the entered input
            </summary>
            <param name="value">Input value</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.Internal.DatePickerJSInteropAdaptor`1.OnStrictModeUpdate(System.String)">
            <summary>
            To update strictMode, check Min and Max and add error class.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.Internal.DatePickerJSInteropAdaptor`1.OnDateIconClick">
            <summary>
            To render the popup element in the DOM
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarEvents`1.Created">
            <summary>
            Triggers when Calendar is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarEvents`1.Destroyed">
            <summary>
            Triggers when Calendar is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another level or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.CalendarEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DatePickerEvents`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DatePickerEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DatePickerEvents`1.Cleared">
            <summary>
            Triggers when datepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DatePickerEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DatePickerEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DatePickerEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DatePickerEvents`1.Focus">
            <summary>
             Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DatePickerEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another level or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DatePickerEvents`1.OnOpen">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DatePickerEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.Blur">
            <summary>
            Triggers when the control loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.Cleared">
            <summary>
            Triggers when daterangepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.OnClose">
            <summary>
            Triggers when the DateRangePicker is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.Created">
            <summary>
            Triggers when Calendar is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.Destroyed">
            <summary>
            Triggers when Calendar is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.Focus">
            <summary>
             Triggers when the control gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another view or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.OnOpen">
            <summary>
            Triggers when the DateRangePicker is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerEvents.RangeSelected">
            <summary>
            Triggers on selecting the start and end date.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerPreset.End">
            <summary>
            Defines the end date of the preset range
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerPreset.Label">
            <summary>
            Defines the label string of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateRangePickerPreset.Start">
            <summary>
            Defines the start date of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateTimePickerEvents`1.Blur">
            <summary>
            Triggers when input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateTimePickerEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateTimePickerEvents`1.Cleared">
            <summary>
            Triggers when datetimepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateTimePickerEvents`1.OnClose">
            <summary>
            Triggers when popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateTimePickerEvents`1.Created">
            <summary>
            Triggers when DateTimePicker is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateTimePickerEvents`1.Destroyed">
            <summary>
            Triggers when DateTimePicker is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateTimePickerEvents`1.Focus">
            <summary>
            Triggers when input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateTimePickerEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another level or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateTimePickerEvents`1.OnOpen">
            <summary>
            Triggers when popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.DateTimePickerEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.AllowEdit">
            <summary>
            > Support for `allowEdit` has been provided from
            [`v16.2.46`](https://ej2.syncfusion.com/angular/documentation/release-notes/16.2.46/#daterangepicker).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.CssClass">
            <summary>
             Sets the root CSS class to the DateRangePicker which allows you to customize the appearance.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Depth">
            <summary>
            Sets the maximum level of view (month, year, decade) in the Calendar.
            Depth view should be smaller than the start view to restrict its view navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.EnablePersistence">
            <summary>
            Enable or disable the persisting component's state between the page reloads. If enabled, following list of states will be persisted.
            1. startDate
            2. endDate
            3. value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Enabled">
            <summary>
            Specifies the component to be disabled which prevents the DateRangePicker from user interactions.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.EndDate">
            <summary>
            Gets or sets the end date of the date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.FirstDayOfWeek">
            <summary>
            Gets or sets the Calendar's first day of the week. By default, the first day of the week will be based on the current culture.
            > For more details about firstDayOfWeek refer to
            [`First day of week`](../../daterangepicker/customization#first-day-of-week) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.FloatLabelType">
            <summary>
            Specifies the placeholder text to be floated.
            Possible values are:
            Never: The label will never float in the input when the placeholder is available.
            Always: The floating label will always float above the input.
            Auto: The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Format">
            <summary>
            Sets or gets the required date format to the start and end date string.
            > For more details refer to
            [`Format`](https://ej2.syncfusion.com/demos/#/material/daterangepicker/format.html)sample.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.KeyConfigs">
            <summary>
            Customizes the key actions in DateRangePicker.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Max">
            <summary>
            Gets or sets the maximum date that can be selected in the calendar-popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.MaxDays">
            <summary>
             Specifies the maximum span of days that can be allowed in a date range selection.
            > For more details refer to
            [`Range Span`](../../daterangepicker/range-restriction/#range-span) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Min">
            <summary>
            Gets or sets the minimum date that can be selected in the calendar-popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.MinDays">
            <summary>
             Specifies the minimum span of days that can be allowed in date range selection.
            > For more details refer to
            [`Range Span`](../../daterangepicker/range-restriction/#range-span) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Placeholder">
            <summary>
            Specifies the placeholder text that need to be displayed in the DateRangePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Presets">
            <summary>
            Set the predefined ranges which let the user pick required range easily in a component.
            > For more details refer to
            [`Preset Ranges`](../../daterangepicker/customization#preset-ranges) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Readonly">
            <summary>
            Denies the editing the ranges in the DateRangePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Separator">
            <summary>
            Sets or gets the string that used between the start and end date string.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Start">
            <summary>
            Specifies the initial view of the Calendar when it is opened.
            With the help of this property, initial view can be changed to year or decade view.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.StartDate">
            <summary>
            Gets or sets the start date of the date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.StrictMode">
            <summary>
            Specifies the component to act as strict which allows entering only a valid date range in a DateRangePicker.
            > For more details refer to
            [`Strict Mode`](../../daterangepicker/range-restriction#strict-mode)documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Value">
            <summary>
            Gets or sets the start and end date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.WeekNumber">
            <summary>
            Determines whether the week number of the Calendar is to be displayed or not.
            The week number is displayed in every week row.
            > For more details about weekNumber refer to
            [`Calendar with week number`](../../calendar/how-to/week-number#render-the-calendar-with-week-numbers)documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Width">
            <summary>
            Specifies the width of the DateRangePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.ZIndex">
            <summary>
            specifies the z-index value of the dateRangePicker popup element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.FocusIn">
            <summary>
            Sets the focus to widget for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.FocusOut">
            <summary>
            Remove the focus from widget, if the widget is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.GetPersistData">
            <summary>
            Return the properties that are maintained upon browser refresh.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.GetSelectedRange">
            <summary>
            Return the selected range and day span in the DateRangePicker.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Hide(System.Object)">
            <summary>
            To close the Popup container in the DateRangePicker component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateRangePicker.Show(System.Object,System.Object)">
            <summary>
            To open the Popup container in the DateRangePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.AllowEdit">
            <summary>
            > Support for `allowEdit` has been provided from
            [`v16.2.46`](https://ej2.syncfusion.com/angular/documentation/release-notes/16.2.46/#datetimepicker).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.CalendarMode">
            <summary>
            Gets or sets the Calendar's Type like gregorian or islamic.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.CssClass">
            <summary>
            Specifies the root CSS class of the DatePicker that allows to
            customize the appearance by overriding the styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.DayHeaderFormat">
            <summary>
            Specifies the format of the day that to be displayed in header. By default, the format is ‘short’.
            Possible formats are:
             `Short` - Sets the short format of day name (like Su ) in day header.
             `Narrow` - Sets the single character of day name (like S ) in day header.
             `Abbreviated` - Sets the min format of day name (like Sun ) in day header.
             `Wide` - Sets the long format of day name (like Sunday ) in day header.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Depth">
            <summary>
            Sets the maximum level of view such as month, year, and decade in the Calendar.
            Depth view should be smaller than the start view to restrict its view navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads. If enabled, following list of states will be persisted.
            1. value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Enabled">
            <summary>
            Specifies the component to be disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.FirstDayOfWeek">
            <summary>
            Gets or sets the Calendar's first day of the week. By default, the first day of the week will be based on the current culture.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.FloatLabelType">
            <summary>
            Specifies the placeholder text to be floated.
            Possible values are:
            Never: The label will never float in the input when the placeholder is available.
            Always: The floating label will always float above the input.
            Auto: The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Format">
            <summary>
            Specifies the format of the value that to be displayed in component. By default, the format is based on the culture.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.KeyConfigs">
            <summary>
            Customizes the key actions in DateTimePicker.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Max">
            <summary>
            Gets or sets the maximum date that can be selected in the DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Min">
            <summary>
            Gets or sets the minimum date that can be selected in the DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Placeholder">
            <summary>
            Specifies the placeholder text that to be is displayed in textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Readonly">
            <summary>
            Specifies the component in readonly state. When the Component is readonly it does not allow user input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.ScrollTo">
            <summary>
            Specifies the scroll bar position if there is no value is selected in the timepicker popup list or
            the given value is not present in the timepicker popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.ServerTimezoneOffset">
            <summary>
            By default, the date value will be processed based on system time zone.
            If you want to process the initial date value using server time zone
            then specify the time zone value to `serverTimezoneOffset` property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon in textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.ShowTodayButton">
            <summary>
            Specifies whether the today button is to be displayed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Start">
            <summary>
            Specifies the initial view of the Calendar when it is opened.
            With the help of this property, initial view can be changed to year or decade view.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the time popup list .
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.StrictMode">
            <summary>
            Specifies the component to act as strict. So that, it allows to enter only a valid
            date and time value within a specified range or else it
            will resets to previous value. By default, strictMode is in false.
            it allows invalid or out-of-range value with highlighted error class.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.TimeFormat">
            <summary>
            Specifies the format of the time value that to be displayed in time popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Value">
            <summary>
            Gets or sets the selected date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.WeekNumber">
            <summary>
            Determines whether the week number of the year is to be displayed in the calendar or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.Width">
            <summary>
            Specifies the width of the DatePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.ZIndex">
            <summary>
            specifies the z-index value of the popup element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.AddDate(System.Object)">
            <summary>
            This method is used to add the single or multiple dates to the values property of the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.FocusIn">
            <summary>
            Sets the focus to widget for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.FocusOut">
            <summary>
            Remove the focus from widget, if the widget is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.GetPersistData">
            <summary>
            Gets the properties to be maintained upon browser refresh.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsDateTimePicker`1.RemoveDate(System.Object)">
            <summary>
            This method is used to remove the single or multiple dates from the values property of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.AllowEdit">
            <summary>
            > Support for `allowEdit` has been provided from
            [`v16.2.46`](https://ej2.syncfusion.com/angular/documentation/release-notes/16.2.46/#timepicker).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.CssClass">
            <summary>
            Specifies the root CSS class of the TimePicker that allows to
            customize the appearance by overriding the styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.EnablePersistence">
            <summary>
            Enable or disable the persisting component's state between the page reloads. If enabled, following list of states will be persisted.
            1. Value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Enabled">
            <summary>
            Specifies whether the component to be disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.FloatLabelType">
            <summary>
            Specifies the placeholder text to be floated.
            Possible values are:
            Never: The label will never float in the input when the placeholder is available.
            Always: The floating label will always float above the input.
            Auto: The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Format">
            <summary>
            Specifies the format of value that is to be displayed in component. By default, the format is
            based on the culture.
            > For more details refer to
            [`Format`](../../timepicker/getting-started#setting-the-time-format) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.KeyConfigs">
            <summary>
            Customizes the key actions in TimePicker.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Max">
            <summary>
            Gets or sets the maximum time value that can be allowed to select in TimePicker.
            > For more details refer to
            [`Time Range`](../../timepicker/time-range/) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Min">
            <summary>
            Gets or sets the minimum time value that can be allowed to select in TimePicker.
            > For more details refer to
            [`Time Range`](../../timepicker/time-range/) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Placeholder">
            <summary>
            Specifies the placeholder text that is displayed in textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Readonly">
            <summary>
            Specifies the component in readonly state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.ScrollTo">
            <summary>
            Specifies the scroll bar position if there is no value is selected in the popup list or
             the given value is not present in the popup list.
            > For more details refer to
            [`Time Duration`](https://ej2.syncfusion.com/demos/#/material/timepicker/list-formatting.html) sample.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the popup list.
            > For more details refer to
            [`Format`](../../timepicker/getting-started#setting-the-time-format)documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.StrictMode">
            <summary>
            Specifies the component to act as strict so that, it allows to enter only a valid time value within a specified range or else
            resets to previous value. By default, strictMode is in false.
            > For more details refer to
            [`Strict Mode`](../../timepicker/strict-mode/) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Value">
            <summary>
            Gets or sets the value of the component. The value is parsed based on the culture specific time format.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Width">
            <summary>
            Gets or sets the width of the TimePicker component. The width of the popup is based on the width of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.ZIndex">
            <summary>
            specifies the z-index value of the timePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Blur">
            <summary>
            Triggers when the control loses the focus.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.ValueChange">
            <summary>
            Triggers when the value is changed.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Cleared">
            <summary>
            Triggers when timepicker value is cleared using clear button.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.OnClose">
            <summary>
            Triggers when the popup is closed.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Created">
            <summary>
            Triggers when the component is created.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Focus">
            <summary>
            Triggers when the control gets focused.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.OnItemRender">
            <summary>
            Triggers while rendering the each popup list item.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.OnOpen">
            <summary>
            Triggers when the popup is opened.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.FocusIn">
            <summary>
            Focused the TimePicker textbox element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.FocusOut">
            <summary>
            Focuses out the TimePicker textbox element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.GetPersistData">
            <summary>
            Gets the properties to be maintained upon browser refresh.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Hide">
            <summary>
            Hides the TimePicker popup.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Calendars.EjsTimePicker.Show(System.Object)">
            <summary>
            Opens the popup to show the list items.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Adaptors.JsonAdaptor">
            <summary>
            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Adaptors.BlazorAdaptor">
            <summary>
            BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Adaptors.ODataAdaptor">
            <summary>
            OData Adaptor provies ability to consume and manipulate data from OData services.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Adaptors.ODataV4Adaptor">
            <summary>
            OData v4 Adaptor provies ability to consume and manipulate data from OData v4 services.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Adaptors.UrlAdaptor">
            <summary>
            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Adaptors.WebApiAdaptor">
            <summary>
            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.
            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Adaptors.RemoteSaveAdaptor">
            <summary>
            Remote Save Adaptor is used for binding JSON data. 
            It interacts with remote services only for CRUD operations.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Adaptors.CustomAdaptor">
            <summary>
            CustomAdaptor specifies that own data query and manipulation logic has been provided using AdaptorInstance proprety or custom adaptor component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.IDataAdaptor.Read(Syncfusion.EJ2.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.IDataAdaptor.ReadAsync(Syncfusion.EJ2.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.IDataAdaptor.Insert(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.IDataAdaptor.InsertAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.IDataAdaptor.Remove(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.IDataAdaptor.RemoveAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation asynchronously..
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.IDataAdaptor.Update(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.IDataAdaptor.UpdateAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.IDataAdaptor.BatchUpdate(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.IDataAdaptor.BatchUpdateAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations asynchronously.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Data.HttpMessageContent">
            <summary>
            Derived HttpMessageContent class to prepare or modify the multipart type requests.
            Reference from the https://github.com/aspnet/AspNetWebStack/blob/master/src/System.Net.Http.Formatting/HttpMessageContent.cs to prepare a HttpContent extension.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Data.FilterType">
            <summary>
            Specifies the FilterType to be used in LINQ methods.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.LessThan">
            <summary>
            Performs LessThan operation.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.LessThanOrEqual">
            <summary>
            Performs LessThan Or Equal operation.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.Equals">
            <summary>
            Checks Equals on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.NotEquals">
            <summary>
            Checks for Not Equals on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.GreaterThanOrEqual">
            <summary>
            Checks for Greater Than or Equal on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.GreaterThan">
            <summary>
            Checks for Greater Than on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.StartsWith">
            <summary>
            Checks for StartsWith on the string operands.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.EndsWith">
            <summary>
            Checks for EndsWith on the string operands.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.Contains">
            <summary>
            Checks for Contains on the string operands.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.Undefined">
            <summary>
            Returns invalid type
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterType.Between">
            <summary>
            Checks for Between two date on the operands.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Data.FilterBehavior">
            <summary>
            Specifies the Filter Behaviour for the filter predicates.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterBehavior.StronglyTyped">
            <summary>
            Parses only StronglyTyped values.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.FilterBehavior.StringTyped">
            <summary>
            Parses all values by converting them as string.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Data.ColumnFilter">
            <summary>
            Specifies the Filter Behaviour for the filter predicates.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.ColumnFilter.Value">
            <summary>
            Parses only StronglyTyped values.
            </summary>
        </member>
        <member name="F:Syncfusion.EJ2.Blazor.Data.ColumnFilter.DisplayText">
            <summary>
            Parses all values by converting them as string.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Data.NullableHelperInternal">
            <summary>
            A framework independent utility class for the new Nullable type in .NET Framework 2.0
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.NullableHelperInternal.IsComplexType(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the specified PropertyDescriptor has nested properties.
            </summary>
            <param name="pd">The PropertyDescriptor to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.NullableHelperInternal.IsComplexType(System.Type)">
            <summary>
            Indicates whether the specified Type has nested properties.
            </summary>
            <param name="t">The Type to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.NullableHelperInternal.ChangeType(System.Object,System.Type)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.NullableHelperInternal.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.NullableHelperInternal.FixDbNUllasNull(System.Object,System.Type)">
            <summary>
            Returns null if value is DBNull and specified type is a Nullable type. Otherwise the value is returned unchanged.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.NullableHelperInternal.GetUnderlyingType(System.Type)">
            <summary>
            Returns the underlying type of a Nullable type. For .NET 1.0 and 1.1 this method will always return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Data.NullableHelperInternal.TypeConverterHelper">
            <exclude/>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Data.ValueConvert">
            <summary>
            <see cref="T:Syncfusion.EJ2.Blazor.Data.ValueConvert"/> provides conversion routines for values
            to convert them to another type and routines for formatting values.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <overload>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </overload>
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="format">Format string.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider)">
            <summary>
            Overloaded. Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String)">
            <summary>
            Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String[],System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="formats">A string array holding permissible formats used in a <see cref="M:System.Object.ToString"/> call. Right now
            formats is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo)">
            <summary>
            Generates display text using the specified format, culture info and number format.
            </summary>
            <param name="value">The value to format.</param>
            <param name="valueType">The value type on which formatting is based. The original value will first be converted to this type.</param>
            <param name="format">The format like in ToString(string format).</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo"/> for formatting the value.</param>
            <param name="nfi">The <see cref="T:System.Globalization.NumberFormatInfo"/> for formatting the value.</param>
            <returns>The string with the formatted text for the value.</returns>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Data.ValueConvert.AllowFormatValueTrimEnd">
            <summary>
            Indicates whether <see cref="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo)"/> should trim whitespace characters from
            the end of the formatted text.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.GetDefaultValue(System.Type)">
            <summary>
            Returns a representative value for any given type. 
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <returns>A value with the specified type.</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@)">
            <summary>
            Overloaded. Parses the given string including type information. String can be in format %lt;type&gt; 'value'
            </summary>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@,System.Boolean)">
            <summary>
            Parses the given string including type information. String can be in format %lt;type&gt; 'value'
            </summary>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <param name="allowConvertFromBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image)</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.TryConvertFromBase64String(System.Type,System.String,System.Object@)">
            <summary>
            Indicates whether the TypeConverter associated with the type supports conversion to/from a byte array (e.g. an Image). 
            If that is the case the string is converted to a byte array from a base64 string.
            </summary>
            <param name="type"></param>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.FormatValueWithTypeInformation(System.Object)">
            <summary>
            Overloaded. Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.FormatValueWithTypeInformation(System.Object,System.Boolean)">
            <summary>
            Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'
            </summary>
            <param name="value"></param>
            <param name="allowConvertToBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image)</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.GetTypeName(System.Type)">
            <summary>
            Returns the type name. If type is not in mscorlib, the assembly name is appended.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.GetType(System.String)">
            <summary>
            Returns the type from the specified name. If an assembly name is appended the list of currently loaded
            assemblies in the current AppDomain are checked.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.ValueConvert.IsEmpty(System.String)">
            <summary>
            Indicates whether string is null or empty.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Data.QueryableExtensions">
            <summary>
            Provides extension methods for Queryable source. 
            <para></para>
            <para></para>
            <para>var fonts = FontFamily.Families.AsQueryable(); </para>
            <para></para>
            <para></para>
            <para>We would normally write Expressions as, </para>
            <para></para>
            <code lang="C#">var names = new string[] {&quot;Tony&quot;, &quot;Al&quot;,
            &quot;Sean&quot;, &quot;Elia&quot;}.AsQueryable();
            names.OrderBy(n=&gt;n);</code>
            <para></para>
            <para></para>
            <para>This would sort the names based on alphabetical order. Like so, the
            Queryable extensions are a set of extension methods that define functions which
            will generate expressions based on the supplied values to the functions.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.AndPredicate(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates an AND binary expression for the given Binary expressions.
            <para></para>
            </summary>
            <param name="expr1"></param>
            <param name="expr2"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.OrderBy(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a OrderBy query for the Queryable source.
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders =
            queryable.OrderBy(&quot;ShipCountry&quot;);</code>
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.GetLambdaWithComplexPropertyNullCheck(System.Collections.IEnumerable,System.String,System.Linq.Expressions.ParameterExpression,System.Type)">
            <summary>
            Generates lambda expression for the complex properties
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="paramExpression"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.OrderBy``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an OrderBy query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().OrderBy(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.OrderByDescending``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an OrderByDescending query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().OrderByDescending(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.OrderByDescending(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a OrderByDescending query for the Queryable source.
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders =
            queryable.OrderByDescending(&quot;ShipCountry&quot;);</code>
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.GetValueExpression(System.Linq.Expressions.ParameterExpression,System.String,System.Type)">
            <summary>
            Generate expression from simple and complex property
            </summary>        
            <param name="propertyName"></param>
            <param name="sourceType"></param>
            <param name="paramExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.OrPredicate(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates an OR binary expression for the given Binary expressions.
            <para></para>
            </summary>
            <param name="expr1"></param>
            <param name="expr2"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.Parameter(System.Linq.IQueryable)">
            <summary>
            Creates a ParameterExpression that is required when building a series of
            predicates for the WHERE filter.
            <para></para>
            <code lang="C#">        DataClasses1DataContext db = new
            DataClasses1DataContext();
                    var orders = db.Orders.Skip(0).Take(100).ToList();
                    var queryable = orders.AsQueryable();
                    var parameter =
            queryable.Parameter();</code>
            <para></para>
            <para></para>Use this same parameter passed to generate different predicates and
            finally to generate the Lambda.
            </summary>
            <remarks>
            If we specify a parameter for every predicate, then the Lambda expression scope
            will be out of the WHERE query that gets generated.
            </remarks>
            <param name="source"></param>        
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.Predicate(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.String,System.Object,Syncfusion.EJ2.Blazor.Data.FilterType,Syncfusion.EJ2.Blazor.Data.FilterBehavior,System.Boolean,System.Type)">
            <summary>
            Predicate is a Binary expression that needs to be built for a single or a series
            of values that needs to be passed on to the WHERE expression. 
            <para></para>
            <para></para>
            <code lang="C#">var binaryExp = queryable.Predicate(parameter,
            &quot;EmployeeID&quot;, &quot;4&quot;, true);</code>
            </summary>
            <remarks>
            First create a ParameterExpression using the Parameter extension function, then
            use the same ParameterExpression to generate the predicates.
            </remarks>
            <param name="source"></param>
            <param name="paramExpression"></param>
            <param name="propertyName"></param>
            <param name="constValue"></param>
            <param name="filterType"></param>
            <param name="filterBehaviour"></param>
            <param name="isCaseSensitive"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.Select(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a Select query for a single property value.
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType">Type</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.Skip(System.Linq.IQueryable,System.Int32,System.Type)">
            <summary>
            Generates a SKIP expression in the IQueryable source.
            </summary>
            <param name="source">The source.</param>
            <param name="constValue">The const value.</param>
            <param name="sourceType">Type</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.GetDelegateInvokeExpressionAggregateFunc``1(System.Linq.Expressions.ParameterExpression,System.String,System.Delegate)">
            <summary>
            Use this method with a cached delegate, this improves performance when using complex Expressions.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="paramExp"></param>
            <param name="propertyName"></param>
            <param name="expressionFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.GetQueryableSumMethod(System.Type)">
            <summary>
            Get the exact Sum method from Queryable based on body type.
            </summary>        
            <param name="bodyType"></param>
            <returns>exact method info</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.GetQueryableAverageMethod(System.Type)">
            <summary>
            Get the exact Average method from Queryable based on body type
            </summary>        
            <param name="bodyType"></param>
            <returns>exact method info</returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.Take(System.Linq.IQueryable,System.Int32,System.Type)">
            <summary>
            Generates a TAKE expression in the IQueryable source.
            </summary>
            <param name="source">The source.</param>
            <param name="constValue">The const value.</param>
            <param name="sourceType">Type</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.ThenBy(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a ThenBy query for the Queryable source. 
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders = queryable.OrderBy(&quot;ShipCountry&quot;);
                        sortedOrders = sortedOrders.ThenBy(&quot;ShipCity&quot;);</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.ThenBy``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an ThenBy query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().ThenBy(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.ThenByDescending``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an ThenByDescending query for the IComparer defined. 
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().ThenByDescending(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.ThenByDescending(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a ThenByDescending query for the Queryable source. 
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders = queryable.OrderBy(&quot;ShipCountry&quot;);
                        sortedOrders = sortedOrders.ThenByDescending(&quot;ShipCity&quot;);</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.Where(System.Linq.IQueryable,System.String,System.Object,Syncfusion.EJ2.Blazor.Data.FilterType,System.Boolean,System.Type)">
            <summary>
            Generates the where expression.
            <para></para>
            <code lang="C#">            var nw = new Northwind(@&quot;Data Source =
            Northwind.sdf&quot;);
                        IQueryable queryable = nw.Orders.AsQueryable();
                        var filters = queryable.Where(&quot;ShipCountry&quot;,
            &quot;z&quot;, FilterType.Contains);
                        foreach (Orders item in filters)
                        {
                            Console.WriteLine(&quot;{0}/{1}&quot;, item.OrderID,
            item.ShipCountry);
                        }</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName">Name of the property.</param>
            <param name="value"></param>
            <param name="filterType"></param>
            <param name="isCaseSensitive"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Data.QueryableExtensions.Where(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>
            Use this function to generate WHERE expression based on Predicates. The
            AndPredicate and OrPredicate should be used in combination to build the
            predicate expression which is finally passed on to this function for creating a
            Lambda. 
            <para></para>
            <para></para>
            <para></para>DataClasses1DataContext db = new DataClasses1DataContext();
            <para></para>            var orders = db.Orders.Skip(0).Take(100).ToList();
            <para></para>            var queryable = orders.AsQueryable();
            <para></para>            var parameter =
            queryable.Parameter(&quot;ShipCountry&quot;);
            <para></para>            var binaryExp = queryable.Predicate(parameter,
            <para></para>&quot;ShipCountry&quot;, &quot;USA&quot;, true);
            <para></para>            var filteredOrders = queryable.Where(parameter,
            binaryExp);
            <para></para>            foreach (var order in filteredOrders)
            <para></para>            {
            <para></para>                Console.WriteLine(order);
            <para></para>            }
            <para></para>
            <para></para>
            <para></para>Build Predicates for Contains / StartsWith / EndsWith,
            <para></para>
            <para></para>            IQueryable queryable = nw.Orders.AsQueryable();
            <para></para>            var parameter = queryable.Parameter();
            <para></para>            var exp1 = queryable.Predicate(parameter,
            &quot;ShipCountry&quot;, &quot;h&quot;, FilterType.Contains);
            <para></para>            var exp2 = queryable.Predicate(parameter,
            &quot;ShipCountry&quot;, &quot;a&quot;, FilterType.StartsWith);
            <para></para>            var andExp = exp2.OrPredicate(exp1);
            <para></para>            var filters = queryable.Where(parameter, andExp);
            <para></para>            foreach (Orders item in filters)
            <para></para>            {
            <para></para>                Console.WriteLine(&quot;{0}/{1}&quot;,
            item.OrderID, item.ShipCountry);
            <para></para>            }
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="paramExpression"></param>
            <param name="predicateExpression"></param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor.Read(Syncfusion.EJ2.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor.ReadAsync(Syncfusion.EJ2.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor.Insert(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor.InsertAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor.Remove(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor.RemoveAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation asynchronously..
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor.Update(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor.UpdateAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor.BatchUpdate(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor.BatchUpdateAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor`1.Read(Syncfusion.EJ2.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor`1.ReadAsync(Syncfusion.EJ2.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor`1.Insert(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor`1.InsertAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor`1.Remove(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor`1.RemoveAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation asynchronously..
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor`1.Update(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor`1.UpdateAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor`1.BatchUpdate(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DataAdaptor`1.BatchUpdateAsync(Syncfusion.EJ2.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations asynchronously.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.AllowFiltering">
            <summary>
            When allowFiltering is set to true, show the filter bar (search box) of the component.
            The filter action retrieves matched items through the `filtering` event based on
            the characters typed in the search TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.CssClass">
            <summary>
            Sets CSS classes to the root element of the component that allows customization of appearance.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.FloatLabelType">
            <summary>
            Specifies whether to display the floating label above the input element.
            Possible values are:
             Never: The label will never float in the input when the placeholder is available.
             Always: The floating label will always float above the input.
             Auto: The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            > For more details about the available template options refer to [`Template`](../../drop-down-list/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            > For more details about the available template options refer to [`Template`](../../drop-down-list/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.HtmlAttributes">
            <summary>
            Allows additional HTML attributes such as title, name, etc., and
            accepts n number of attributes in a key-value pair format.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.Index">
            <summary>
            Gets or sets the index of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.Placeholder">
            <summary>
            Specifies a short hint that describes the expected value of the DropDownList component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.PopupHeight">
            <summary>
            Specifies the height of the popup list.
            > For more details about the popup configuration refer to
            [`Popup Configuration`](../../drop-down-list/getting-started#configure-the-popup-list) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.PopupWidth">
            <summary>
            Specifies the width of the popup list. By default, the popup width sets based on the width of
            the component.
            > For more details about the popup configuration refer to
            [`Popup Configuration`](../../drop-down-list/getting-started#configure-the-popup-list) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.Readonly">
            <summary>
            When set to true, the user interactions on the component are disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear button.
            When the clear button is clicked, `value`, `text`, and `index` properties are reset to null.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.Text">
            <summary>
            Gets or sets the display text of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.Value">
            <summary>
            Gets or sets the value of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            For more details about the available template options refer to
            [`Template`](../../drop-down-list/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.Width">
            <summary>
            Specifies the width of the component. By default, the component width sets based on the width of
            its parent container. You can also set the width in pixel values.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.Clear">
            <summary>
            Allows you to clear the selected values from the component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.FocusIn(System.Object)">
            <summary>
            Sets the focus on the component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.FocusOut">
            <summary>
            Moves the focus from the component if the component is already focused.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.GetDataByValue(System.Object)">
            <summary>
            Gets the data Object that matches the given value.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.HidePopup(System.Object)">
            <summary>
            Hides the popup if it is in an open state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.HideSpinner">
            <summary>
            Hides the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.ShowPopup">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.ShowSpinner">
            <summary>
            Shows the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList`2.Filter(System.Collections.Generic.IEnumerable{`1},Syncfusion.EJ2.Blazor.Data.Query,Syncfusion.EJ2.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the component
            when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.DataSource">
            <summary>
            Accepts the list items either through local or remote service and binds it to the component.
            It can be an array of JSON Objects or an instance of
            `DataManager`.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            If enabled, following list of states will be persisted.
            1. value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.Enabled">
            <summary>
            Specifies a value that indicates whether the component is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.Fields">
            <summary>
            The `fields` property maps the columns of the data table and binds the data to the component.
             text - Maps the text column from data table for each list item.
             value - Maps the value column from data table for each list item.
             iconCss - Maps the icon class column from data table for each list item.
             groupBy - Group the list items with it's related items by mapping groupBy field.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            The `FilterType` and its supported data types are
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.IgnoreCase">
            <summary>
            When set to ‘false’, consider the `case-sensitive` on performing the search to find suggestions.
            By default consider the casing.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            We have built-in `template engine`
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of component
            when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.Query">
            <summary>
            Accepts the external `Query`
            that execute along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.SortOrder">
            <summary>
            Specifies the `sortOrder` to sort the data source. The available type of sort orders are
             `None` - The data source is not sorting.
             `Ascending` - The data source is sorting with ascending order.
             `Descending` - The data source is sorting with descending order.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownBase`1.ZIndex">
            <summary>
            specifies the z-index value of the component popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.DropDowns.Internal.DropDownListJSInteropAdaptor`2">
            <summary>
            JSInterop Adaptor for DropDownList component
            </summary>
            <typeparam name="TValue">Accepts generic type parameter</typeparam>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.Internal.DropDownListJSInteropAdaptor`2.#ctor(Syncfusion.EJ2.Blazor.DropDowns.EjsDropDownList{`0,`1})">
            <summary>
            Constructor for initializing the component adaptor
            </summary>
            <param name="parent">DropDownList arguments</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.Internal.DropDownListJSInteropAdaptor`2.Create">
            <summary>
            Creates DotNet Object reference
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.ValueChange">
            <summary>
            Triggers when an item in a popup is selected or when the model value is changed by user.
            Use change event to
            [`Configure the Cascading DropDownList`](../../drop-down-list/how-to/cascading)
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.CustomValueSpecifier">
            <summary>
            Triggers on set a
            [`custom value`](../../combo-box/getting-started#custom-values) to this component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.DataBound">
            <summary>
            Triggers when data source is populated in the popup list..
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.Filtering">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.Opened">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteEvents`1.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteFieldSettings.HtmlAttributes">
            <summary>
            Allows additional attributes such as title, disabled, etc., to configure the elements
            in various ways to meet the criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.AutoCompleteFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.ValueChange">
            <summary>
            Triggers when an item in a popup is selected or when the model value is changed by user.
            Use change event to
            [`Configure the Cascading DropDownList`](../../drop-down-list/how-to/cascading)
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.CustomValueSpecifier">
            <summary>
            Triggers on set a
            [`custom value`](../../combo-box/getting-started#custom-values) to this component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.DataBound">
            <summary>
            Triggers when data source is populated in the popup list..
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.Filtering">
            <summary>
            Triggers on typing a character in the component.
            > For more details about the filtering refer to [`Filtering`](../../combo-box/filtering) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.Opened">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxEvents`1.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxFieldSettings.HtmlAttributes">
            <summary>
            Allows additional attributes such as title, disabled, etc., to configure the elements
            in various ways to meet the criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ComboBoxFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.ValueChange">
            <summary>
            Triggers when an item in a popup is selected or when the model value is changed by user.
            Use change event to
            [`Configure the Cascading DropDownList`](../../drop-down-list/how-to/cascading)
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.DataBound">
            <summary>
            Triggers when data source is populated in the popup list..
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the
            [`allowFiltering`](./#allowfiltering)
            is enabled.
            > For more details about the filtering refer to [`Filtering`](../../drop-down-list/filtering) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.Opened">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListEvents`1.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the component
            when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.CssClass">
            <summary>
            Sets CSS classes to the root element of the component that allows customization of appearance.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.DataSource">
            <summary>
            Accepts the list items either through local or remote service and binds it to the component.
            It can be an array of JSON Objects or an instance of
            `DataManager`.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            If enabled, following list of states will be persisted.
            1. value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Enabled">
            <summary>
            Specifies a value that indicates whether the component is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Fields">
            <summary>
            The `fields` property maps the columns of the data table and binds the data to the component.
             text - Maps the text column from data table for each list item
             value - Maps the value column from data table for each list item
             iconCss - Maps the icon class column from data table for each list item
             groupBy - Group the list items with it's related items by mapping groupBy field
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            The available [`FilterType`](../../auto-complete/filtering/#change-the-filter-type)
            and its supported data types are
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.FloatLabelType">
            <summary>
            Specifies whether to display the floating label above the input element.
            Possible values are:
             Never: The label will never float in the input when the placeholder is available.
             Always: The floating label will always float above the input.
             Auto: The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            > For more details about the available template options refer to [`Template`](../../drop-down-list/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            > For more details about the available template options refer to [`Template`](../../drop-down-list/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Highlight">
            <summary>
            When set to ‘true’, highlight the searched characters on suggested list items.
            > For more details about the highlight refer to [`Custom highlight search`](../../auto-complete/how-to/custom-search) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.HtmlAttributes">
            <summary>
            Allows additional HTML attributes such as title, name, etc., and
            accepts n number of attributes in a key-value pair format.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.IgnoreCase">
            <summary>
            When set to ‘false’, consider the [`case-sensitive`](../../auto-complete/filtering/#case-sensitive-filtering)
            on performing the search to find suggestions.
            By default consider the casing.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            We have built-in `template engine`
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.MinLength">
            <summary>
            Allows you to set [`the minimum search character length']
            (../../auto-complete/filtering#limit-the-minimum-filter-character),
            the search action will perform after typed minimum characters.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of component
            when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Placeholder">
            <summary>
            Specifies a short hint that describes the expected value of the DropDownList component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.PopupHeight">
            <summary>
            Specifies the height of the popup list.
            > For more details about the popup configuration refer to
            [`Popup Configuration`](../../drop-down-list/getting-started#configure-the-popup-list) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.PopupWidth">
            <summary>
            Specifies the width of the popup list. By default, the popup width sets based on the width of
            the component.
            > For more details about the popup configuration refer to
            [`Popup Configuration`](../../drop-down-list/getting-started#configure-the-popup-list) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Query">
            <summary>
            Accepts the external `query`
            that execute along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Readonly">
            <summary>
            When set to true, the user interactions on the component are disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear button.
            When the clear button is clicked, `value`, `text`, and `index` properties are reset to null.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.ShowPopupButton">
            <summary>
            Allows you to either show or hide the popup button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.SortOrder">
            <summary>
            Specifies the `sortOrder` to sort the data source. The available type of sort orders are
             `None` - The data source is not sorting.
             `Ascending` - The data source is sorting with ascending order.
             `Descending` - The data source is sorting with descending order.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.SuggestionCount">
            <summary>
            Supports the [`specified number`](../../auto-complete/filtering#filter-item-count)
            of list items on the suggestion popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Value">
            <summary>
            Gets or sets the value of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Width">
            <summary>
            Specifies the width of the component. By default, the component width sets based on the width of
            its parent container. You can also set the width in pixel values.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.ZIndex">
            <summary>
            specifies the z-index value of the component popup element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.AddItem(System.Object,System.Nullable{System.Double})">
            <summary>
            Adds a new item to the combobox popup list. By default, new item appends to the list as the last item,
            but you can insert based on the index parameter.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Clear">
            <summary>
            Allows you to clear the selected values from the component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.Filter(System.Object,System.Object,Syncfusion.EJ2.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.FocusIn">
            <summary>
            Sets the focus to the component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.FocusOut">
            <summary>
            Moves the focus from the component if the component is already focused.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.GetDataByValue(System.Object)">
            <summary>
            Gets the data Object that matches the given value.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.HidePopup">
            <summary>
            Hides the popup if it is in open state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.HideSpinner">
            <summary>
            Hides the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.ShowPopup">
            <summary>
            Search the entered text and show it in the suggestion list if available.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsAutoComplete`1.ShowSpinner">
            <summary>
            Shows the spinner loader.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the component
            when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.AllowFiltering">
            <summary>
            When allowFiltering is set to true, show the filter bar (search box) of the component.
            The filter action retrieves matched items through the `filtering` event based on
            the characters typed in the search TextBox.
            If no match is found, the value of the `noRecordsTemplate` property will be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.CssClass">
            <summary>
            Sets CSS classes to the root element of the component that allows customization of appearance.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.DataSource">
            <summary>
            Accepts the list items either through local or remote service and binds it to the component.
            It can be an array of JSON Objects or an instance of
            `DataManager`.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            If enabled, following list of states will be persisted.
            1. value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Enabled">
            <summary>
            Specifies a value that indicates whether the component is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Fields">
            <summary>
            The `fields` property maps the columns of the data table and binds the data to the component.
             text - Maps the text column from data table for each list item.
             value - Maps the value column from data table for each list item.
             iconCss - Maps the icon class column from data table for each list item.
             groupBy - Group the list items with it's related items by mapping groupBy field.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            The `FilterType` and its supported data types are
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.FloatLabelType">
            <summary>
            Specifies whether to display the floating label above the input element.
            Possible values are:
             Never: The label will never float in the input when the placeholder is available.
             Always: The floating label will always float above the input.
             Auto: The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            > For more details about the available template options refer to [`Template`](../../drop-down-list/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            > For more details about the available template options refer to [`Template`](../../drop-down-list/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.HtmlAttributes">
            <summary>
            Allows additional HTML attributes such as title, name, etc., and
            accepts n number of attributes in a key-value pair format.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.IgnoreCase">
            <summary>
            When set to ‘false’, consider the `case-sensitive` on performing the search to find suggestions.
            By default consider the casing.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Index">
            <summary>
            Gets or sets the index of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            We have built-in `template engine`
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of component
            when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Placeholder">
            <summary>
            Specifies a short hint that describes the expected value of the DropDownList component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.PopupHeight">
            <summary>
            Specifies the height of the popup list.
            > For more details about the popup configuration refer to
            [`Popup Configuration`](../../drop-down-list/getting-started#configure-the-popup-list) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.PopupWidth">
            <summary>
            Specifies the width of the popup list. By default, the popup width sets based on the width of
            the component.
            > For more details about the popup configuration refer to
            [`Popup Configuration`](../../drop-down-list/getting-started#configure-the-popup-list) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Query">
            <summary>
            Accepts the external `Query`
            that execute along with [`data processing`](../../combo-box/data-binding).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Readonly">
            <summary>
            When set to true, the user interactions on the component are disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear button.
            When the clear button is clicked, `value`, `text`, and `index` properties are reset to null.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.SortOrder">
            <summary>
            Specifies the `sortOrder` to sort the data source. The available type of sort orders are
             `None` - The data source is not sorting.
             `Ascending` - The data source is sorting with ascending order.
             `Descending` - The data source is sorting with descending order.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Text">
            <summary>
            Gets or sets the display text of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Value">
            <summary>
            Gets or sets the value of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Width">
            <summary>
            Specifies the width of the component. By default, the component width sets based on the width of
            its parent container. You can also set the width in pixel values.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.ZIndex">
            <summary>
            specifies the z-index value of the component popup element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.AddItem(System.Object,System.Nullable{System.Double})">
            <summary>
            Adds a new item to the combobox popup list. By default, new item appends to the list as the last item,
            but you can insert based on the index parameter.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Clear">
            <summary>
            Allows you to clear the selected values from the component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.Filter(System.Object,System.Object,Syncfusion.EJ2.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.FocusIn">
            <summary>
            Sets the focus to the component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.FocusOut">
            <summary>
            Moves the focus from the component if the component is already focused.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.GetDataByValue(System.Object)">
            <summary>
            Gets the data Object that matches the given value.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.HidePopup(System.Object)">
            <summary>
            Hides the popup if it is in open state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.HideSpinner">
            <summary>
            Hides the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.ShowPopup">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsComboBox`1.ShowSpinner">
            <summary>
            Shows the spinner loader.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.AllowDragAndDrop">
            <summary>
            If 'allowDragAndDrop' is set to true, then you can perform drag and drop of the list item.
            ListBox contains same 'scope' property enables drag and drop between multiple ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.AllowFiltering">
            <summary>
            To enable the filtering option in this component.
            Filter action performs when type in search box and collect the matched item through `filtering` event.
            If searching character does not match, `noRecordsTemplate` property value will be shown.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.CssClass">
            <summary>
            Sets the CSS classes to root element of this component, which helps to customize the
            complete styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.DataSource">
            <summary>
            Accepts the list items either through local or remote service and binds it to the ListBox component.
            It can be an array of JSON Objects or an instance of
            `DataManager`.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.EnablePersistence">
            <summary>
            Enable or disable persisting ListBox component's state between page reloads.
            If enabled, following list of states will be persisted.
            1. value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.Enabled">
            <summary>
            Specifies a value that indicates whether the ListBox component is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.Fields">
            <summary>
            The `fields` property maps the columns of the data table and binds the data to the component.
             text - Maps the text column from data table for each list item.
             value - Maps the value column from data table for each list item.
             iconCss - Maps the icon class column from data table for each list item.
             groupBy - Group the list items with it's related items by mapping groupBy field.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            The `FilterType` and its supported data types are
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.Height">
            <summary>
            Sets the height of the ListBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            We have built-in `template engine`
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.MaximumSelectionLength">
            <summary>
            Sets limitation to the value selection.
            based on the limitation, list selection will be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.Query">
            <summary>
            Accepts the external `Query`
            which will execute along with the data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.Scope">
            <summary>
            Defines the scope value to group sets of draggable and droppable ListBox.
            A draggable with the same scope value will be accepted by the droppable.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.SelectionSettings">
            <summary>
            Specifies the selection mode and its type.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.SortOrder">
            <summary>
            Specifies the `sortOrder` to sort the ListBox data source. The available type of sort orders are
             `None` - The data source is not sorting.
             `Ascending` - The data source is sorting with ascending order.
             `Descending` - The data source is sorting with descending order.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.ToolbarSettings">
            <summary>
            Specifies the toolbar items and its position.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.Value">
            <summary>
            Sets the specified item to the selected state or gets the selected item in the ListBox.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.AddItems(System.Object,System.Nullable{System.Double})">
            <summary>
            Adds a new item to the list. By default, new item appends to the list as the last item,
            but you can insert based on the index parameter.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.EnableItems(System.Object,System.Boolean)">
            <summary>
            This method is used to enable or disable the items in the ListBox based on the items and enable argument.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.Filter(System.Object,System.Object,Syncfusion.EJ2.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.GetDataByValue(System.Object)">
            <summary>
            Gets the data Object that matches the given value.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.GetDataByValues(System.Object)">
            <summary>
            Gets the array of data Object that matches the given array of values.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.GetDataList">
            <summary>
            Returns the updated dataSource in ListBox
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.GetSortedList">
            <summary>
            Returns the sorted Data in ListBox
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.MoveAllTo(System.String,System.Nullable{System.Double})">
            <summary>
            Moves all the values from one ListBox to the scoped ListBox.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.MoveDown(System.Object)">
            <summary>
            Moves the given value(s) / selected value(s) downwards.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.MoveTo(System.Object,System.Nullable{System.Double},System.String)">
            <summary>
            Moves the given value(s) / selected value(s) to the given / default scoped ListBox.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.MoveUp(System.Object)">
            <summary>
            Moves the given value(s) / selected value(s) upwards.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.RemoveItem(System.Object,System.Nullable{System.Double})">
            <summary>
            Removes a item from the list. By default, removed the last item in the list,
            but you can remove based on the index parameter.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.RemoveItems(System.Object,System.Nullable{System.Double})">
            <summary>
            Removes a item from the list. By default, removed the last item in the list,
            but you can remove based on the index parameter.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.SelectAll(System.Boolean)">
            <summary>
            Based on the state parameter, entire list item will be selected/deselected.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsListBox`1.SelectItems(System.Object,System.Boolean)">
            <summary>
            Based on the state parameter, specified list item will be selected/deselected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the MultiSelect component
            when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.AllowCustomValue">
            <summary>
            Allows user to add a
            [`custom value`](../../multi-select/custom-value), the value which is not present in the suggestion list.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.AllowFiltering">
            <summary>
            To enable the filtering option in this component.
            Filter action performs when type in search box and collect the matched item through `filtering` event.
            If searching character does not match, `noRecordsTemplate` property value will be shown.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ChangeOnBlur">
            <summary>
            By default, the multiselect component fires the change event while focus out the component.
            If you want to fires the change event on every value selection and remove, then disable the changeOnBlur property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ClosePopupOnSelect">
            <summary>
            Based on the property, when item get select popup visibility state will changed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.CssClass">
            <summary>
            Sets the CSS classes to root element of this component which helps to customize the
            complete styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.DataSource">
            <summary>
            Accepts the list items either through local or remote service and binds it to the MultiSelect component.
            It can be an array of JSON Objects or an instance of
            `DataManager`.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.DelimiterChar">
            <summary>
            Sets the delimiter character for 'default' and 'delimiter' visibility modes.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.EnableGroupCheckBox">
            <summary>
            Specifies a Boolean value that indicates the whether the grouped list items are
            allowed to check by checking the group header in checkbox mode.
            By default, there is no checkbox provided for group headers.
            This property allows you to render checkbox for group headers and to select
            all the grouped items at once
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.EnablePersistence">
            <summary>
            Enable or disable persisting MultiSelect component's state between page reloads.
            If enabled, following list of states will be persisted.
            1. value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.EnableSelectionOrder">
            <summary>
            Reorder the selected items in popup visibility state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Enabled">
            <summary>
            Specifies a value that indicates whether the MultiSelect component is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Fields">
            <summary>
            The `fields` property maps the columns of the data table and binds the data to the component.
             text - Maps the text column from data table for each list item.
             value - Maps the value column from data table for each list item.
             iconCss - Maps the icon class column from data table for each list item.
             groupBy - Group the list items with it's related items by mapping groupBy field.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.FilterType">
            <summary>
            Determines on which filter type, the MultiSelect component needs to be considered on search action.
            The `FilterType` and its supported data types are
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.FloatLabelType">
            <summary>
            Specifies whether to display the floating label above the input element.
            Possible values are:
             Never: The label will never float in the input when the placeholder is available.
             Always: The floating label will always float above the input.
             Auto: The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            > For more details about the available template options refer to [`Template`](../../multi-select/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the MultiSelect popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            > For more details about the available template options refer to [`Template`](../../multi-select/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.HideSelectedItem">
            <summary>
            Hides the selected item from the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.HtmlAttributes">
            <summary>
            Gets or sets the additional attribute to `HtmlAttributes` property in MultiSelect,
            which helps to add attribute like title, name etc, input should be key value pair.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.IgnoreCase">
            <summary>
            Sets [`case sensitive`](../../multi-select/filtering/#case-sensitive-filtering)
            option for filter operation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            > For more details about the available template options refer to [`Template`](../../multi-select/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.MaximumSelectionLength">
            <summary>
            Sets limitation to the value selection.
            based on the limitation, list selection will be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Mode">
            <summary>
            configures visibility mode for component interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of MultiSelect component
            when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.OpenOnClick">
            <summary>
            Whether to automatically open the popup when the control is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Placeholder">
            <summary>
            Gets or sets the placeholder in the component to display the given information
            in input when no item selected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.PopupHeight">
            <summary>
            Gets or sets the height of the popup list. By default it renders based on its list item.
            > For more details about the popup configuration refer to
            [`Popup Configuration`](../../multi-select/getting-started/#configure-the-popup-list) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.PopupWidth">
            <summary>
            Gets or sets the width of the popup list and percentage values has calculated based on input width.
            > For more details about the popup configuration refer to
            [`Popup Configuration`](../../multi-select/getting-started/#configure-the-popup-list) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Query">
            <summary>
            Accepts the external `Query`
            which will execute along with the data processing in MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Readonly">
            <summary>
            Gets or sets the `readonly` to input or not. Once enabled, just you can copy or highlight
            the text however tab key action will perform.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.SelectAllText">
            <summary>
            Specifies the selectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ShowClearButton">
            <summary>
            Enables close icon with the each selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ShowDropDownIcon">
            <summary>
            Allows you to either show or hide the DropDown button on the component
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.SortOrder">
            <summary>
            Specifies the `sortOrder` to sort the data source. The available type of sort orders are
             `None` - The data source is not sorting.
             `Ascending` - The data source is sorting with ascending order.
             `Descending` - The data source is sorting with descending order.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Text">
            <summary>
            Selects the list item which maps the data `text` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.UnSelectAllText">
            <summary>
            Specifies the UnSelectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Value">
            <summary>
            Selects the list item which maps the data `value` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            For more details about the available template options refer to
            [`Template`](../../multi-select/templates) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Width">
            <summary>
            Gets or sets the width of the component. By default, it sizes based on its parent.
            container dimension.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ZIndex">
            <summary>
            specifies the z-index value of the component popup element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.AddItem(System.Object,System.Nullable{System.Double})">
            <summary>
            Adds a new item to the multiselect popup list. By default, new item appends to the list as the last item,
            but you can insert based on the index parameter.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Clear">
            <summary>
            Allows you to clear the selected values from the Multiselect component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.Filter(System.Object,System.Object,Syncfusion.EJ2.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the multiselect data from given data source by using query
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.FocusIn">
            <summary>
            Sets the focus to widget for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.FocusOut">
            <summary>
            Remove the focus from widget, if the widget is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.GetDataByValue(System.Object)">
            <summary>
            Gets the data Object that matches the given value.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.HidePopup">
            <summary>
            Hides the popup, if the popup in a open state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.HideSpinner">
            <summary>
            Hides the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.SelectAll(System.Boolean)">
            <summary>
            Based on the state parameter, entire list item will be selected/deselected.
            parameter
            `true`   - Selects entire list items.
            `false`  - Un Selects entire list items.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ShowPopup">
            <summary>
            Shows the popup, if the popup in a closed state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.DropDowns.EjsMultiSelect`1.ShowSpinner">
            <summary>
            Shows the spinner loader.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListFieldSettings.HtmlAttributes">
            <summary>
            Allows additional attributes such as title, disabled, etc., to configure the elements
            in various ways to meet the criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.DropDownListFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.OnDrop">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.OnItemRender">
            <summary>
            Triggers while rendering each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.ValueChange">
            <summary>
            Triggers while select / unselect the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.DataBound">
            <summary>
            Triggers when data source is populated in the list.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.Dragging">
            <summary>
            Triggers while dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.DragStart">
            <summary>
            Triggers after dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.Dropped">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.ItemSelected">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxEvents`1.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxFieldSettings.HtmlAttributes">
            <summary>
            Allows additional attributes such as title, disabled, etc., to configure the elements
            in various ways to meet the criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxSelectionSettings.CheckboxPosition">
            <summary>
            Set the position of the checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxSelectionSettings.Mode">
            <summary>
            Specifies the selection modes. The possible values are
             `Single`: Allows you to select a single item in the ListBox.
             `Multiple`: Allows you to select more than one item in the ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxSelectionSettings.ShowCheckbox">
            <summary>
            If 'showCheckbox' is set to true, then 'checkbox' will be visualized in the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxSelectionSettings.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxToolbarSettings.Items">
            <summary>
            Specifies the list of tools for dual ListBox.
            The predefined tools are 'moveUp', 'moveDown', 'moveTo', 'moveFrom', 'moveAllTo', and 'moveAllFrom'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.ListBoxToolbarSettings.Position">
            <summary>
            Positions the toolbar before/after the ListBox.
            The possible values are:
             Left: The toolbar will be positioned to the left of the ListBox.
             Right: The toolbar will be positioned to the right of the ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.OnOpen">
            <summary>
            Fires when popup opens before animation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.Blur">
            <summary>
            Event triggers when the input get focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.ValueChange">
            <summary>
            Fires each time when selection changes happened in list items after model and input value get affected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.ChipSelected">
            <summary>
            Event triggers when the chip selection.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.OnClose">
            <summary>
            Fires when popup close after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.CustomValueSpecifier">
            <summary>
            Triggers when the [`customValue`](../../multi-select/custom-value) is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.DataBound">
            <summary>
            Triggers when data source is populated in the popup list..
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.Filtering">
            <summary>
            Triggers event,when user types a text in search box.
            > For more details about filtering, refer to [`Filtering`](../../multi-select/filtering) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.Focus">
            <summary>
            Event triggers when the input get focused.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.Opened">
            <summary>
            Fires when popup opens after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.ValueRemoved">
            <summary>
            Fires after the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.OnValueRemove">
            <summary>
            Fires before the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.SelectedAll">
            <summary>
            Fires after select all process completion.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectEvents`1.OnChipTag">
            <summary>
            Fires before set the selected item as chip in the component.
            > For more details about chip customization refer [`Chip Customization`](../../multi-select/chip-customization)
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectFieldSettings.HtmlAttributes">
            <summary>
            Allows additional attributes such as title, disabled, etc., to configure the elements
            in various ways to meet the criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.DropDowns.MultiSelectFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.CssClass">
            <summary>
            Gets or Sets the CSS classes to root element of the NumericTextBox which helps to customize the
            complete UI styles for the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Currency">
            <summary>
            Specifies the currency code to use in currency formatting.
            Possible values are the ISO 4217 currency codes, such as 'USD' for the US dollar,'EUR' for the euro.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Decimals">
            <summary>
            Specifies the number precision applied to the textbox value when the NumericTextBox is focused.
            For more information on decimals, refer to
            [decimals](../../numerictextbox/formats/#precision-of-numbers).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.EnablePersistence">
            <summary>
            Enable or disable persisting NumericTextBox state between page reloads. If enabled, the `value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Enabled">
            <summary>
            Sets a value that enables or disables the NumericTextBox control.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.FloatLabelType">
            <summary>
            The  acts as a label
            and floats above the NumericTextBox based on the below values.
            Possible values are:
             `Never` - Never floats the label in the NumericTextBox when the placeholder is available.
             `Always` - The floating label always floats above the NumericTextBox.
             `Auto` - The floating label floats above the NumericTextBox after focusing it or when enters the value in it.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Format">
            <summary>
            Specifies the number format that indicates the display format for the value of the NumericTextBox.
            For more information on formats, refer to
            [formats](../../numerictextbox/formats/#standard-formats).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Max">
            <summary>
            Specifies a maximum value that is allowed a user can enter.
            For more information on max, refer to
            [max](../../numerictextbox/getting-started/#range-validation).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Min">
            <summary>
            Specifies a minimum value that is allowed a user can enter.
            For more information on min, refer to
            [min](../../numerictextbox/getting-started/#range-validation).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Placeholder">
            <summary>
            Gets or sets the string shown as a hint/placeholder when the NumericTextBox is empty.
            It acts as a label and floats above the NumericTextBox based on the
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Readonly">
            <summary>
            Sets a value that enables or disables the readonly state on the NumericTextBox. If it is true,
            NumericTextBox will not allow your input.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.ShowSpinButton">
            <summary>
            Specifies whether the up and down spin buttons should be displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Step">
            <summary>
            Specifies the incremental or decremental step size for the NumericTextBox.
            For more information on step, refer to
            [step](../../numerictextbox/getting-started/#range-validation).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.StrictMode">
            <summary>
            Specifies a value that indicates whether the NumericTextBox control allows the value for the specified range.
             If it is true, the input value will be restricted between the min and max range.
            The typed value gets modified to fit the range on focused out state.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.ValidateDecimalOnType">
            <summary>
            Specifies whether the decimals length should be restricted during typing.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Value">
            <summary>
            Sets the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Width">
            <summary>
            Specifies the width of the NumericTextBox.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Decrement(System.Double)">
            <summary>
            Decrements the NumericTextBox value with specified step value.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.FocusIn">
            <summary>
            Sets the focus to widget for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.FocusOut">
            <summary>
            Remove the focus from widget, if the widget is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.GetText">
            <summary>
            Returns the value of NumericTextBox with the format applied to the NumericTextBox.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsNumericTextBox`1.Increment(System.Double)">
            <summary>
            Increments the NumericTextBox value with the specified step value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Autocomplete">
            <summary>
            Specifies whether the browser is allow to automatically enter or select a value for the textbox.
            By default, autocomplete is enabled for textbox.
            Possible values are:
            `on` - Specifies that autocomplete is enabled.
            `off` - Specifies that autocomplete is disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.CssClass">
            <summary>
            Specifies the CSS class value that is appended to wrapper of Textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.EnablePersistence">
            <summary>
            Enable or disable persisting TextBox state between page reloads. If enabled, the `value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Enabled">
            <summary>
            Specifies a Boolean value that indicates whether the TextBox allow user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the below values.
            Possible values are:
             `Never` - The placeholder text should not be float ever.
             `Always` - The placeholder text floats above the TextBox always.
             `Auto` - The placeholder text floats above the TextBox while focusing or enter a value in Textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Multiline">
            <summary>
            Specifies a boolean value that enable or disable the multiline on the TextBox.
            The TextBox changes from single line to multiline when enable this multiline mode.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Placeholder">
            <summary>
            Specifies the text that is shown as a hint/placeholder until the user focus or enter a value in Textbox.
            The property is depending on the floatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.ShowClearButton">
            <summary>
            Specifies a Boolean value that indicates whether the clear button is displayed in Textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Type">
            <summary>
            Specifies the behavior of the TextBox such as text, password, email, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Value">
            <summary>
            Sets the content of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Width">
            <summary>
            Specifies the width of the Textbox component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Blur">
            <summary>
            Triggers when the TextBox has focus-out.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.ValueChange">
            <summary>
            Triggers when the content of TextBox has changed and gets focus-out.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Created">
            <summary>
            Triggers when the TextBox component is created.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Destroyed">
            <summary>
            Triggers when the TextBox component is destroyed.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Focus">
            <summary>
            Triggers when the TextBox gets focus.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.Input">
            <summary>
            Triggers each time when the value of TextBox has changed.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.AddAttributes(System.Object)">
            <summary>
            Adding the multiple attributes as key-value pair to the TextBox element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.AddIcon(System.String,System.Object)">
            <summary>
            Adding the icons to the TextBox component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.FocusIn">
            <summary>
            Sets the focus to widget for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.FocusOut">
            <summary>
            Remove the focus from widget, if the widget is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsTextBox.RemoveAttributes(System.Object)">
            <summary>
            Removing the multiple attributes as key-value pair to the TextBox element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.AllowedExtensions">
            <summary>
            Specifies the extensions of the file types allowed in the uploader component and pass the extensions
            with comma separators. For example,
            if you want to upload specific image files,  pass allowedExtensions as “.jpg,.png”.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.AsyncSettings">
            <summary>
            Configures the save and remove URL to perform the upload operations in the server asynchronously.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.AutoUpload">
            <summary>
            By default, the uploader component initiates automatic upload when the files are added in upload queue.
            If you want to manipulate the files before uploading to server, disable the autoUpload property.
            The buttons “upload” and “clear” will be hided from file list when autoUpload property is true.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Buttons">
            <summary>
            You can customize the default text of “browse, clear, and upload” buttons with plain text or HTML elements.
            The buttons’ text can be customized from localization also. If you configured both locale and buttons property,
            the uploader component considers the buttons property value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with root element of the uploader.
            One or more custom CSS classes can be added to a uploader.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.DirectoryUpload">
            <summary>
            Specifies a Boolean value that indicates whether the folder of files can be browsed in the uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.DropArea">
            <summary>
            Specifies the drop target to handle the drag-and-drop upload.
            By default, the component creates wrapper around file input that will act as drop target.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Enabled">
            <summary>
            Specifies Boolean value that indicates whether the component is enabled or disabled.
            The uploader component does not allow to interact when this property is disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Files">
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            The property used to view and remove the uploaded files from server. By default, the files are configured with
            uploaded successfully state. The following properties are mandatory to configure the preload files:
             Name
             Size
             Type
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.MaxFileSize">
            <summary>
            Specifies the maximum allowed file size to be uploaded in bytes.
            The property used to make sure that you cannot upload too large files.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.MinFileSize">
            <summary>
            Specifies the minimum file size to be uploaded in bytes.
            The property used to make sure that you cannot upload empty files and small files.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Multiple">
            <summary>
            Specifies a Boolean value that indicates whether the multiple files can be browsed or
            dropped simultaneously in the uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.SequentialUpload">
            <summary>
            By default, the file uploader component is processing the multiple files simultaneously.
            If sequentialUpload property is enabled, the file upload component performs the upload one after the other.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.ShowFileList">
            <summary>
            Specifies a Boolean value that indicates whether the default file list can be rendered.
            The property used to prevent default file list and design own template for file list.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Template">
            <summary>
            Specifies the HTML string that used to customize the content of each file in the list.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.BytesToSize(System.Double)">
            <summary>
            It is used to convert bytes value into kilobytes or megabytes depending on the size based
            on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Cancel(System.Object)">
            <summary>
            Stops the in-progress chunked upload based on the file data.
            When the file upload is canceled, the partially uploaded file is removed from server.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.ClearAll">
            <summary>
            Clear all the file entries from list that can be uploaded files or added in upload queue.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.CreateFileList(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Create the file list for specified files data.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.GetFilesData(System.Nullable{System.Double})">
            <summary>
            Get the data of files which are shown in file list.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.GetModuleName">
            <summary>
            Return the module name of the component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Pause(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Pauses the in-progress chunked upload based on the file data.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Remove(System.Object,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object)">
            <summary>
            Remove the uploaded file from server manually by calling the remove URL action.
            If you pass an empty argument to this method, the complete file list can be cleared,
            otherwise remove the specific file based on its argument (“file_data”).
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Resume(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Resumes the chunked upload that is previously paused based on the file data.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Retry(System.Object,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Retries the canceled or failed file upload based on the file data.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.SortFileList(System.Object)">
            <summary>
            Allows you to sort the file data alphabetically based on its file name clearly.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsUploader.Upload(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Allows you to call the upload process manually by calling save URL action.
            To process the selected files (added in upload queue), pass an empty argument otherwise
            upload the specific file based on its argument.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Inputs.FloatLabelType">
            <summary>
            Defines floating label type of the input and decides how the label should float on the input.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Inputs.SliderOrientation">
            <summary>
            Slider orientation.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Inputs.SliderType">
            <summary>
            Slider type.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Inputs.Placement">
            <summary>
            Ticks Placement.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Inputs.TooltipPlacement">
            <summary>
            Tooltip Placement.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Inputs.TooltipShowOn">
            <summary>
            Tooltip ShowOn.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Inputs.ColorPickerMode">
            <summary>
            ColorPicker Mode
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Inputs.ErrorOption">
            <summary>
            ErrorOption values
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Inputs.Internal.UploaderJSInterop">
            <summary>
            JSInterop Adaptor for Uploader component
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.Internal.UploaderJSInterop.#ctor(Syncfusion.EJ2.Blazor.Inputs.EjsUploader,Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Constructor for initializing the component adaptor
            </summary>
            <param name="parent">DropDownList arguments</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.Internal.IUploadReadFile.GetFileReader">
            <summary>
            Opens a stream to read the file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.Internal.IUploadFileList.FileListData(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Register for drop events on the source element
            </summary>
            <param name="additive">If set to true, drop target file list becomes additive. Defaults to false.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Inputs.Internal.UploaderJSInteropAdaptor">
            <summary>
            JSInterop Adaptor for Uploader component
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.Internal.UploaderJSInteropAdaptor.#ctor(Syncfusion.EJ2.Blazor.Inputs.EjsUploader)">
            <summary>
            Constructor for initializing the component adaptor
            </summary>
            <param name="parent">DropDownList arguments</param>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.Internal.UploaderJSInteropAdaptor.Create">
            <summary>
            Creates DotNet Object reference
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.Columns">
            <summary>
            It is used to render the ColorPicker palette with specified columns.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.CssClass">
            <summary>
            This property sets the CSS classes to root element of the ColorPicker
             which helps to customize the UI styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.Disabled">
            <summary>
            It is used to enable / disable ColorPicker component. If it is disabled the ColorPicker popup won’t open.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.EnableOpacity">
            <summary>
            It is used to enable / disable the opacity option of ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.EnablePersistence">
            <summary>
            To enable or disable persisting component's state between page reloads and it is extended from component class.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.Inline">
            <summary>
            It is used to render the ColorPicker component as inline.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.Mode">
            <summary>
            It is used to render the ColorPicker with the specified mode.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.ModeSwitcher">
            <summary>
            It is used to show / hide the mode switcher button of ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.NoColor">
            <summary>
            It is used to enable / disable the no color option of ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.PresetColors">
            <summary>
            It is used to load custom colors to palette.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.ShowButtons">
            <summary>
            It is used to show / hide the control buttons (apply / cancel) of  ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.Value">
            <summary>
            It is used to set the color value for ColorPicker. It should be specified as Hex code.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.OnClose">
            <summary>
            Triggers before closing the ColorPicker popup.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.OnModeSwitch">
            <summary>
            Triggers before Switching between ColorPicker mode.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.OnOpen">
            <summary>
            Triggers before opening the ColorPicker popup.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.OnTileRender">
            <summary>
            Trigger while rendering each palette tile.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.ValueChange">
            <summary>
            Triggers while changing the colors. It will be triggered based on the showButtons property.
            If the property is false, the event will be triggered while selecting the colors.
            If the property is true, the event will be triggered while apply the selected color.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.Created">
            <summary>
            Triggers once the component rendering is completed.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.Opened">
            <summary>
            Triggers while opening the ColorPicker popup.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.Selected">
            <summary>
            Triggers while selecting the color in picker / palette, when showButtons property is enabled.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.FocusIn">
            <summary>
            Sets the focus to Colorpicker
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.GetValue(System.String,System.String)">
            <summary>
            To get color value in specified type.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsColorPicker.Toggle">
            <summary>
            To show/hide ColorPicker popup based on current state of the SplitButton.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.CssClass">
            <summary>
            Gets or sets the CSS classes to root element of the MaskedTextBox which helps to customize the
            complete UI styles for the MaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.CustomCharacters">
            <summary>
            Sets the collection of values to be mapped for non-mask elements(literals)
            which have been set in the mask of MaskedTextBox.
             In the below example, non-mask elements "P" accepts values
            "P" , "A" , "p" , "a" and "M" accepts values "M", "m" mentioned in the custom characters collection.
            
            For more information on customCharacters, refer to
            [customCharacters](../../maskedtextbox/mask-configuration/#custom-characters).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.EnablePersistence">
            <summary>
            Sets a value that enables or disables the persisting state of the MaskedTextBox after reloading the page.
            If enabled, the 'value' state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Enabled">
            <summary>
            Sets a value that enables or disables the MaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.FloatLabelType">
            <summary>
            The  acts as a label
            and floats above the MaskedTextBox based on the below values.
            Possible values are:
             Never - The floating label will not be enable when the placeholder is available.
             Always - The floating label always floats above the MaskedTextBox.
             Auto - The floating label floats above the MaskedTextBox after focusing it or when enters the value in it.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Mask">
            <summary>
            Sets a value that masks the MaskedTextBox to allow/validate the user input.
             Mask allows [`standard mask elements`](../../maskedtextbox/mask-configuration/#standard-mask-elements)
             as mask
            elements.
            For more information on mask, refer to
            [mask](../../maskedtextbox/mask-configuration/#standard-mask-elements).
             If the mask value is empty, the MaskedTextBox will behave as an input element with text type.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Placeholder">
            <summary>
            Gets or sets the string shown as a hint/placeholder when the MaskedTextBox is empty.
            It acts as a label and floats above the MaskedTextBox based on the
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.PromptChar">
            <summary>
            Gets or sets a value that will be shown as a prompting symbol for the masked value.
            The symbol used to show input positions in the MaskedTextBox.
            For more information on prompt-character, refer to
            [prompt-character](../../maskedtextbox/mask-configuration/#prompt-character).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Readonly">
            <summary>
            Specifies the boolean value whether the Masked TextBox allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Value">
            <summary>
            Gets or sets the value of the MaskedTextBox. It is a raw value of the MaskedTextBox excluding literals
            and prompt characters. By using `getMaskedValue` property, you can get the value of MaskedTextBox with the masked format.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Width">
            <summary>
            Sets the width of the MaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Blur">
            <summary>
            Triggers when the MaskedTextBox got focus out.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.ValueChange">
            <summary>
            Triggers when the value of the MaskedTextBox changes.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Created">
            <summary>
            Triggers when the MaskedTextBox component is created.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Destroyed">
            <summary>
            Triggers when the MaskedTextBox component is destroyed.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.Focus">
            <summary>
            Triggers when the MaskedTextBox got focus in.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.FocusIn">
            <summary>
            Sets the focus to widget for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.FocusOut">
            <summary>
            Remove the focus from widget, if the widget is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.GetMaskedValue">
            <summary>
            Gets the value of the MaskedTextBox with the masked format.
            By using `value` property, you can get the raw value of maskedtextbox without literals and prompt characters.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsMaskedTextBox.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.ColorRange">
            <summary>
            It is used to render the color to the slider based on the given  value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.CssClass">
            <summary>
            This property sets the CSS classes to root element of the Slider
             which helps to customize the UI styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.CustomValues">
            <summary>
            It is used to denote own array of slider values.
            The value should be specified in array of number or string.The min,max and step value is not considered
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.EnableAnimation">
            <summary>
            It is used to enable or disable the Slider handle moving animation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Enabled">
            <summary>
            It is used to enable or disable the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Limits">
            <summary>
            It is used to limit the slider movement within certain limits.
            Refer the documentation [here](../../slider/limits)
             to know more about this property with demo
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Max">
            <summary>
            It sets the maximum value of Slider Component
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Min">
            <summary>
            It sets the minimum value of Slider Component
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Orientation">
            <summary>
            It is used to render Slider in either horizontal or vertical orientation.
             Refer the documentation [here](../../slider/getting-started#orientation)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Readonly">
            <summary>
            It is used to render the Slider component in read-only mode.
            The slider rendered with user defined values and can’t be interacted with user actions.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.ShowButtons">
            <summary>
            It is used to show or hide the increase and decrease button of Slider Component,
             which is used to change the slider value.
            Refer the documentation [here](../../slider/getting-started#buttons)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Step">
            <summary>
            It is used to denote the step value of Slider component which is the amount of Slider value change
             when increase / decrease button is clicked or press arrow keys or drag the thumb.
             Refer the documentation [here](../../slider/ticks#step)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Ticks">
            <summary>
            It is used to render the slider ticks options such as placement and step values.
            Refer the documentation [here](../../slider/ticks)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Tooltip">
            <summary>
            It is used to denote the slider tooltip and it's position.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Type">
            <summary>
            It is used to denote the type of the Slider. The available options are:
              default - Used to select a single value in the Slider.
              minRange - Used to select a single value in the Slider. It displays shadow from the start value to the current value.
              range - Used to select a range of values in the Slider. It displays shadow in-between the selection range.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Value">
            <summary>
            It is used to denote the current value of the Slider.
            The value should be specified in array of number when render Slider type as range.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Inputs.EjsSlider`1.Reposition">
            <summary>
            It is used to reposition slider.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.NumericTextBoxEvents`1.Blur">
            <summary>
            Triggers when the NumericTextBox got focus out.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.NumericTextBoxEvents`1.ValueChange">
            <summary>
            Triggers when the value of the NumericTextBox changes.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.NumericTextBoxEvents`1.Created">
            <summary>
            Triggers when the NumericTextBox component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.NumericTextBoxEvents`1.Destroyed">
            <summary>
            Triggers when the NumericTextBox component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.NumericTextBoxEvents`1.Focus">
            <summary>
            Triggers when the NumericTextBox got focus in.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderEvents`1.OnChange">
            <summary>
            We can trigger change event whenever Slider value is changed.
             In other term, this event will be triggered while drag the slider thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderEvents`1.ValueChange">
            <summary>
            We can trigger changed event when Slider component action is completed while we change the Slider value.
             In other term, this event will be triggered, while drag the slider thumb completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderEvents`1.Created">
            <summary>
            We can trigger created event when the Slider is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderEvents`1.TicksRendered">
            <summary>
            We can trigger renderedTicks event when the ticks are rendered on the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderEvents`1.TicksRendering">
            <summary>
            We can trigger renderingTicks event when the ticks rendered on Slider,
             which is used to customize the ticks labels dynamically.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderLimitData.Enabled">
            <summary>
            It is used to enable the limit in the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderLimitData.EndHandleFixed">
            <summary>
            It is used to lock the second handle.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderLimitData.MaxEnd">
            <summary>
            It is used to set the maximum end limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderLimitData.MaxStart">
            <summary>
            It is used to set the maximum start limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderLimitData.MinEnd">
            <summary>
            It is used to set the minimum end limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderLimitData.MinStart">
            <summary>
            It is used to set the minimum start limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderLimitData.StartHandleFixed">
            <summary>
            It is used to lock the first handle.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderTicksData.Format">
            <summary>
            It is used to customize the Slider scale value to the desired format using Internationalization or events(custom formatting).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderTicksData.LargeStep">
            <summary>
            It is used to denote the distance between two major (large) ticks from the scale of the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderTicksData.Placement">
            <summary>
            It is used to denote the position of the ticks in the Slider. The available options are:
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderTicksData.ShowSmallTicks">
            <summary>
            We can show or hide the small ticks in the Slider, which will be appeared in between the largeTicks.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderTicksData.SmallStep">
            <summary>
            It is used to denote the distance between two minor (small) ticks from the scale of the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderTooltipData.CssClass">
            <summary>
            It is used to customize the Tooltip which accepts custom CSS class names that define
             specific user-defined styles and themes to be applied on the Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderTooltipData.Format">
            <summary>
            It is used to customize the Tooltip content to the desired format
             using internationalization or events (custom formatting).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderTooltipData.IsVisible">
            <summary>
            It is used to show or hide the Tooltip of Slider Component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderTooltipData.Placement">
            <summary>
            It is used to denote the position for the tooltip element in the Slider. The available options are:
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.SliderTooltipData.ShowOn">
            <summary>
            It is used to determine the device mode to show the Tooltip.
            If it is in desktop, it will show the Tooltip content when hovering on the target element.
            If it is in touch device. It will show the Tooltip content when tap and holding on the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderAsyncSettings.ChunkSize">
            <summary>
            Specifies the chunk size to split the large file into chunks, and upload it to the server in a sequential order.
            If the chunk size property has value, the uploader enables the chunk upload by default.
            It must be specified in bytes value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderAsyncSettings.RemoveUrl">
            <summary>
            Specifies the URL of remove action that receives the file information and handle the remove operation in server.
            The remove action type must be POST request and define “removeFileNames” attribute to get file information that will be removed.
            This property is optional.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderAsyncSettings.RetryAfterDelay">
            <summary>
            Specifies the delay time in milliseconds that the automatic retry happens after the delay.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderAsyncSettings.RetryCount">
            <summary>
            Specifies the number of retries that the uploader can perform on the file failed to upload.
            By default, the uploader set 3 as maximum retries. This property must be specified to prevent infinity looping.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderAsyncSettings.SaveUrl">
            <summary>
            Specifies the URL of save action that will receive the upload files and save in the server.
            The save action type must be POST request and define the argument as same input name used to render the component.
            The upload operations could not perform without this property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderButtonsProps.Browse">
            <summary>
            Specifies the text or html content to browse button
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderButtonsProps.Clear">
            <summary>
            Specifies the text or html content to clear button
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderButtonsProps.Upload">
            <summary>
            Specifies the text or html content to upload button
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnActionComplete">
            <summary>
            Triggers after all the selected files has processed to upload successfully or failed to server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.BeforeRemove">
            <summary>
            Triggers on remove the uploaded file. The event used to get confirm before remove the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.BeforeUpload">
            <summary>
            Triggers when the upload process before. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnCancel">
            <summary>
            Fires if cancel the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.ValueChange">
            <summary>
            Triggers when changes occur in uploaded file list by selecting or dropping files.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnChunkFailured">
            <summary>
            Fires if the chunk file failed to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnChunkSuccess">
            <summary>
            Fires when the chunk file uploaded successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnChunkUploadStart">
            <summary>
            Fires when every chunk upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnClear">
            <summary>
            Triggers before clearing the items in file list when clicking “clear”.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnFailured">
            <summary>
            Triggers when the AJAX request fails on uploading or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnFileListRender">
            <summary>
            Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.Paused">
            <summary>
            Fires if pause the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.Progressing">
            <summary>
            Triggers when uploading a file to the server using the AJAX request.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnRemove">
            <summary>
            Triggers on removing the uploaded file. The event used to get confirm before removing the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.Rendering">
            <summary>
            DEPRECATED-Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnResume">
            <summary>
            Fires if resume the paused chunk file upload.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.FileSelected">
            <summary>
            Triggers after selecting or dropping the files by adding the files in upload queue.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.Success">
            <summary>
            Triggers when the AJAX request gets success on uploading files or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderEvents.OnUploadStart">
            <summary>
            Triggers when the upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderUploadedFiles.Name">
            <summary>
            Specifies the name of the file
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderUploadedFiles.Size">
            <summary>
            Specifies the size of the file
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Inputs.UploaderUploadedFiles.Type">
            <summary>
            Specifies the type of the file
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.Col">
            <summary>
            Defines the column value where the panel to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.Content">
            <summary>
            Defines the template value that should be displayed as the panel's content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.CssClass">
            <summary>
            Defines the CSS class name that can be appended with each panel element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.Enabled">
            <summary>
            Defines whether to the panel should be enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.Header">
            <summary>
            Defines the template value that should be displayed as the panel's header.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.Id">
            <summary>
            Defines the id of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.MaxSizeX">
            <summary>
            Specifies the maximum width of the panel in cells count.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.MaxSizeY">
            <summary>
            Specifies the maximum height of the panel in cells count.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.MinSizeX">
            <summary>
            Specifies the minimum width of the panel in cells count.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.MinSizeY">
            <summary>
            Specifies the minimum height of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.Row">
            <summary>
            Defines a row value where the panel should be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.SizeX">
            <summary>
            Specifies the width of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.SizeY">
            <summary>
            Specifies the height of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutPanel.ZIndex">
            <summary>
            Specifies the z-index of the panel
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.AllowDragging">
            <summary>
            If allowDragging is set to true, then the DashboardLayout allows you to drag and reorder the panels.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.AllowFloating">
            <summary>
            If allowFloating is set to true, then the DashboardLayout automatically move the panels upwards to fill the empty available
            cells while dragging or resizing the panels.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.AllowResizing">
            <summary>
            If allowResizing is set to true, then the DashboardLayout allows you to resize the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.CellAspectRatio">
            <summary>
            Defines the cell aspect ratio of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.CellSpacing">
            <summary>
            Defines the spacing between the panels.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.Columns">
            <summary>
            Defines the number of columns to be created in the DashboardLayout.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.DraggableHandle">
            <summary>
            Defines the draggable handle selector which will act as dragging handler for the panels.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.MediaQuery">
            <summary>
            Defines the media query value where the dashboardlayout becomes stacked layout when the resolution meets.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.Panels">
            <summary>
            Defines the panels property of the DashboardLayout component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.ResizableHandles">
            <summary>
            Defines the resizing handles directions used for resizing the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.ShowGridLines">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.GetPersistData">
            <summary>
            Gets the properties to be maintained upon browser refresh.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.MovePanel(System.String,System.Double,System.Double)">
            <summary>
            Moves the panel in the DashboardLayout.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.RemoveAll">
            <summary>
            Removes all the panels from the DashboardLayout.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.RemovePanel(System.String)">
            <summary>
            Removes the panel from the DashboardLayout.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.ResizePanel(System.String,System.Double,System.Double)">
            <summary>
            Resize the panel in the DashboardLayout.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.Serialize">
            <summary>
            Returns the panels object of the DashboardLayout.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsDashboardLayout.AddPanel(Syncfusion.EJ2.Blazor.Layouts.PanelModel)">
            <summary>
            Allows to add a panel to the Dashboardlayout.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Layouts.Orientation">
            <summary>
            Specifies a value that indicates whether to align the split panes horizontally or vertically.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutEvents.Changed">
            <summary>
            Triggers whenever the panels positions are changed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutEvents.Created">
            <summary>
            Triggers when Dashboard Layout is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutEvents.Destroyed">
            <summary>
            Triggers when Dashboard Layout is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutEvents.Dragging">
            <summary>
            Triggers while a panel is dragged continuously.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutEvents.OnDragStart">
            <summary>
            Triggers when a panel is about to drag.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutEvents.OnDragStop">
            <summary>
            Triggers when a dragged panel is dropped.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutEvents.Resizing">
            <summary>
            Triggers when a panel is being resized continuously.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutEvents.OnResizeStart">
            <summary>
            Triggers when a panel is about to resize.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.DashboardLayoutEvents.OnResizeStop">
            <summary>
            Triggers when a panel resize ends.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.CssClass">
            <summary>
            Specifies the CSS class names that defines specific user-defined
            styles and themes to be appended on the root element of the Splitter.
            It is used to customize the Splitter control.
            One or more custom CSS classes can be specified to the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.Enabled">
            <summary>
            Specifies boolean value that indicates whether the component is enabled or disabled.
            The Splitter component does not allow to interact when this property is disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.Height">
            <summary>
            Specifies the height of the Splitter component that accepts both string and number values.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.Orientation">
            <summary>
            Specifies a value that indicates whether to align the split panes horizontally or vertically.
              Set the orientation property as "Horizontal" to create a horizontal splitter that aligns the panes left-to-right.
              Set the orientation property as "Vertical" to create a vertical splitter that aligns the panes top-to-bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.PaneSettings">
            <summary>
            Configures the individual pane behaviors such as content, size, resizable, minimum, maximum validation, collapsible and collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.SeparatorSize">
            <summary>
            Specifies the size of the separator line for both horizontal or vertical orientation.
            The separator is used to separate the panes by lines.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.Width">
            <summary>
            Specifies the width of the Splitter control, which accepts both string and number values as width.
            The string value can be either in pixel or percentage format.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.AddPane(Syncfusion.EJ2.Blazor.Layouts.PanePropertiesModel,System.Double)">
            <summary>
            Allows you to add a pane dynamically to the specified index position by passing the pane properties.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.Collapse(System.Double)">
            <summary>
            collapses corresponding pane based on the index is passed.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.Expand(System.Double)">
            <summary>
            expands corresponding pane based on the index is passed.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Layouts.EjsSplitter.RemovePane(System.Double)">
            <summary>
            Allows you to remove the specified pane dynamically by passing its index value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterEvents.OnCollapse">
            <summary>
            Triggers when before panes get collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterEvents.OnExpand">
            <summary>
            Triggers when before panes get expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterEvents.OnSanitizeHtml">
            <summary>
            Event triggers before sanitize the value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterEvents.Collapsed">
            <summary>
            Triggers when after panes get collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterEvents.Created">
            <summary>
            Triggers after creating the splitter component with its panes.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterEvents.Expanded">
            <summary>
            Triggers when after panes get expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterEvents.OnResizeStart">
            <summary>
            Triggers when the split pane is started to resize.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterEvents.OnResizeStop">
            <summary>
            Triggers when the resizing of split pane is stopped.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterEvents.Resizing">
            <summary>
            Triggers when a split pane is being resized.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterPane.Collapsed">
            <summary>
            Specifies whether a pane is collapsed or not collapsed at the initial rendering of splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterPane.Collapsible">
            <summary>
            Specifies whether a pane is collapsible or not collapsible.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterPane.Content">
            <summary>
            Specifies the content of split pane as plain text, HTML markup, or any other JavaScript controls.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterPane.CssClass">
            <summary>
            Specifies the CSS class names that defines specific user-defined
            styles and themes to be appended on corresponding pane of the Splitter.
            It is used to customize the Splitter control panes.
            One or more custom CSS classes can be specified to the Splitter panes.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterPane.Max">
            <summary>
            Specifies the maximum size of a pane. The pane cannot be resized if it is more than the specified maximum limit.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterPane.Min">
            <summary>
            Specifies the minimum size of a pane. The pane cannot be resized if it is less than the specified minimum size.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterPane.Resizable">
            <summary>
            Specifies the value whether a pane is resizable. By default, the Splitter is resizable in all panes.
            You can disable this for any specific panes using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Layouts.SplitterPane.Size">
            <summary>
            Configures the properties for each pane.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Lists.CheckBoxPosition">
            <summary>
            ListView check box positions
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Lists.SortOrder">
            <summary>
            Sorting Order
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Lists.ListViewEffect">
            <summary>
            ListView animation effects
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.Animation">
            <summary>
            It is used to apply the animation to sub list navigation of list items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.CheckBoxPosition">
            <summary>
            It is used to set the position of check box in an item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.CssClass">
            <summary>
            This cssClass property helps to use custom skinning option for ListView component,
             by adding the mentioned class name into root element of ListView.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.DataSource">
            <summary>
            It provides the data to render the ListView component which is mapped
             with the fields of ListView.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.Enable">
            <summary>
            It specifies enabled state of ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.EnableVirtualization">
            <summary>
            It enables UI virtualization which will increase ListView performance on loading large number of data.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.Fields">
            <summary>
            It is used to map keys from the dataSource which extracts the appropriate data from the dataSource
             with specified mapped with the column fields to render the ListView.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.GroupTemplate">
            <summary>
            The ListView has an option to custom design the group header title with the help of groupTemplate property.
            Refer the documentation [here]
            (./listview/customizing-templates#group-template)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.HeaderTemplate">
            <summary>
            The ListView has an option to custom design the ListView header title with the help of headerTemplate property.
            Refer the documentation [here]
            (./listview/customizing-templates#header-template)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.HeaderTitle">
            <summary>
            It is used to set the title of ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.Height">
            <summary>
            It is used to set the height of the ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.HtmlAttributes">
            <summary>
            Defines the HTML attributes such as id, class, etc., for the ListView.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.Query">
            <summary>
            It is used to fetch the specific data from dataSource by using where, select key words.
            Refer the documentation [here]
            (./data-binding#bind-to-remote-data)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.ShowCheckBox">
            <summary>
            Using this property, we can show or hide the `checkbox`.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.ShowHeader">
            <summary>
            Using this property, we can show or hide the header of ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.ShowIcon">
            <summary>
            Using this property, we can show or hide the icon of list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.SortOrder">
            <summary>
            It is used to enable the sorting of list items to be ascending or descending.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.Template">
            <summary>
            The ListView supports to customize the content of each list items with the help of template property.
            Refer the documentation [here](../../listview/customizing-templates)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.Width">
            <summary>
            It sets the width to the ListView component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.AddItem(System.Object,System.Object)">
            <summary>
            It adds new item(s) to current ListView.
            To add a new item(s) in the listview, we need to pass `data` as array of items that needs
            to be added and `fields` as the target item to which we need to add the given item(s) as its children.
            For example fields: { text: 'Name', tooltip: 'Name', id:'id'}
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.Back">
            <summary>
            It helps to switch back from navigated sub list.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.CheckAllItems">
            <summary>
            It is used to check all the items in ListView.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.CheckItem(System.Object)">
            <summary>
            It is used to check the checkbox of an item.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.DisableItem(System.Object)">
            <summary>
            It is used to disable the list items based on passed element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.EnableItem(System.Object)">
            <summary>
            A function that used to enable the disabled list items based on passed element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.FindItem(System.Object)">
            <summary>
            It is used to find out an item details from the current list.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.GetSelectedItems">
            <summary>
            It is used to get the currently [here](./selectedItem)
             item details from the list items.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.HideItem(System.Object)">
            <summary>
            It is used to hide an item from the ListView.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.RefreshItemHeight">
            <summary>
            It is used to refresh the UI list item height
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.RemoveItem(System.Object)">
            <summary>
            A function that removes the item from data source based on passed element like fields: { text: 'Name', tooltip: 'Name', id:'id'}
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.RemoveMultipleItems(System.Object)">
            <summary>
            A function that removes multiple item from list view based on given input.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.Render">
            <summary>
            It is used to Initialize the control rendering.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.SelectItem(System.Object)">
            <summary>
            It is used to select the list item from the ListView.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.SelectMultipleItems(System.Object)">
            <summary>
            It is used to select multiple list item from the ListView.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.ShowItem(System.Object)">
            <summary>
            It is used to show an list item from the ListView.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.UncheckAllItems">
            <summary>
            It is used to un-check all the items in ListView.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Lists.EjsListView`1.UncheckItem(System.Object)">
            <summary>
            It is used to uncheck the checkbox of an item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.ChildContent">
            <summary>
            It specifies to show child content
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.ExpandCollapse">
            <summary>
            It specifies to show collapsible icon
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.ExpandIconClass">
            <summary>
            It specifies when need to add additional expand/collapse icon class
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.ExpandIconPosition">
            <summary>
            It specifies the expand/collapse icon position
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.ItemClass">
            <summary>
            It specifies when need to add additional LI item class
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.ListClass">
            <summary>
            It specifies when need to add additional UL list class
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.ModuleName">
            <summary>
            It specifies the customized class name based on their module name
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.ProcessSubChild">
            <summary>
            Enables when need process depth child processing
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.ShowCheckBox">
            <summary>
            It specifies to show checkBox
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.ShowIcon">
            <summary>
            It specifies to show icon
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.SortOrder">
            <summary>
            It specifies the sort order
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.FieldsMapping">
            <summary>
            It specifies that fields that mapped in dataSource
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListBaseOptions`1.AriaAttributesMapping">
            <summary>
            It specifies the aria attributes
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewEvents`1.OnActionBegin">
            <summary>
            We can trigger `actionBegin` event before every ListView action starts.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewEvents`1.OnActionComplete">
            <summary>
            We can trigger `actionComplete` event for every ListView action success event
             with the dataSource parameter.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewEvents`1.OnActionFailure">
            <summary>
            We can trigger `actionFailure` event for every ListView action failure event
             with the dataSource parameter.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewEvents`1.Selected">
            <summary>
            We can trigger the `select` event when we select the list item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.Child">
            <summary>
            This property used for nested navigation of list-items.
            Refer the documentation [here](../../listview/nested-list)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.Enabled">
            <summary>
            It is used to enable the list item
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.GroupBy">
            <summary>
            It wraps the list view element into a group based on the value of groupBy property.
            Refer the documentation [here](../../listview/grouping)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.HtmlAttributes">
            <summary>
            Defines the HTML attributes such as id, class, etc,. for the specific list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.IconCss">
            <summary>
            It is used to customize the icon to the list items dynamically.
             We can add specific image to the icons using iconCss property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.Id">
            <summary>
            ID attribute of specific list-item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.IsChecked">
            <summary>
            This property used to check whether the list item is in checked state or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.IsVisible">
            <summary>
            To check whether the visibility state of list item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.SortBy">
            <summary>
            It is used to enable the sorting of list items to be ascending or descending.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.TableName">
            <summary>
            It is used to fetch a specified named table data while using serviceUrl of DataManager
             in dataSource property.
            Refer the documentation [here](https://ej2.syncfusion.com/documentation/data/getting-started?lang=typescript)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.Text">
            <summary>
            It is used to map the text value of list item from the dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Lists.ListViewFieldSettings.Tooltip">
            <summary>
            It is used to display `tooltip content of text` while hovering on list items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionAnimationAction.Duration">
            <summary>
            Specifies the duration to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionAnimationAction.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionAnimationAction.Effect">
            <summary>
            Specifies the type of animation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Animate">
            <summary>
            Enable or disable the animation transitions on expanding or collapsing the Sidebar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.CloseOnDocumentClick">
            <summary>
            Specifies whether the Sidebar need to be closed or not when document area is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.DockSize">
            <summary>
            Specifies the size of the Sidebar in dock state.
            > For more details about dockSize refer to
            [`Dock`](https://ej2.syncfusion.com/documentation/sidebar/docking-sidebar/) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.EnableDock">
            <summary>
            Specifies the docking state of the component.
            > For more details about enableDock refer to
            [`Dock`](https://ej2.syncfusion.com/documentation/sidebar/docking-sidebar/) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.EnableGestures">
            <summary>
            Enables the expand or collapse while swiping in touch devices.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads. If enabled, following list of states will be persisted.
            1. Position
            2. Type
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.EnableRtl">
            <summary>
            Specifies the Sidebar in RTL mode that displays the content in the right-to-left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.IsOpen">
            <summary>
            Gets or sets the Sidebar component is open or close.
            > When the Sidebar type is set to `Auto`,
            the component will be expanded in the desktop and collapsed in the mobile mode regardless of the isOpen property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.MediaQuery">
            <summary>
            Specifies the media query string for resolution, which when met opens the Sidebar.
            
            > For more details about mediaQuery refer to
            [`Auto Close`](https://ej2.syncfusion.com/documentation/sidebar/auto-close/) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Position">
            <summary>
            Specifies the position of the Sidebar (Left/Right) corresponding to the main content.
            > For more details about SidebarPosition refer to
            [`position`](https://ej2.syncfusion.com/documentation/sidebar/getting-started/#position) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.ShowBackdrop">
            <summary>
            Specifies the whether to apply overlay options to main content when the Sidebar is in an open state.
            > For more details about showBackdrop refer to
            [`Backdrop`](https://ej2.syncfusion.com/documentation/sidebar/getting-started/#enable-backdrop) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Target">
            <summary>
            Allows to place the sidebar inside the target element.
            > For more details about target refer to
            [`Custom Context`](https://ej2.syncfusion.com/documentation/sidebar/custom-context/) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Type">
            <summary>
            Specifies the expanding types of the Sidebar.
             `Over` - The sidebar floats over the main content area.
             `Push` - The sidebar pushes the main content area to appear side-by-side, and shrinks the main content within the screen width.
             `Slide` - The sidebar translates the x and y positions of main content area based on the sidebar width.
            The main content area will not be adjusted within the screen width.
             `Auto` - Sidebar with `Over` type in mobile resolution and `Push` type in other higher resolutions.
            > For more details about SidebarType refer to
            [`SidebarType`](../../sidebar/variations/) documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Width">
            <summary>
            Specifies the width of the Sidebar. By default, the width of the Sidebar sets based on the size of its content.
            Width can also be set in pixel values.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.ZIndex">
            <summary>
            Specifies the z-index of the Sidebar. It is applicable only when sidebar act as overlay type.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Changed">
            <summary>
            Triggers when the state(expand/collapse) of the component is changed.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.OnClose">
            <summary>
            Triggers when component is closed.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Created">
            <summary>
            Triggers when component is created.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Destroyed">
            <summary>
            Triggers when component gets destroyed.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.OnOpen">
            <summary>
            Triggers when component is opened.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Hide(Syncfusion.EJ2.Blazor.Navigations.EventArgs)">
            <summary>
            Hide the Sidebar component, if it is in an open state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Show(Syncfusion.EJ2.Blazor.Navigations.EventArgs)">
            <summary>
            Shows the Sidebar component, if it is in closed state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsSidebar.Toggle(Syncfusion.EJ2.Blazor.Navigations.EventArgs)">
            <summary>
            Shows or hides the Sidebar based on the current state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.Animation">
            <summary>
            Specifies the animation configuration settings while showing the content of the Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.CssClass">
            <summary>
            Sets the CSS classes to root element of the Tab that helps to customize component styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            If enabled, following list of states will be persisted.
            1. selectedItem
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.HeaderPlacement">
            <summary>
            Specifies the orientation of Tab header.
            The possible values are:
            - Top: Places the Tab header on the top.
            - Bottom: Places the Tab header at the bottom.
            - Left: Places the Tab header on the left.
            - Right: Places the Tab header at the right.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.Height">
            <summary>
            Specifies the height of the Tab component. By default, Tab height is set based on the height of its parent.
            To use height property, heightAdjustMode must be set to 'None'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.Items">
            <summary>
            An array of object that is used to configure the Tab component.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.OverflowMode">
            <summary>
            Specifies the Tab display mode when Tab content exceeds the viewing area.
            The possible modes are:
            - Scrollable: All the elements are displayed in a single line with horizontal scrolling enabled.
            - Popup: Tab container holds the items that can be placed within the available space and rest of the items are moved to the popup.
            If the popup content overflows the height of the page, the rest of the elements can be viewed by scrolling the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.ScrollStep">
            <summary>
            Specifies the scrolling distance in scroller.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.SelectedItem">
            <summary>
            Specifies the index for activating the current Tab item.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.ShowCloseButton">
            <summary>
            Specifies whether to show the close button for header items to remove the item from the Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTab.Width">
            <summary>
            Specifies the width of the Tab component. Default, Tab width sets based on the width of its parent.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTab.Disable(System.Boolean)">
            <summary>
            Specifies the value to disable/enable the Tab component.
            When set to `true`, the component will be disabled.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTab.EnableTab(System.Double,System.Boolean)">
            <summary>
            Enables or disables the specified Tab item. On passing value as `false`, the item will be disabled.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTab.HideTab(System.Double,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides the Tab that is in the specified index.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTab.Select(System.Object)">
            <summary>
            Specifies the index or HTMLElement to select an item from the Tab.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTab.AddTab(System.Collections.Generic.List{Syncfusion.EJ2.Blazor.Navigations.TabItem},System.Int32)">
            <summary>
            Adds new items to the Tab that accepts an list of Tab items.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTab.RemoveTab(System.Int32)">
            <summary>
            Removes the items in the Tab from the specified index.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.CssClass">
            <summary>
            Sets the CSS classes to root element of the Tab that helps to customize component styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.EnableCollision">
            <summary>
            Enable or disable the popup collision.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.Height">
            <summary>
            Specifies the height of the Toolbar in pixels/number/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.Items">
            <summary>
            An array of items that is used to configure Toolbar commands.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.OverflowMode">
            <summary>
            Specifies the Toolbar display mode when Toolbar content exceeds the viewing area.
            Possible modes are:
            - Scrollable: All the elements are displayed in a single line with horizontal scrolling enabled.
            - Popup: Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the popup.
            - MultiRow: Displays the overflow toolbar items as an in-line of a toolbar.
            - Extended: Hide the overflowing toolbar items in the next row.  Show the overflowing toolbar items when you click the expand icons.
            If the popup content overflows the height of the page, the rest of the elements will be hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.ScrollStep">
            <summary>
            Specifies the scrolling distance in scroller.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.Width">
            <summary>
            Specifies the width of the Toolbar in pixels/numbers/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.Disable(System.Boolean)">
            <summary>
            Specifies the value to disable/enable the Toolbar component.
            When set to `true`, the component will be disabled.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.EnableItems(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Enables or disables the specified Toolbar item.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.HideItem(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides the Toolbar item that is in the specified index.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.RefreshOverflow">
            <summary>
            Refresh the whole Toolbar component without re-rendering.
            - It is used to manually refresh the Toolbar overflow modes such as scrollable, popup, multi row, and extended.
            - It will refresh the Toolbar component after loading items dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.AddItems(System.Collections.Generic.List{Syncfusion.EJ2.Blazor.Navigations.ToolbarItem},System.Int32)">
            <summary>
            Adds new items to the Toolbar that accepts an list of Toolbar items.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsToolbar.RemoveItems(System.Int32)">
            <summary>
            Removes the items from the Toolbar at the specified index.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.ExpandMode">
            <summary>
            Specifies the option to expand single or multiple panel at a time.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.OverflowMode">
            <summary>
            Specifies the options of Toolbar display mode. Display option is considered when Toolbar content exceeds the available space.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.OverflowOption">
            <summary>
            Specifies the options of the Toolbar item display area when the Toolbar content overflows to available space.Applicable to `popup` mode.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.DisplayMode">
            <summary>
            Specifies the options of where the text will be displayed in popup mode of the Toolbar.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.ItemType">
            <summary>
            Specifies the options for supporting element types of Toolbar command.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.MenuEffect">
            <summary>
            Menu animation effects
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.HeaderPosition">
            <summary>
            Options to set the orientation of Tab header.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.SidebarPosition">
            <summary>
            Specifies the Sidebar positions.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.SidebarType">
            <summary>
            Specifies the Sidebar types.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.Orientation">
            <summary>
            Specifies the option for orientation mode of Menu. By default, component rendered in Horizontal orientation mode.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Navigations.HeightStyles">
            <summary>
            Options to set the content element height adjust modes.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabAnimationAction.Duration">
            <summary>
            Specifies the time duration to transform content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabAnimationAction.Easing">
            <summary>
            Specifies easing effect applied while transforming content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabAnimationAction.Effect">
            <summary>
            Specifies the animation effect for displaying Tab content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewActionSettings.Duration">
            <summary>
            Specifies the duration to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewActionSettings.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewActionSettings.Effect">
            <summary>
            Specifies the type of animation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.Child">
            <summary>
            Binds the field settings for child nodes or mapping field for nested nodes objects that contain array of JSON objects.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.DataSource">
            <summary>
            Specifies the array of JavaScript objects or instance of DataManager to populate the nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.Expanded">
            <summary>
            Specifies the mapping field for expand state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.HasChildren">
            <summary>
            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.HtmlAttributes">
            <summary>
            Specifies the mapping field for htmlAttributes to be added to the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.IconCss">
            <summary>
            Specifies the mapping field for icon class of each TreeView node that will be added before the text.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.Id">
            <summary>
            Specifies the ID field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.ImageUrl">
            <summary>
            Specifies the mapping field for image URL of each TreeView node where image will be added before the text.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.IsChecked">
            <summary>
            Specifies the field for checked state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.NavigateUrl">
            <summary>
            Specifies the mapping field for navigateUrl to be added as hyper-link of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.ParentID">
            <summary>
            Specifies the parent ID field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.Query">
            <summary>
            Defines the external [`Query`](http://ej2.syncfusion.com/documentation/data/api-query.html)
            that will execute along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.Selected">
            <summary>
            Specifies the mapping field for selected state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.TableName">
            <summary>
            Specifies the table name used to fetch data from a specific table in the server.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.Text">
            <summary>
            Specifies the mapping field for text displayed as TreeView node's display text.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewCommonFieldsSettings`1.Tooltip">
            <summary>
            Specifies the mapping field for tooltip that will be displayed as hovering text of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionAnimationSettings.Collapse">
            <summary>
            Specifies the animation to appear while collapsing the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionAnimationSettings.Expand">
            <summary>
            Specifies the animation to appear while expanding the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionEvents.Clicked">
            <summary>
            The event will be fired while clicking anywhere within the Accordion.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionEvents.Created">
            <summary>
            The event will be fired once the control rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionEvents.Destroyed">
            <summary>
            The event will be fired when the control gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionEvents.Expanded">
            <summary>
            The event will be fired after the item gets collapsed/expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionEvents.Expanding">
            <summary>
            The event will be fired before the item gets collapsed/expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionItem.Content">
            <summary>
            Sets the text content to be displayed for the Accordion item.
            You can set the content of the Accordion item using `content` property.
            It also supports to include the title as `HTML element`, `string`, or `query selector`.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionItem.CssClass">
            <summary>
            Defines single/multiple classes (separated by a space) are to be used for Accordion item customization.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionItem.Expanded">
            <summary>
            Sets the expand (true) or collapse (false) state of the Accordion item. By default, all the items are in a collapsed state.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionItem.Header">
            <summary>
            Sets the header text to be displayed for the Accordion item.
            You can set the title of the Accordion item using `header` property.
            It also supports to include the title as `HTML element`, `string`, or `query selector`.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.AccordionItem.IconCss">
            <summary>
            Defines an icon with the given custom CSS class that is to be rendered before the header text.
            Add the css classes to the `iconCss` property and write the css styles to the defined class to set images/icons.
            Adding icon is applicable only to the header.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuAnimationSettings.Duration">
            <summary>
            Specifies the time duration to transform object.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuAnimationSettings.Easing">
            <summary>
            Specifies the easing effect applied while transform.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuAnimationSettings.Effect">
            <summary>
            Specifies the effect that shown in the sub menu transform.
            The possible effects are:
             None: Specifies the sub menu transform with no animation effect.
             SlideDown: Specifies the sub menu transform with slide down effect.
             ZoomIn: Specifies the sub menu transform with zoom in effect.
             FadeIn: Specifies the sub menu transform with fade in effect.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuEvents.OnClose">
            <summary>
            Triggers before closing the menu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuEvents.OnItemRender">
            <summary>
            Triggers while rendering each menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuEvents.OnOpen">
            <summary>
            Triggers before opening the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuEvents.Closed">
            <summary>
            Triggers while closing the menu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuEvents.Opened">
            <summary>
            Triggers while opening the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuEvents.ItemSelected">
            <summary>
            Triggers while selecting menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuItem.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the menu Item that is used to include an icon.
            Menu Item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuItem.Id">
            <summary>
            Specifies the id for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuItem.Items">
            <summary>
            Specifies the sub menu items that is the array of MenuItem model.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuItem.Separator">
            <summary>
            Specifies separator between the menu items. Separator are either horizontal or vertical lines used to group menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuItem.Text">
            <summary>
            Specifies text for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ContextMenuItem.Url">
            <summary>
            Specifies url for menu item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.Animation">
            <summary>
            Specifies the animation configuration settings for expanding and collapsing the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.DataSource">
            <summary>
            Specifies the datasource for the accordion items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.ExpandMode">
            <summary>
            Specifies the options to expand single or multiple panel at a time.
            The possible values are:
            - Single: Sets to expand only one Accordion item at a time.
            - Multiple: Sets to expand more than one Accordion item at a time.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.HeaderTemplate">
            <summary>
            Specifies the header title template option for accordion items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.Height">
            <summary>
            Specifies the height of the Accordion in pixels/number/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.ItemTemplate">
            <summary>
            Specifies the template option for accordion items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.Items">
            <summary>
            An array of item that is used to specify Accordion items.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.Width">
            <summary>
            Specifies the width of the Accordion in pixels/number/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.AddItem(System.Object,System.Nullable{System.Double})">
            <summary>
            Adds new item to the Accordion with the specified index of the Accordion.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.EnableItem(System.Double,System.Boolean)">
            <summary>
            Enables/Disables the specified Accordion item.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.ExpandItem(System.Boolean,System.Nullable{System.Double})">
            <summary>
            Expands/Collapses the specified Accordion item.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.HideItem(System.Double,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides the specified item from Accordion.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.RemoveItem(System.Double)">
            <summary>
            Dynamically removes item from Accordion.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsAccordion.Select(System.Double)">
            <summary>
            Sets focus to the specified index item header in Accordion.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.AnimationSettings">
            <summary>
            Specifies the animation settings for the sub menu open.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the Menu wrapper.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.Filter">
            <summary>
            Specifies the filter selector for elements inside the target in that the context menu will be opened.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.Items">
            <summary>
            Specifies menu items with its properties which will be rendered as ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.ShowItemOnClick">
            <summary>
            Specifies whether to show the sub menu or not on click.
            When set to true, the sub menu will open only on mouse click.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.Target">
            <summary>
            Specifies target element selector in which the ContextMenu should be opened.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.Close">
            <summary>
            Closes the ContextMenu if it is opened.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.EnableItems(System.Object,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            This method is used to enable or disable the menu items in the Menu based on the items and enable argument.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.HideItems(System.Object,System.Nullable{System.Boolean})">
            <summary>
            This method is used to hide the menu items in the Menu based on the items text.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.InsertAfter(System.Object,System.String,System.Nullable{System.Boolean})">
            <summary>
            It is used to insert the menu items after the specified menu item text.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.InsertBefore(System.Object,System.String,System.Nullable{System.Boolean})">
            <summary>
            It is used to insert the menu items before the specified menu item text.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.Open(System.Double,System.Double,System.Object)">
            <summary>
            This method is used to open the ContextMenu in specified position.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.RemoveItems(System.Object,System.Nullable{System.Boolean})">
            <summary>
            It is used to remove the menu items from the Menu based on the items text.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsContextMenu.ShowItems(System.Object,System.Nullable{System.Boolean})">
            <summary>
            This method is used to show the menu items in the Menu based on the items text.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.AnimationSettings">
            <summary>
            Specifies the animation settings for the sub menu open.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the Menu wrapper.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.EnableScrolling">
            <summary>
            Specifies whether to enable / disable the scrollable option in Menu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.Fields">
            <summary>
            Specifies mapping fields from the dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.HamburgerMode">
            <summary>
            Specifies whether to enable / disable the hamburger mode in Menu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.Items">
            <summary>
            Specifies menu items with its properties which will be rendered as Menu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.Orientation">
            <summary>
            Specified the orientation of Menu whether it can be horizontal or vertical.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.ShowItemOnClick">
            <summary>
            Specifies whether to show the sub menu or not on click.
            When set to true, the sub menu will open only on mouse click.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.Target">
            <summary>
            Specifies target element to open/close Menu while click in Hamburger mode.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.Template">
            <summary>
            Specifies the template for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.Title">
            <summary>
            Specifies the title text for hamburger mode in Menu.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.Close">
            <summary>
            Closes the Menu if it is opened in hamburger mode.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.EnableItems(System.Object,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            This method is used to enable or disable the menu items in the Menu based on the items and enable argument.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.HideItems(System.Object,System.Nullable{System.Boolean})">
            <summary>
            This method is used to hide the menu items in the Menu based on the items text.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.InsertAfter(System.Object,System.String,System.Nullable{System.Boolean})">
            <summary>
            It is used to insert the menu items after the specified menu item text.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.InsertBefore(System.Object,System.String,System.Nullable{System.Boolean})">
            <summary>
            It is used to insert the menu items before the specified menu item text.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.Open">
            <summary>
            This method is used to open the Menu in hamburger mode.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.RemoveItems(System.Object,System.Nullable{System.Boolean})">
            <summary>
            It is used to remove the menu items from the Menu based on the items text.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsMenu.ShowItems(System.Object,System.Nullable{System.Boolean})">
            <summary>
            This method is used to show the menu items in the Menu based on the items text.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.AllowDragAndDrop">
            <summary>
            Indicates whether the TreeView allows drag and drop of nodes. To drag and drop a node in
            desktop, hold the mouse on the node, drag it to the target node and drop the node by releasing
            the mouse. For touch devices, drag and drop operation is performed by touch, touch move
            and touch end. For more information on drag and drop nodes concept, refer to
            [Drag and Drop](../../treeview/drag-and-drop/).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.AllowEditing">
            <summary>
            Enables or disables editing of the text in the TreeView node. When `allowEditing` property is set
            to true, the TreeView allows you to edit the node by double clicking the node or by navigating to
            the node and pressing F2 key. For more information on node editing, refer
            to [Node Editing](../../treeview/node-editing/).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.AllowMultiSelection">
            <summary>
            Enables or disables multi-selection of nodes. To select multiple nodes:
             Select the nodes by holding down the CTRL key while clicking on the nodes.
             Select consecutive nodes by clicking the first node to select and hold down the SHIFT key
            and click the last node to select.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.Animation">
            <summary>
            Specifies the type of animation applied on expanding and collapsing the nodes along with duration.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.AutoCheck">
            <summary>
            Allow us to specify the parent and child nodes to get auto check while we check or uncheck a node.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.CheckedNodes">
            <summary>
            The `checkedNodes` property is used to set the nodes that need to be checked or
            get the ID of nodes that are currently checked in the TreeView component.
            The `checkedNodes` property depends upon the value of `showCheckBox` property.
            For more information on checkedNodes, refer to
            [checkedNodes](../../treeview/check-box#checked-nodes).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.CssClass">
            <summary>
            Specifies the CSS classes to be added with root element of the TreeView to help customize the appearance of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.EnablePersistence">
            <summary>
            Enables or disables persisting TreeView state between page reloads. If enabled, following APIs will persist.
            1. `selectedNodes` - Represents the nodes that are selected in the TreeView component.
            2. `checkedNodes`  - Represents the nodes that are checked in the TreeView component.
            3. `expandedNodes` - Represents the nodes that are expanded in the TreeView component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.ExpandOn">
            <summary>
            Specifies the action on which the node expands or collapses. The available actions are,
             `Auto` - In desktop, the expand/collapse operation happens when you double-click the node, and in mobile devices it
            happens on single-click.
             `Click` - The expand/collapse operation happens when you single-click the node in both desktop and mobile devices.
             `DblClick` - The expand/collapse operation happens when you double-click the node in both desktop and mobile devices.
             `None` - The expand/collapse operation will not happen when you single-click or double-click the node in both desktop
             and mobile devices.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.ExpandedNodes">
            <summary>
            Represents the expanded nodes in the TreeView component. We can set the nodes that need to be
            expanded or get the ID of the nodes that are currently expanded by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.Fields">
            <summary>
            Specifies the data source and mapping fields to render TreeView nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.FullRowSelect">
            <summary>
            On enabling this property, the entire row of the TreeView node gets selected by clicking a node.
            When disabled only the corresponding node's text gets selected.
            For more information on Fields concept, refer to
            [Fields](../../treeview/data-binding#local-data).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.LoadOnDemand">
            <summary>
            By default, the load on demand (Lazy load) is set to true. By disabling this property, all the tree nodes are rendered at the
            beginning itself.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.NodeTemplate">
            <summary>
            Specifies a template to render customized content for all the nodes. If the `nodeTemplate` property
            is set, the template content overrides the displayed node text. The property accepts template string
            [template string](http://ej2.syncfusion.com/documentation/base/template-engine.html)
            or HTML element ID holding the content. For more information on template concept, refer to
            [Template](../../treeview/template/).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.SelectedNodes">
            <summary>
            Represents the selected nodes in the TreeView component. We can set the nodes that need to be
            selected or get the ID of the nodes that are currently selected by using this property.
            On enabling `allowMultiSelection` property we can select multiple nodes and on disabling
            it we can select only a single node.
            For more information on selectedNodes, refer to
            [selectedNodes](../../treeview/multiple-selection#selected-nodes).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.ShowCheckBox">
            <summary>
            Indicates that the nodes will display CheckBoxes in the TreeView.
            The CheckBox will be displayed next to the expand/collapse icon of the node. For more information on CheckBoxes, refer to
            [CheckBox](../../treeview/check-box/).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.SortOrder">
            <summary>
            Specifies a value that indicates whether the nodes are sorted in the ascending or descending order,
            or are not sorted at all. The available types of sort order are,
             `None` - The nodes are not sorted.
             `Ascending` - The nodes are sorted in the ascending order.
             `Descending` - The nodes are sorted in the ascending order.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.AddNodes(System.Object,System.Object,System.Nullable{System.Double},System.Nullable{System.Boolean})">
            <summary>
            Adds the collection of TreeView nodes based on target and index position. If target node is not specified,
            then the nodes are added as children of the given parentID or in the root level of TreeView.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.BeginEdit(System.Object)">
            <summary>
            Instead of clicking on the TreeView node for editing, we can enable it by using
            `beginEdit` property. On passing the node ID or element through this property, the edit textBox
            will be created for the particular node thus allowing us to edit it.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.CheckAll(System.Object)">
            <summary>
            Checks all the unchecked nodes. You can also check specific nodes by passing array of unchecked nodes
            as argument to this method.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.CollapseAll(System.Object,System.Nullable{System.Double},System.Nullable{System.Boolean})">
            <summary>
            Collapses all the expanded TreeView nodes. You can collapse specific nodes by passing array of nodes as argument to this method.
            You can also collapse all the nodes excluding the hidden nodes by setting excludeHiddenNodes to true. If you want to collapse
            a specific level of nodes, set level as argument to collapseAll method.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.DisableNodes(System.Object)">
            <summary>
            Disables the collection of nodes by passing the ID of nodes or node elements in the array.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.EnableNodes(System.Object)">
            <summary>
            Enables the collection of disabled nodes by passing the ID of nodes or node elements in the array.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.EnsureVisible(System.Object)">
            <summary>
            Ensures visibility of the TreeView node by using node ID or node element.
            When many TreeView nodes are present and we need to find a particular node, `ensureVisible` property
            helps bring the node to visibility by expanding the TreeView and scrolling to the specific node.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.ExpandAll(System.Object,System.Nullable{System.Double},System.Nullable{System.Boolean})">
            <summary>
            Expands all the collapsed TreeView nodes. You can expand the specific nodes by passing the array of collapsed nodes
            as argument to this method. You can also expand all the collapsed nodes by excluding the hidden nodes by setting
            excludeHiddenNodes to true to this method. To expand a specific level of nodes, set level as argument to expandAll method.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.GetAllCheckedNodes">
            <summary>
            Gets all the checked nodes including child, whether it is loaded or not.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.GetDisabledNodes">
            <summary>
            Gets all the disabled nodes including child, whether it is loaded or not.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.GetNode(System.Object)">
            <summary>
            Get the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.GetTreeData(System.Object)">
            <summary>
            To get the updated data source of TreeView after performing some operation like drag and drop, node editing,
            node selecting/unSelecting, node expanding/collapsing, node checking/unChecking, adding and removing node.
             If you pass the ID of TreeView node as arguments for this method then it will return the updated data source
            of the corresponding node otherwise it will return the entire updated data source of TreeView.
             The updated data source also contains custom attributes if you specified in data source.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.MoveNodes(System.Object,System.Object,System.Double,System.Nullable{System.Boolean})">
            <summary>
            Moves the collection of nodes within the same TreeView based on target or its index position.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.RefreshNode(System.Object,System.Object)">
            <summary>
            Refreshes a particular node of the TreeView.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.RemoveNodes(System.Object)">
            <summary>
            Removes the collection of TreeView nodes by passing the array of node details as argument to this method.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.UncheckAll(System.Object)">
            <summary>
            Unchecks all the checked nodes. You can also uncheck the specific nodes by passing array of checked nodes
            as argument to this method.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Navigations.EjsTreeView`1.UpdateNode(System.Object,System.String)">
            <summary>
            Replaces the text of the TreeView node with the given text.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuAnimationSettings.Duration">
            <summary>
            Specifies the time duration to transform object.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuAnimationSettings.Easing">
            <summary>
            Specifies the easing effect applied while transform.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuAnimationSettings.Effect">
            <summary>
            Specifies the effect that shown in the sub menu transform.
            The possible effects are:
             None: Specifies the sub menu transform with no animation effect.
             SlideDown: Specifies the sub menu transform with slide down effect.
             ZoomIn: Specifies the sub menu transform with zoom in effect.
             FadeIn: Specifies the sub menu transform with fade in effect.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuEvents.OnClose">
            <summary>
            Triggers before closing the menu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuEvents.OnItemRender">
            <summary>
            Triggers while rendering each menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuEvents.OnOpen">
            <summary>
            Triggers before opening the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuEvents.Closed">
            <summary>
            Triggers while closing the menu.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuEvents.Opened">
            <summary>
            Triggers while opening the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuEvents.ItemSelected">
            <summary>
            Triggers while selecting menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuFieldSettings.Children">
            <summary>
            Specifies the children field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuFieldSettings.IconCss">
            <summary>
            Specifies the css icon field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuFieldSettings.ItemId">
            <summary>
            Specifies the itemId field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuFieldSettings.ParentId">
            <summary>
            Specifies the parentId field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuFieldSettings.Separator">
            <summary>
            Specifies the separator field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuFieldSettings.Text">
            <summary>
            Specifies the text field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuFieldSettings.Url">
            <summary>
            Specifies the Url field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuItem.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the menu Item that is used to include an icon.
            Menu Item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuItem.Id">
            <summary>
            Specifies the id for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuItem.Items">
            <summary>
            Specifies the sub menu items that is the array of MenuItem model.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuItem.Separator">
            <summary>
            Specifies separator between the menu items. Separator are either horizontal or vertical lines used to group menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuItem.Text">
            <summary>
            Specifies text for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.MenuItem.Url">
            <summary>
            Specifies url for menu item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabAnimationSettings.Next">
            <summary>
            Specifies the animation to appear while moving to next Tab content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabAnimationSettings.Previous">
            <summary>
            Specifies the animation to appear while moving to previous Tab content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabEvents.Added">
            <summary>
            The event will be fired after adding the item to the Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabEvents.Adding">
            <summary>
            The event will be fired before adding the item to the Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabEvents.Created">
            <summary>
            The event will be fired once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabEvents.Destroyed">
            <summary>
            The event will be fired when the component gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabEvents.Removed">
            <summary>
            The event will be fired after removing the item from the Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabEvents.Removing">
            <summary>
            The event will be fired before removing the item from the Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabEvents.Selected">
            <summary>
            The event will be fired after the item gets selected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabEvents.Selecting">
            <summary>
            The event will be fired before the item gets selected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabHeader.IconCss">
            <summary>
            Specifies the icon class that is used to render an icon in the Tab header.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabHeader.IconPosition">
            <summary>
            Options for positioning the icon in the Tab item header. This property depends on `iconCss` property.
            The possible values are:
            - Left: Places the icon to the `left` of the item.
            - Top: Places the icon on the `top` of the item.
            - Right: Places the icon to the `right` end of the item.
            - Bottom: Places the icon at the `bottom` of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabHeader.Text">
            <summary>
            Specifies the display text of the Tab item header.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabItem.Content">
            <summary>
            Specifies the content of Tab item, that is displayed when concern item header is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabItem.CssClass">
            <summary>
            Sets the CSS classes to the Tab item to customize its styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabItem.Disabled">
            <summary>
            Sets true to disable user interactions of the Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabItem.Header">
            <summary>
            The object used for configuring the Tab item header properties.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TabItem.HeaderTemplate">
            <summary>
            Specifies the header text of Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarEvents.Clicked">
            <summary>
            The event will be fired on clicking the Toolbar elements.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarEvents.Created">
            <summary>
            The event will be fired when the control is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarEvents.Destroyed">
            <summary>
            The event will be fired when the control gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.Align">
            <summary>
            Specifies the location for aligning Toolbar items on the Toolbar. Each command will be aligned according to the `align` property.
            Possible values are:
            - Left: To align commands to the left side of the Toolbar.
            - Center: To align commands at the center of the Toolbar.
            - Right: To align commands to the right side of the Toolbar.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.CssClass">
            <summary>
            Defines single/multiple classes (separated by space) to be used for customization of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.Disabled">
            <summary>
            Specifies whether an item should be disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.HtmlAttributes">
            <summary>
            Defines htmlAttributes used to add custom attributes to Toolbar command.
            Supports HTML attributes such as style, class, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.Id">
            <summary>
            Specifies the unique ID to be used with button or input element of Toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.Overflow">
            <summary>
            Specifies the Toolbar command display area when an element's content is too large to fit available space.
            This is applicable only to `popup` mode. Possible values are:
            - Show:  Always shows the item as the primary priority on the Toolbar.
            - Hide: Always shows the item as the secondary priority on the popup.
            - None: No priority for display, and as per normal order moves to popup when content exceeds.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.PrefixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned before the text content if text is available, otherwise the icon alone will be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.ShowAlwaysInPopup">
            <summary>
            Defines the priority of items to display it in popup always.
            It allows to maintain toolbar item on popup always but it does not work for toolbar priority items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.ShowTextOn">
            <summary>
            Specifies where the button text will be displayed on popup mode of the Toolbar.
            Possible values are:
            - Toolbar:  Text will be displayed on Toolbar only.
            - Overflow: Text will be displayed only when content overflows to popup.
            - Both: Text will be displayed on popup and Toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.SuffixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned after the text content if text is available.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.Template">
            <summary>
            Specifies the HTML element/element ID as a string that can be added as a Toolbar command.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.Text">
            <summary>
            Specifies the text to be displayed on the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.TooltipText">
            <summary>
            Specifies the text to be displayed on the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.Type">
            <summary>
            Specifies the types of command to be rendered in the Toolbar.
            Supported types are:
            - Button: Creates the Button control with its given properties like text, prefixIcon, etc.
            - Separator: Adds a horizontal line that separates the Toolbar commands.
            - Input: Creates an input element that is applicable to template rendering with Syncfusion controls like DropDownList,
            AutoComplete, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.ToolbarItem.Width">
            <summary>
            Specifies the width of the Toolbar button commands.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.OnActionFailure">
            <summary>
            Triggers when any TreeView action failed to fetch the desired results.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.Created">
            <summary>
            Triggers when the TreeView control is created successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.DataBound">
            <summary>
            Triggers when data source is populated in the TreeView.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.DataSourceChanged">
            <summary>
            Triggers when data source is changed in the TreeView. The data source will be changed after performing some operation like
            drag and drop, node editing, adding and removing node.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.Destroyed">
            <summary>
            Triggers when the TreeView control is destroyed successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.OnDrawNode">
            <summary>
            Triggers before the TreeView node is appended to the TreeView element. It helps to customize specific nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.OnKeyPress">
            <summary>
            Triggers when key press is successful. It helps to customize the operations at key press.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeChecked">
            <summary>
            Triggers when the TreeView node is checked/unchecked successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeChecking">
            <summary>
            Triggers before the TreeView node is to be checked/unchecked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeClicked">
            <summary>
            Triggers when the TreeView node is clicked successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeCollapsed">
            <summary>
            Triggers when the TreeView node collapses successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeCollapsing">
            <summary>
            Triggers before the TreeView node collapses.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.OnNodeDragStart">
            <summary>
            Triggers when the TreeView node drag (move) starts.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.OnNodeDragged">
            <summary>
            Triggers when the TreeView node drag (move) is stopped.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeDropped">
            <summary>
            Triggers when the TreeView node is dropped on target element successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeEdited">
            <summary>
            Triggers when the TreeView node is renamed successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeEditing">
            <summary>
            Triggers before the TreeView node is renamed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeExpanded">
            <summary>
            Triggers when the TreeView node expands successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeExpanding">
            <summary>
            Triggers before the TreeView node is to be expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeSelected">
            <summary>
            Triggers when the TreeView node is selected/unselected successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewEvents`1.NodeSelecting">
            <summary>
            Triggers before the TreeView node is selected/unselected.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewNodeAnimationSettings.Collapse">
            <summary>
            Specifies the animation that applies on collapsing the nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Navigations.TreeViewNodeAnimationSettings.Expand">
            <summary>
            Specifies the animation that applies on expanding the nodes.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Notifications.PositionX">
            <summary>
            Specifies the options for positioning the Toast in X axis.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Notifications.PositionY">
            <summary>
            Specifies the options for positioning the Toast in Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastAnimationsHide.Duration">
            <summary>
            Specifies the duration to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastAnimationsHide.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastAnimationsHide.Effect">
            <summary>
            Specifies the type of animation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastAnimationsShow.Duration">
            <summary>
            Specifies the duration to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastAnimationsShow.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastAnimationsShow.Effect">
            <summary>
            Specifies the type of animation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Animation">
            <summary>
            Specifies the animation configuration settings for showing and hiding the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Buttons">
            <summary>
            Specifies the collection of Toast action `buttons` to be rendered with the given
            Button model properties and its click action handler.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Content">
            <summary>
            Specifies the content to be displayed on the Toast.
            Accepts selectors, string values and HTML elements.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.CssClass">
            <summary>
            Defines single/multiple classes (separated by space) to be used for customization of Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.ExtendedTimeout">
            <summary>
            Specifies the Toast display time duration after interacting with the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Height">
            <summary>
            Specifies the height of the Toast in pixels/number/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Icon">
            <summary>
            Defines CSS classes to specify an icon for the Toast which is to be displayed at top left corner of the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.NewestOnTop">
            <summary>
            Specifies the newly created Toast message display order while multiple toast's are added to page one after another.
            By default, newly added Toast will be added after old Toast's.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Position">
            <summary>
            Specifies the position of the Toast message to be displayed within target container.
            In the case of multiple Toast display, new Toast position will not update on dynamic change of property values
            until the old Toast messages removed.
            X values are: Left , Right ,Center
            Y values are: Top , Bottom
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.ShowCloseButton">
            <summary>
            Specifies whether to show the close button in Toast message to close the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.ShowProgressBar">
            <summary>
            Specifies whether to show the progress bar to denote the Toast message display timeout.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Target">
            <summary>
            Specifies the target container where the Toast to be displayed.
            Based on the target, the positions such as `Left`, `Top` will be applied to the Toast.
            The default value is null, which refers the `document.body` element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Template">
            <summary>
            Specifies the HTML element/element ID as a string that can be displayed as a Toast.
            The given template is taken as preference to render the Toast, even if the built-in properties such as title and content are defined.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.TimeOut">
            <summary>
            Specifies the Toast display time duration on the page in milliseconds.
            - Once the time expires, Toast message will be removed.
            - Setting 0 as a time out value displays the Toast on the page until the user closes it manually.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Title">
            <summary>
            Specifies the title to be displayed on the Toast.
            Works only with string values.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Width">
            <summary>
            Specifies the width of the Toast in pixels/numbers/percentage. Number value is considered as pixels.
            In mobile devices, default width is considered as `100%`.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Hide(System.Object)">
            <summary>
            To Hide Toast element on a document.
            To Hide all toast element when passing 'All'.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Notifications.EjsToast.Show(Syncfusion.EJ2.Blazor.Notifications.ToastModel)">
            <summary>
            To show Toast element on a document with the relative position.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastAnimationSettings.Hide">
            <summary>
            Specifies the animation to appear while hiding the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastAnimationSettings.Show">
            <summary>
            Specifies the animation to appear while showing the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastButtonModelProp.Model">
            <summary>
            Specifies the Button component model properties to render the Toast action buttons.
            
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastEvents.OnOpen">
            <summary>
            Triggers the event before the toast shown.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastEvents.OnSanitizeHtml">
            <summary>
            Event triggers before sanitize the value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastEvents.OnClick">
            <summary>
            The event will be fired while clicking on the Toast.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastEvents.Closed">
            <summary>
            Trigger the event after the Toast hides.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastEvents.Created">
            <summary>
            Triggers the event after the Toast gets created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastEvents.Destroyed">
            <summary>
            Triggers the event after the Toast gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastEvents.Opened">
            <summary>
            Triggers the event after the Toast shown on the target container.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastPosition.X">
            <summary>
            Specifies the position of the Toast notification with respect to the target container's left edge.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Notifications.ToastPosition.Y">
            <summary>
            Specifies the position of the Toast notification with respect to the target container's top edge.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.AllowDragging">
            <summary>
            Specifies the value whether the dialog component can be dragged by the end-user.
            The dialog allows to drag by selecting the header and dragging it for re-position the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.AnimationSettings">
            <summary>
            Specifies the animation settings of the dialog component.
            The animation effect can be applied on open and close the dialog with duration and delay.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Buttons">
            <summary>
            Configures the action `buttons` that contains button properties with primary attributes and click events.
            One or more action buttons can be configured to the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.CloseOnEscape">
            <summary>
            Specifies the boolean value whether the dialog can be closed with the escape key
            that is used to control the dialog's closing behavior.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Content">
            <summary>
            Specifies the value that can be displayed in dialog's content area.
            It can be information, list, or other HTML elements.
            The content of dialog can be loaded with dynamic data such as database, AJAX content, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with root element of the dialog.
            One or more custom CSS classes can be added to a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.EnableResize">
            <summary>
            Specifies the value whether the dialog component can be resized by the end-user.
            If enableResize is true, the dialog component creates grip to resize it diagonal direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.FooterTemplate">
            <summary>
            Specifies the template value that can be displayed with dialog's footer area.
            This is optional property and can be used only when the footer is occupied with information or custom components.
            By default, the footer is configured with action [buttons](#buttons).
            If footer template is configured to dialog, the action buttons property will be disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Header">
            <summary>
            Specifies the value that can be displayed in the dialog's title area that can be configured with plain text or HTML elements.
            This is optional property and the dialog can be displayed without header, if the header property is null.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Height">
            <summary>
            Specifies the height of the dialog component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.IsModal">
            <summary>
            Specifies the Boolean value whether the dialog can be displayed as modal or non-modal.
             `Modal`: It creates overlay that disable interaction with the parent application and user should
               respond with modal before continuing with other applications.
             `Modeless`: It does not prevent user interaction with parent application.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.MinHeight">
            <summary>
            Specify the min-height of the dialog component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Position">
            <summary>
            Specifies the value where the dialog can be positioned within the document or target.
            The position can be represented with pre-configured positions or specific X and Y values.
             `X value`: left, center, right, or offset value.
             `Y value`: top, center, bottom, or offset value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.ShowCloseIcon">
            <summary>
            Specifies the value that represents whether the close icon is shown in the dialog component.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Target">
            <summary>
            Specifies the target element in which to display the dialog.
            The default value is null, which refers the `document.body` element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Visible">
            <summary>
            Specifies the value that represents whether the dialog component is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Width">
            <summary>
            Specifies the width of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsDialog.ZIndex">
            <summary>
            Specifies the z-order for rendering that determines whether the dialog is displayed in front or behind of another component.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Popups.EjsDialog.GetButtons(System.Nullable{System.Double})">
            <summary>
            Returns the dialog button instances.
            Based on that, you can dynamically change the button states.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Hide(System.EventArgs)">
            <summary>
            Closes the dialog if it is in visible state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Popups.EjsDialog.RefreshPosition">
            <summary>
            Refreshes the dialog's position when the user changes its header and footer height/width dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Popups.EjsDialog.Show(System.Nullable{System.Boolean})">
            <summary>
            Opens the dialog if it is in hidden state.
            To open the dialog with full screen width, set the parameter to true.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Animation">
            <summary>
            We can set the same or different animation option to Tooltip while it is in open or close state.
            Refer the documentation [here](https://ej2.syncfusion.com/documentation/tooltip/animation.html?lang=typescript)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.CloseDelay">
            <summary>
            It is used to close the Tooltip after a specified delay in milliseconds.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Content">
            <summary>
            It is used to display the content of Tooltip which can be both string and HTML Elements.
            Refer the documentation [here](https://ej2.syncfusion.com/documentation/tooltip/content.html?lang=typescript)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.CssClass">
            <summary>
            It is used to customize the Tooltip which accepts custom CSS class names that
             defines specific user-defined styles and themes to be applied on the Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Height">
            <summary>
            It is used to set the height of Tooltip component which accepts both string and number values.
            When Tooltip content gets overflow due to height value then the scroll mode will be enabled.
            Refer the documentation [here](https://ej2.syncfusion.com/documentation/tooltip/setting-dimension.html?lang=typescript)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.IsSticky">
            <summary>
            It is used to display the Tooltip in an open state until closed by manually.
            Refer the documentation [here](https://ej2.syncfusion.com/documentation/tooltip/open-mode.html?lang=typescript#sticky-mode)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.MouseTrail">
            <summary>
            It allows the Tooltip to follow the mouse pointer movement over the specified target element.
            Refer the documentation [here](https://ej2.syncfusion.com/documentation/tooltip/position.html?lang=typescript#mouse-trailing)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.OffsetX">
            <summary>
            It sets the space between the target and Tooltip element in X axis.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.OffsetY">
            <summary>
            It sets the space between the target and Tooltip element in Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.OpenDelay">
            <summary>
            It is used to open the Tooltip after the specified delay in milliseconds.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.OpensOn">
            <summary>
            It is used to determine the device mode to display the Tooltip content.
            If it is in desktop, it will show the Tooltip content when hovering on the target element.
            If it is in touch device, it will show the Tooltip content when tap and holding on the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Position">
            <summary>
            It is used to set the position of Tooltip element, with respect to Target element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.ShowTipPointer">
            <summary>
            It is used to show or hide the tip pointer of Tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Target">
            <summary>
            It is used to denote the target selector where the Tooltip need to be displayed.
            The target element is considered as parent container.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.TipPointerPosition">
            <summary>
            It is used to set the position of tip pointer on tooltip.
            When it sets to auto, the tip pointer auto adjusts within the space of target's length
             and does not point outside.
            Refer the documentation
             [here](https://ej2.syncfusion.com/documentation/tooltip/position.html?lang=typescript#tip-pointer-positioning)
             to know more about this property with demo.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Width">
            <summary>
            It is used to set the width of Tooltip component which accepts both string and number values.
            When set to auto, the Tooltip width gets auto adjusted to display its content within the viewable screen.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Closed">
            <summary>
            We can trigger `afterClose` event when the Tooltip Component gets closed.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Opened">
            <summary>
            We can trigger `afterOpen` event after the Tooltip Component gets opened.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.OnClose">
            <summary>
            We can trigger `beforeClose` event before the Tooltip hides from the screen. If returned false, then the Tooltip is no more hidden.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.OnCollision">
            <summary>
            We can trigger `beforeCollision` event for every collision fit calculation.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.OnOpen">
            <summary>
            We can trigger `beforeOpen` event before the Tooltip is displayed over the target element.
            When one of its arguments `cancel` is set to true, the Tooltip display can be prevented.
            This event is mainly used for the purpose of refreshing the Tooltip positions dynamically or to
             set customized styles in it and so on.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.OnRender">
            <summary>
            We can trigger `beforeRender` event before the Tooltip and its contents are added to the DOM.
            When one of its arguments `cancel` is set to true, the Tooltip can be prevented from rendering on the page.
            This event is mainly used for the purpose of customizing the Tooltip before it shows up on the screen.
            For example, to load the AJAX content or to set new animation effects on the Tooltip, this event can be opted.
            Refer the documentation
             [here](https://ej2.syncfusion.com/documentation/tooltip/content.html?lang=typescript#dynamic-content-via-ajax)
             to know more about this property with demo.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Created">
            <summary>
            We can trigger `created` event after the Tooltip component is created.
            <exclude/>
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Destroyed">
            <summary>
            We can trigger `destroyed` event when the Tooltip component is destroyed.
            <exclude/>
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Close(Syncfusion.EJ2.Blazor.Popups.TooltipAnimationSettings)">
            <summary>
            It is used to hide the Tooltip with specific animation effect.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Popups.EjsTooltip.Open(System.Object,Syncfusion.EJ2.Blazor.Popups.TooltipAnimationSettings)">
            <summary>
            It is used to show the Tooltip on the specified target with specific animation settings.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Popups.DialogEffect">
            <summary>
            Specifies the Dialog animation effects.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Popups.Position">
            <summary>
            Applicable positions where the Tooltip can be displayed over specific target elements.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Popups.TipPointerPosition">
            <summary>
            Applicable tip positions attached to the Tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Popups.ActionOnScrollType">
            <summary>
            action on scroll type.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Popups.CollisionType">
            <summary>
            Collision type.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Popups.TargetType">
            <summary>
            Target element type.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Popups.SpinnerType">
            <summary>
            Defines the type of spinner.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Popups.Effect">
            <summary>
            Animation effects that are applicable for Tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.EJ2.Blazor.Popups.OpenMode">
            <summary>
            Set of open modes available for Tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogAnimationSettings.Delay">
            <summary>
            Specifies the delay in milliseconds to start animation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogAnimationSettings.Duration">
            <summary>
            Specifies the duration in milliseconds that the animation takes to open or close the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogAnimationSettings.Effect">
            <summary>
            Specifies the animation name that should be applied on open and close the dialog.
            If user sets Fade animation, the dialog will open with `FadeIn` effect and close with `FadeOut` effect.
            The following are the list of animation effects available to configure to the dialog:
            1. Fade
            2. FadeZoom
            3. FlipLeftDown
            4. FlipLeftUp
            5. FlipRightDown
            6. FlipRightUp
            7. FlipXDown
            8. FlipXUp
            9. FlipYLeft
            10. FlipYRight
            11. SlideBottom
            12. SlideLeft
            13. SlideRight
            14. SlideTop
            15. Zoom
            16. None
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.OnClose">
            <summary>
            Event triggers before the dialog is closed.
            If you cancel this event, the dialog remains opened.
            Set the cancel argument to true to cancel the closure of a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.OnOpen">
            <summary>
            Event triggers when the dialog is being opened.
            If you cancel this event, the dialog remains closed.
            Set the cancel argument to true to cancel the open of a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.OnSanitizeHtml">
            <summary>
            Event triggers before sanitize the value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.Closed">
            <summary>
            Event triggers after the dialog has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.Created">
            <summary>
            Event triggers when the dialog is created.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.Destroyed">
            <summary>
            Event triggers when the dialog is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.OnDrag">
            <summary>
            Event triggers when the user drags the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.OnDragStart">
            <summary>
            Event triggers when the user begins dragging the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.OnDragStop">
            <summary>
            Event triggers when the user stop dragging the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.Opened">
            <summary>
            Event triggers when a dialog is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.OnOverlayClick">
            <summary>
            Event triggers when the overlay of dialog is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.OnResizeStart">
            <summary>
            Event triggers when the user begins to resize a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.OnResizeStop">
            <summary>
            Event triggers when the user stop to resize a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogEvents.Resizing">
            <summary>
            Event triggers when the user resize the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogPositionData.X">
            <summary>
            specify the offset left value
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogPositionData.Y">
            <summary>
            specify the offset top value.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButton.ButtonModel">
            <summary>
            Specifies the button component properties to render the dialog buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButton.Type">
            <summary>
            Specify the type of the button.
            Possible values are Button, Submit and Reset.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButtonModel.Content">
            <summary>
            Defines the text `content` of the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButtonModel.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the Button element. The Button types, styles, and
            size can be defined by using
            [`this`](http://ej2.syncfusion.com/documentation/button/howto.html?lang=typescript#create-a-block-button).
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButtonModel.Disabled">
            <summary>
            Specifies a value that indicates whether the Button is `disabled` or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButtonModel.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButtonModel.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButtonModel.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButtonModel.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the Button that is used to include an icon.
            Buttons can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButtonModel.IconPosition">
            <summary>
            Positions the icon before/after the text content in the Button.
            The possible values are:
             Left: The icon will be positioned to the left of the text content.
             Right: The icon will be positioned to the right of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButtonModel.IsPrimary">
            <summary>
            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Popups.DialogButtonModel.IsToggle">
            <summary>
            Makes the Button toggle, when set to `true`. When you click it, the state changes from normal to active.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Spinner.SetSpinnerModel.CssClass">
            <summary>
            Sets the CSS classes to root element of the Spinner which helps to customize the complete UI styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Spinner.SetSpinnerModel.Type">
            <summary>
            Specify the type of the Spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Spinner.EjsSpinner.Target">
            <summary>
            Target element to the Spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Spinner.EjsSpinner.Width">
            <summary>
            To set the width of the Spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Spinner.EjsSpinner.Label">
            <summary>
            To set the label to the Spinner element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Spinner.EjsSpinner.CssClass">
            <summary>
            Sets the CSS classes to root element of the Spinner which helps to customize the complete UI styles.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.Spinner.EjsSpinner.Type">
            <summary>
            Specify the type of the Spinner.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Spinner.EjsSpinner.CreateSpinner">
            <summary>
            Invoke the create spinner method.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Spinner.EjsSpinner.ShowSpinner(System.String)">
            <summary>
            Invoke the show spinner method.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Spinner.EjsSpinner.HideSpinner(System.String)">
            <summary>
            Invoke the hide spinner method.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.Spinner.EjsSpinner.SetSpinner(Syncfusion.EJ2.Blazor.Spinner.SetSpinnerModel)">
            <summary>
            Invoke the set spinner method.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.Content">
            <summary>
            Defines the content of the DropDownButton element that can either be a text or HTML elements.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the DropDownButton element. The
            DropDownButton size and styles can be customized by using this.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.Disabled">
            <summary>
            Specifies a value that indicates whether the DropDownButton is `disabled` or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the DropDownButton that is used to
            include an icon. DropDownButton can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.IconPosition">
            <summary>
            Positions the icon before/top of the text content in the DropDownButton. The possible values are:
             Left: The icon will be positioned to the left of the text content.
             Top: The icon will be positioned to the top of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.Items">
            <summary>
            Specifies action items with its properties which will be rendered as DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.Target">
            <summary>
            Allows to specify the DropDownButton popup item element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.AddItems(System.Object,System.String)">
            <summary>
            Adds a new item to the menu. By default, new item appends to the list as the last item,
            but you can insert based on the text parameter.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.FocusIn">
            <summary>
            Sets the focus to DropDownButton
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.GetPersistData">
            <summary>
            Get the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.RemoveItems(System.Object)">
            <summary>
            Removes the items from the menu.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsDropDownButton.Toggle">
            <summary>
            To open/close DropDownButton popup based on current state of the DropDownButton.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.Content">
            <summary>
            Defines the content of the SplitButton primary action button can either be a text or HTML elements.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the SplitButton element. The SplitButton
            size and styles can be customized by using this.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.Disabled">
            <summary>
            Specifies a value that indicates whether the SplitButton is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the SplitButton that is used to include an
            icon. SplitButton can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.IconPosition">
            <summary>
            Positions the icon before/top of the text content in the SplitButton. The possible values are
             Left: The icon will be positioned to the left of the text content.
             Top: The icon will be positioned to the top of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.Items">
            <summary>
            Specifies action items with its properties which will be rendered as SplitButton secondary button popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.Target">
            <summary>
            Allows to specify the SplitButton popup item element.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.FocusIn">
            <summary>
            Sets the focus to SplitButton
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.GetPersistData">
            <summary>
            Get the properties to be maintained in the persisted state.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.OnPropertyChanged(Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonModel,Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonModel)">
            <summary>
            Called internally if any of the property value changed.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsSplitButton.Toggle">
            <summary>
            To open/close SplitButton popup based on current state of the SplitButton.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonEvents.OnClose">
            <summary>
            Triggers before closing the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonEvents.OnItemRender">
            <summary>
            Triggers while rendering each Popup item of DropDownButton.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonEvents.OnOpen">
            <summary>
            Triggers before opening the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonEvents.Closed">
            <summary>
            Triggers while closing the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonEvents.Opened">
            <summary>
            Triggers while opening the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonEvents.ItemSelected">
            <summary>
            Triggers while selecting action item in DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonItem.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the item that is used to include an icon.
            Action item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonItem.Id">
            <summary>
            Specifies the id for item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonItem.Separator">
            <summary>
            Specifies separator between the items. Separator are horizontal lines used to group action items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonItem.Text">
            <summary>
            Specifies text for item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.DropDownButtonItem.Url">
            <summary>
            Specifies url for item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.AnimationSettings">
            <summary>
            Specifies the animation settings.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.Content">
            <summary>
            Defines the text `content` of the progress button element.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.CssClass">
            <summary>
            Specifies the root CSS class of the progress button that allows customization of component’s appearance.
            The progress button types, styles, and size can be achieved by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.Disabled">
            <summary>
            Enables or disables the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.Duration">
            <summary>
            Specifies the duration of progression in the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.EnableProgress">
            <summary>
            Enables or disables the background filler UI in the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the progress button that is used to include an icon.
            Progress button can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.IconPosition">
            <summary>
            Positions an icon in the progress button. The possible values are:
             Left: The icon will be positioned to the left of the text content.
             Right: The icon will be positioned to the right of the text content.
             Top: The icon will be positioned at the top of the text content.
             Bottom: The icon will be positioned at the bottom of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.IsPrimary">
            <summary>
            Allows the appearance of the progress button to be enhanced and visually appealing when set to `true`.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.IsToggle">
            <summary>
            Makes the progress button toggle, when set to `true`. When you click it, the state changes from normal to active.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.SpinSettings">
            <summary>
            Specifies a spinner and its related properties.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.Click">
            <summary>
            Click the button element
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.FocusIn">
            <summary>
            Sets the focus to ProgressButton
            its native method
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.ProgressComplete">
            <summary>
            Complete the button progress.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.Start(System.Nullable{System.Double})">
            <summary>
            Starts the button progress at the specified percent.
            </summary>
        </member>
        <member name="M:Syncfusion.EJ2.Blazor.SplitButtons.EjsProgressButton.Stop">
            <summary>
            Stops the button progress.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonAnimationSettings.Duration">
            <summary>
            Specifies the duration taken to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonAnimationSettings.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonAnimationSettings.Effect">
            <summary>
            Specifies the effect of animation.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonEvents.OnBegin">
            <summary>
            Triggers when the progress starts.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonEvents.OnEnd">
            <summary>
            Triggers when the progress is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonEvents.OnFailure">
            <summary>
            Triggers when the progress is incomplete.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonEvents.Progressing">
            <summary>
            Triggers in specified intervals.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonSpinSettings.Position">
            <summary>
            Specifies the position of a spinner in the progress button. The possible values are:
             Left: The spinner will be positioned to the left of the text content.
             Right: The spinner will be positioned to the right of the text content.
             Top: The spinner will be positioned at the top of the text content.
             Bottom: The spinner will be positioned at the bottom of the text content.
             Center: The spinner will be positioned at the center of the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonSpinSettings.Template">
            <summary>
            Specifies the template content to be displayed in a spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.ProgressButtonSpinSettings.Width">
            <summary>
            Sets the width of a spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonEvents.OnClose">
            <summary>
            Triggers before closing the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonEvents.OnItemRender">
            <summary>
            Triggers while rendering each Popup item of SplitButton.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonEvents.OnOpen">
            <summary>
            Triggers before opening the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonEvents.Clicked">
            <summary>
            Triggers when the primary button of SplitButton has been clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonEvents.Closed">
            <summary>
            Triggers while closing the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonEvents.Opened">
            <summary>
            Triggers while opening the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonEvents.ItemSelected">
            <summary>
            Triggers while selecting action item of SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonItem.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the item that is used to include an icon.
            Action item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonItem.Id">
            <summary>
            Specifies the id for item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonItem.Separator">
            <summary>
            Specifies separator between the items. Separator are horizontal lines used to group action items.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonItem.Text">
            <summary>
            Specifies text for item.
            </summary>
        </member>
        <member name="P:Syncfusion.EJ2.Blazor.SplitButtons.SplitButtonItem.Url">
            <summary>
            Specifies url for item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
    </members>
</doc>
